[{"path":"https://nanx.me/protr/CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (https://contributor-covenant.org), version 1.0.0, available https://contributor-covenant.org/version/1/0/0/.","code":""},{"path":"https://nanx.me/protr/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to protr","title":"Contributing to protr","text":"üëçüéâ First , thanks taking time contribute! üéâüëç contribute project : Filing bug report feature request issue. Suggesting change via pull request.","code":""},{"path":"https://nanx.me/protr/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contributing to protr","text":"file issue possible bug, please try include: Relevant package versions Necessary code data reproduce issue","code":""},{"path":"https://nanx.me/protr/CONTRIBUTING.html","id":"pull-requests","dir":"","previous_headings":"","what":"Pull Requests","title":"Contributing to protr","text":"suggest change via pull requests, please: Fork repository GitHub account. Clone forked repository local machine, make changes. Commit push changes GitHub. Create pull request.","code":""},{"path":"https://nanx.me/protr/articles/protr.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"protr package offers unique comprehensive toolkit generating various numerical representation schemes protein sequences. descriptors included extensively utilized bioinformatics chemogenomics research. commonly used descriptors listed protr include amino acid composition, autocorrelation, CTD, conjoint traid, quasi-sequence order, pseudo amino acid composition, profile-based descriptors derived Position-Specific Scoring Matrix (PSSM). descriptors proteochemometric (PCM) modeling, includes scales-based descriptors derived principal components analysis, factor analysis, multidimensional scaling, amino acid properties (AAindex), 20+ classes 2D 3D molecular descriptors (Topological, WHIM, VHSE, etc.), BLOSUM/PAM matrix-derived descriptors. protr package also implemented parallelized similarity computation derived pairwise protein sequence alignment Gene Ontology (GO) semantic similarity measures. ProtrWeb, web application built protr, can accessed http://protr.org. find protr useful research, please feel free cite paper: Nan Xiao, Dong-Sheng Cao, Min-Feng Zhu, Qing-Song Xu. (2015). protr/ProtrWeb: R package web server generating various numerical representation schemes protein sequences. Bioinformatics 31 (11), 1857-1859. BibTeX entry:","code":"@article{Xiao2015,   author  = {Xiao, Nan and Cao, Dong-Sheng and Zhu, Min-Feng and Xu, Qing-Song.},   title   = {protr/{ProtrWeb}: {R} package and web server for generating various numerical representation schemes of protein sequences},   journal = {Bioinformatics},   year    = {2015},   volume  = {31},   number  = {11},   pages   = {1857--1859},   doi     = {10.1093/bioinformatics/btv042} }"},{"path":"https://nanx.me/protr/articles/protr.html","id":"an-example-predictive-modeling-workflow","dir":"Articles","previous_headings":"","what":"An example predictive modeling workflow","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"use subcellular localization dataset human proteins presented Chou Shen (2008) demonstrate basic usage protr. complete dataset includes 3,134 protein sequences (2,750 different proteins), classified 14 human subcellular locations. selected two classes proteins benchmark dataset. Class 1 contains 325 extracell proteins, class 2 includes 307 mitochondrion proteins. aim build random forest classification model classify two types proteins. First, load protr package, read protein sequences stored two separated FASTA files readFASTA(): read protein sequences stored PDB format files, use readPDB() instead. loaded sequences stored two lists R, component list character string representing one protein sequence. case, 325 extracell protein sequences 306 mitonchon protein sequences: ensure protein sequences 20 standard amino acid types usually required descriptor computation, use protcheck() function amino acid type sanity check remove non-standard sequences: Two protein sequences removed class. remaining sequences, calculate Type II PseAAC descriptor, .e., amphiphilic pseudo amino acid composition (APseAAC) descriptor (Chou, 2005) make class labels classification modeling. protr, functions commonly used descriptors protein sequences proteochemometric (PCM) modeling descriptors named extract...(). Next, split data 75% training set 25% test set. train random forest classification model training set 5-fold cross-validation, using randomForest package. training result : model trained training set, predict test set plot ROC curve pROC package, shown Figure 1. area ROC curve (AUC) : Figure 1: ROC curve test set protein subcellular localization data","code":"library(\"protr\")  # load FASTA files # (system.file is for accessing example file in protr package, # replace it with your path) extracell <- readFASTA(system.file(   \"protseq/extracell.fasta\",   package = \"protr\" )) mitonchon <- readFASTA(system.file(   \"protseq/mitochondrion.fasta\",   package = \"protr\" )) length(extracell) ## [1] 325 length(mitonchon) ## [1] 306 extracell <- extracell[(sapply(extracell, protcheck))] mitonchon <- mitonchon[(sapply(mitonchon, protcheck))] length(extracell) ## [1] 323 length(mitonchon) ## [1] 304 # calculate APseAAC descriptors x1 <- t(sapply(extracell, extractAPAAC)) x2 <- t(sapply(mitonchon, extractAPAAC)) x <- rbind(x1, x2)  # make class labels labels <- as.factor(c(rep(0, length(extracell)), rep(1, length(mitonchon)))) set.seed(1001)  # split training and test set tr.idx <- c(   sample(1:nrow(x1), round(nrow(x1) * 0.75)),   sample(nrow(x1) + 1:nrow(x2), round(nrow(x2) * 0.75)) ) te.idx <- setdiff(1:nrow(x), tr.idx)  x.tr <- x[tr.idx, ] x.te <- x[te.idx, ] y.tr <- labels[tr.idx] y.te <- labels[te.idx] library(\"randomForest\") rf.fit <- randomForest(x.tr, y.tr, cv.fold = 5) rf.fit ## Call: ##  randomForest(x = x.tr, y = y.tr, cv.fold = 5) ##                Type of random forest: classification ##                      Number of trees: 500 ## No. of variables tried at each split: 8 ## ##         OOB estimate of  error rate: 25.11% ## Confusion matrix: ##     0   1 class.error ## 0 196  46   0.1900826 ## 1  72 156   0.3157895 # predict on test set rf.pred <- predict(rf.fit, newdata = x.te, type = \"prob\")[, 1]  # plot ROC curve library(\"pROC\") plot.roc(y.te, rf.pred, grid = TRUE, print.auc = TRUE) ## Call: ## plot.roc.default(x = y.te, predictor = rf.pred, col = \"#0080ff\", ##                  grid = TRUE, print.auc = TRUE) ## ## Data: rf.pred in 81 controls (y.te 0) > 76 cases (y.te 1). ## Area under the curve: 0.8697"},{"path":"https://nanx.me/protr/articles/protr.html","id":"package-overview","dir":"Articles","previous_headings":"","what":"Package overview","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"protr package (Xiao et al., 2015) implemented state---art protein sequence descriptors R. Generally, type descriptors (features) can calculated function named extractX() protr package, X stands abbrevation descriptor name. descriptors : extractAAC() - Amino acid composition extractDC() - Dipeptide composition extractTC() - Tripeptide composition extractMoreauBroto() - Normalized Moreau-Broto autocorrelation extractMoran() - Moran autocorrelation extractGeary() - Geary autocorrelation extractCTDC() - Composition extractCTDT() - Transition extractCTDD() - Distribution extractCTriad() - Conjoint triad descriptors extractSOCN() - Sequence-order-coupling number extractQSO() - Quasi-sequence-order descriptors extractPAAC() - Pseudo-amino acid composition (PseAAC) extractAPAAC() - Amphiphilic pseudo-amino acid composition (APseAAC) extractPSSM() extractPSSMAcc() extractPSSMFeature() descriptors commonly used Proteochemometric Modeling (PCM) implemented protr include: extractProtFP(), extractProtFPGap() - Scales-based descriptors derived amino acid properties AAindex (.k.. Protein Fingerprint) extractDescScales() - Scales-based descriptors derived 20+ classes 2D 3D molecular descriptors (Topological, WHIM, VHSE, etc.) extractFAScales() - Scales-based descriptors derived Factor Analysis extractMDSScales() - Scales-based descriptors derived Multidimensional Scaling extractBLOSUM() - BLOSUM PAM matrix-derived descriptors protr package integrates function parallelized similarity score computation derived local global protein sequence alignment list protein sequences, sequence alignment computation provided Biostrings, corresponding functions listed protr package include: twoSeqSim() - Similarity calculation derived sequence alignment two protein sequences parSeqSim() - Parallelized pairwise similarity calculation list protein sequences (-memory version) parSeqSimDisk() - Parallelized pairwise similarity calculation list protein sequences (disk-based version) crossSetSim() - Parallelized pairwise similarity calculation two sets protein sequences (-memory version) protr package also integrates function parallelized similarity score computation derived Gene Ontology (GO) semantic similarity measures list GO terms / Entrez Gene IDs, GO similarity computation provided GOSemSim, corresponding functions listed protr package include: twoGOSim() - Similarity calculation derived GO-terms semantic similarity measures two GO terms / Entrez Gene IDs; parGOSim() - Pairwise similarity calculation list GO terms / Entrez Gene IDs. use parSeqSim() function, suggest users install packages foreach doParallel first, order make parallelized pairwise similarity computation available. following sections, introduce descriptors function usage order.","code":""},{"path":"https://nanx.me/protr/articles/protr.html","id":"commonly-used-descriptors","dir":"Articles","previous_headings":"","what":"Commonly used descriptors","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"Note: Users need intelligently evaluate underlying details descriptors provided, instead using protr data blindly, especially descriptor types flexibility. wise users use negative positive control comparisons relevant help guide interpretation results. protein peptide sequence \\(N\\) amino acid residues can generally represented \\(\\{\\,R_1, R_2, \\ldots, R_n\\,\\}\\), \\(R_i\\) represents residue \\(\\)-th position sequence. labels \\(\\) \\(j\\) used index amino acid position sequence, \\(r\\), \\(s\\), \\(t\\) used represent amino acid type. computed descriptors roughly categorized 4 groups according major applications. protein sequence can partitioned equally segments. descriptors designed complete sequence, can often applied individual segment.","code":""},{"path":"https://nanx.me/protr/articles/protr.html","id":"amino-acid-composition-descriptor","dir":"Articles","previous_headings":"Commonly used descriptors","what":"Amino acid composition descriptor","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"amino acid composition describes fraction amino acid type within protein sequence. fractions 20 natural amino acids calculated : \\[ f(r) = \\frac{N_r}{N} \\quad r = 1, 2, \\ldots, 20. \\] \\(N_r\\) number amino acid type \\(r\\) \\(N\\) length sequence. described , can use function extractAAC() extract descriptors (features) protein sequences: , function readFASTA() loaded single protein sequence (P00750, Tissue-type plasminogen activator) FASTA format file. extracted AAC descriptors extractAAC(). result returned named vector, whose elements tagged name amino acid.","code":"library(\"protr\")  x <- readFASTA(system.file(   \"protseq/P00750.fasta\",   package = \"protr\" ))[[1]]  extractAAC(x) #>          A          R          N          D          C          E          Q  #> 0.06405694 0.07117438 0.03914591 0.05160142 0.06761566 0.04804270 0.04804270  #>          G          H          I          L          K          M          F  #> 0.08185053 0.03024911 0.03558719 0.07651246 0.03914591 0.01245552 0.03202847  #>          P          S          T          W          Y          V  #> 0.05338078 0.08896797 0.04448399 0.02313167 0.04270463 0.04982206"},{"path":"https://nanx.me/protr/articles/protr.html","id":"dipeptide-composition-descriptor","dir":"Articles","previous_headings":"Commonly used descriptors","what":"Dipeptide composition descriptor","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"Dipeptide composition gives 400-dimensional descriptor, defined : \\[ f(r, s) = \\frac{N_{rs}}{N - 1} \\quad r, s = 1, 2, \\ldots, 20. \\] \\(N_{rs}\\) number dipeptide represented amino acid type \\(r\\) type \\(s\\). Similar extractAAC(), use extractDC() compute descriptors: showed first 30 elements result vector omitted rest result. element names returned vector self-explanatory .","code":"dc <- extractDC(x) head(dc, n = 30L) #>          AA          RA          NA          DA          CA          EA  #> 0.003565062 0.003565062 0.000000000 0.007130125 0.003565062 0.003565062  #>          QA          GA          HA          IA          LA          KA  #> 0.007130125 0.007130125 0.001782531 0.003565062 0.001782531 0.001782531  #>          MA          FA          PA          SA          TA          WA  #> 0.000000000 0.005347594 0.003565062 0.007130125 0.003565062 0.000000000  #>          YA          VA          AR          RR          NR          DR  #> 0.000000000 0.000000000 0.003565062 0.007130125 0.005347594 0.001782531  #>          CR          ER          QR          GR          HR          IR  #> 0.005347594 0.005347594 0.000000000 0.007130125 0.001782531 0.003565062"},{"path":"https://nanx.me/protr/articles/protr.html","id":"tripeptide-composition-descriptor","dir":"Articles","previous_headings":"Commonly used descriptors","what":"Tripeptide composition descriptor","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"Tripeptide composition gives 8000-dimensional descriptor, defined : \\[ f(r, s, t) = \\frac{N_{rst}}{N - 2} \\quad r, s, t = 1, 2, \\ldots, 20 \\] \\(N_{rst}\\) number tripeptides represented amino acid type \\(r\\), \\(s\\), \\(t\\). function extractTC(), can easily obtain length-8000 descriptor, save space, also omitted long outputs:","code":"tc <- extractTC(x) head(tc, n = 36L) #>         AAA         RAA         NAA         DAA         CAA         EAA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QAA         GAA         HAA         IAA         LAA         KAA  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MAA         FAA         PAA         SAA         TAA         WAA  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         YAA         VAA         ARA         RRA         NRA         DRA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CRA         ERA         QRA         GRA         HRA         IRA  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         LRA         KRA         MRA         FRA         PRA         SRA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000"},{"path":"https://nanx.me/protr/articles/protr.html","id":"autocorrelation-descriptors","dir":"Articles","previous_headings":"Commonly used descriptors","what":"Autocorrelation descriptors","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"Autocorrelation descriptors defined based distribution amino acid properties along sequence. amino acid properties used various types amino acids index (Retrieved AAindex database, see Kawashima et al. (1999), Kawashima Kanehisa (2000), Kawashima et al. (2008); see Figure 2 illustrated example). Three types autocorrelation descriptors defined described . amino acid indices centralized standardized calculation, .e. \\[ P_r = \\frac{P_r - \\bar{P}}{\\sigma} \\] \\(\\bar{P}\\) average property 20 amino acids: \\[ \\bar{P} = \\frac{\\sum_{r=1}^{20} P_r}{20} \\quad \\textrm{} \\quad \\sigma = \\sqrt{\\frac{1}{2} \\sum_{r=1}^{20} (P_r - \\bar{P})^2} \\] Figure 2: illustrated example AAIndex database","code":""},{"path":"https://nanx.me/protr/articles/protr.html","id":"normalized-moreau-broto-autocorrelation-descriptors","dir":"Articles","previous_headings":"Commonly used descriptors > Autocorrelation descriptors","what":"Normalized Moreau-Broto autocorrelation descriptors","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"protein sequences, Moreau-Broto autocorrelation descriptors can defined : \\[ AC(d) = \\sum_{=1}^{N-d} P_i P_{+ d} \\quad d = 1, 2, \\ldots, \\textrm{nlag} \\] \\(d\\) called lag autocorrelation; \\(P_i\\) \\(P_{+d}\\) properties amino acids position \\(\\) \\(+d\\); \\(\\textrm{nlag}\\) maximum value lag. normalized Moreau-Broto autocorrelation descriptors defined : \\[ ATS(d) = \\frac{AC(d)}{N-d} \\quad d = 1, 2, \\ldots, \\textrm{nlag} \\] corresponding function descriptor extractMoreauBroto(). typical call : eight default properties used : AccNo. CIDH920105 - Normalized Average Hydrophobicity Scales AccNo. BHAR880101 - Average Flexibility Indices AccNo. CHAM820101 - Polarizability Parameter AccNo. CHAM820102 - Free Energy Solution Water, kcal/mole AccNo. CHOC760101 - Residue Accessible Surface Area Tripeptide AccNo. BIGC670101 - Residue Volume AccNo. CHAM810101 - Steric Parameter AccNo. DAYM780201 - Relative Mutability Users can change property names AAindex database argument props. AAindex data shipped protr can loaded data(AAindex), detailed information property. argument customprops nlag, users can specify properties lag value calculate . example: standard input format props customprops, see ?extractMoreauBroto details.","code":"moreau <- extractMoreauBroto(x) head(moreau, n = 36L) #>  CIDH920105.lag1  CIDH920105.lag2  CIDH920105.lag3  CIDH920105.lag4  #>      0.081573213     -0.016064817     -0.015982990     -0.025739038  #>  CIDH920105.lag5  CIDH920105.lag6  CIDH920105.lag7  CIDH920105.lag8  #>      0.079058632     -0.042771564     -0.036320847      0.024087298  #>  CIDH920105.lag9 CIDH920105.lag10 CIDH920105.lag11 CIDH920105.lag12  #>     -0.005273958      0.052274763      0.082170073      0.005419919  #> CIDH920105.lag13 CIDH920105.lag14 CIDH920105.lag15 CIDH920105.lag16  #>      0.083292042      0.004810584      0.001872446     -0.001531495  #> CIDH920105.lag17 CIDH920105.lag18 CIDH920105.lag19 CIDH920105.lag20  #>     -0.011917230      0.071161551      0.033473197      0.026882737  #> CIDH920105.lag21 CIDH920105.lag22 CIDH920105.lag23 CIDH920105.lag24  #>      0.073075402      0.115272790      0.041517897     -0.027025993  #> CIDH920105.lag25 CIDH920105.lag26 CIDH920105.lag27 CIDH920105.lag28  #>      0.033477388     -0.003245255      0.078117010     -0.028177304  #> CIDH920105.lag29 CIDH920105.lag30  BHAR880101.lag1  BHAR880101.lag2  #>      0.046695832      0.020584423      0.052740185      0.030804784  #>  BHAR880101.lag3  BHAR880101.lag4  BHAR880101.lag5  BHAR880101.lag6  #>      0.037170476     -0.058993771      0.070641780     -0.089192490 # Define 3 custom properties myprops <- data.frame(   AccNo = c(\"MyProp1\", \"MyProp2\", \"MyProp3\"),   A = c(0.62, -0.5, 15), R = c(-2.53, 3, 101),   N = c(-0.78, 0.2, 58), D = c(-0.9, 3, 59),   C = c(0.29, -1, 47), E = c(-0.74, 3, 73),   Q = c(-0.85, 0.2, 72), G = c(0.48, 0, 1),   H = c(-0.4, -0.5, 82), I = c(1.38, -1.8, 57),   L = c(1.06, -1.8, 57), K = c(-1.5, 3, 73),   M = c(0.64, -1.3, 75), F = c(1.19, -2.5, 91),   P = c(0.12, 0, 42), S = c(-0.18, 0.3, 31),   T = c(-0.05, -0.4, 45), W = c(0.81, -3.4, 130),   Y = c(0.26, -2.3, 107), V = c(1.08, -1.5, 43) )  # Use 4 properties in the AAindex database, and 3 cutomized properties moreau2 <- extractMoreauBroto(   x,   customprops = myprops,   props = c(     \"CIDH920105\", \"BHAR880101\",     \"CHAM820101\", \"CHAM820102\",     \"MyProp1\", \"MyProp2\", \"MyProp3\"   ) )  head(moreau2, n = 36L) #>  CIDH920105.lag1  CIDH920105.lag2  CIDH920105.lag3  CIDH920105.lag4  #>      0.081573213     -0.016064817     -0.015982990     -0.025739038  #>  CIDH920105.lag5  CIDH920105.lag6  CIDH920105.lag7  CIDH920105.lag8  #>      0.079058632     -0.042771564     -0.036320847      0.024087298  #>  CIDH920105.lag9 CIDH920105.lag10 CIDH920105.lag11 CIDH920105.lag12  #>     -0.005273958      0.052274763      0.082170073      0.005419919  #> CIDH920105.lag13 CIDH920105.lag14 CIDH920105.lag15 CIDH920105.lag16  #>      0.083292042      0.004810584      0.001872446     -0.001531495  #> CIDH920105.lag17 CIDH920105.lag18 CIDH920105.lag19 CIDH920105.lag20  #>     -0.011917230      0.071161551      0.033473197      0.026882737  #> CIDH920105.lag21 CIDH920105.lag22 CIDH920105.lag23 CIDH920105.lag24  #>      0.073075402      0.115272790      0.041517897     -0.027025993  #> CIDH920105.lag25 CIDH920105.lag26 CIDH920105.lag27 CIDH920105.lag28  #>      0.033477388     -0.003245255      0.078117010     -0.028177304  #> CIDH920105.lag29 CIDH920105.lag30  BHAR880101.lag1  BHAR880101.lag2  #>      0.046695832      0.020584423      0.052740185      0.030804784  #>  BHAR880101.lag3  BHAR880101.lag4  BHAR880101.lag5  BHAR880101.lag6  #>      0.037170476     -0.058993771      0.070641780     -0.089192490"},{"path":"https://nanx.me/protr/articles/protr.html","id":"moran-autocorrelation-descriptors","dir":"Articles","previous_headings":"Commonly used descriptors > Autocorrelation descriptors","what":"Moran autocorrelation descriptors","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"protein sequences, Moran autocorrelation descriptors can defined : \\[ (d) = \\frac{\\frac{1}{N-d} \\sum_{=1}^{N-d} (P_i - \\bar{P}') (P_{+d} - \\bar{P}')}{\\frac{1}{N} \\sum_{=1}^{N} (P_i - \\bar{P}')^2} \\quad d = 1, 2, \\ldots, 30 \\] \\(d\\), \\(P_i\\), \\(P_{+d}\\) defined way first place; \\(\\bar{P}'\\) considered property \\(P\\) along sequence, .e., \\[ \\bar{P}' = \\frac{\\sum_{=1}^N P_i}{N} \\] \\(d\\), \\(P\\), \\(P_i\\) \\(P_{+d}\\), \\(\\textrm{nlag}\\) meaning . extractMoran() (identical parameters extractMoreauBroto()), can compute Moran autocorrelation descriptors (print first 36 elements):","code":"# Use the 3 custom properties defined before # and 4 properties in the AAindex database moran <- extractMoran(   x,   customprops = myprops,   props = c(     \"CIDH920105\", \"BHAR880101\",     \"CHAM820101\", \"CHAM820102\",     \"MyProp1\", \"MyProp2\", \"MyProp3\"   ) )  head(moran, n = 36L) #>  CIDH920105.lag1  CIDH920105.lag2  CIDH920105.lag3  CIDH920105.lag4  #>      0.062895724     -0.044827681     -0.045065117     -0.055955678  #>  CIDH920105.lag5  CIDH920105.lag6  CIDH920105.lag7  CIDH920105.lag8  #>      0.060586377     -0.074128412     -0.067308852     -0.001293384  #>  CIDH920105.lag9 CIDH920105.lag10 CIDH920105.lag11 CIDH920105.lag12  #>     -0.033747588      0.029392193      0.061789800     -0.023368437  #> CIDH920105.lag13 CIDH920105.lag14 CIDH920105.lag15 CIDH920105.lag16  #>      0.062769417     -0.024912264     -0.028298043     -0.031584063  #> CIDH920105.lag17 CIDH920105.lag18 CIDH920105.lag19 CIDH920105.lag20  #>     -0.043466730      0.047830694      0.005883901     -0.001769769  #> CIDH920105.lag21 CIDH920105.lag22 CIDH920105.lag23 CIDH920105.lag24  #>      0.049334048      0.096427969      0.015147594     -0.060092509  #> CIDH920105.lag25 CIDH920105.lag26 CIDH920105.lag27 CIDH920105.lag28  #>      0.007549152     -0.033987885      0.056307675     -0.061844453  #> CIDH920105.lag29 CIDH920105.lag30  BHAR880101.lag1  BHAR880101.lag2  #>      0.021484780     -0.008461776      0.014229951     -0.009142419  #>  BHAR880101.lag3  BHAR880101.lag4  BHAR880101.lag5  BHAR880101.lag6  #>     -0.003272262     -0.109613332      0.033346233     -0.141538598"},{"path":"https://nanx.me/protr/articles/protr.html","id":"geary-autocorrelation-descriptors","dir":"Articles","previous_headings":"Commonly used descriptors > Autocorrelation descriptors","what":"Geary autocorrelation descriptors","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"Geary autocorrelation descriptors protein sequences can defined : \\[ C(d) = \\frac{\\frac{1}{2(N-d)} \\sum_{=1}^{N-d} (P_i - P_{+d})^2}{\\frac{1}{N-1} \\sum_{=1}^{N} (P_i - \\bar{P}')^2} \\quad d = 1, 2, \\ldots, 30 \\] \\(d\\), \\(P\\), \\(P_i\\), \\(P_{+d}\\), \\(\\textrm{nlag}\\) meaning . amino acid index, \\(3 \\times \\textrm{nlag}\\) autocorrelation descriptors. usage extractGeary() exactly extractMoreauBroto() extractMoran():","code":"# Use the 3 custom properties defined before # and 4 properties in the AAindex database geary <- extractGeary(   x,   customprops = myprops,   props = c(     \"CIDH920105\", \"BHAR880101\",     \"CHAM820101\", \"CHAM820102\",     \"MyProp1\", \"MyProp2\", \"MyProp3\"   ) )  head(geary, n = 36L) #>  CIDH920105.lag1  CIDH920105.lag2  CIDH920105.lag3  CIDH920105.lag4  #>        0.9361830        1.0442920        1.0452843        1.0563467  #>  CIDH920105.lag5  CIDH920105.lag6  CIDH920105.lag7  CIDH920105.lag8  #>        0.9406031        1.0765517        1.0675786        0.9991363  #>  CIDH920105.lag9 CIDH920105.lag10 CIDH920105.lag11 CIDH920105.lag12  #>        1.0316555        0.9684585        0.9353130        1.0201990  #> CIDH920105.lag13 CIDH920105.lag14 CIDH920105.lag15 CIDH920105.lag16  #>        0.9340933        1.0207373        1.0251486        1.0290464  #> CIDH920105.lag17 CIDH920105.lag18 CIDH920105.lag19 CIDH920105.lag20  #>        1.0414375        0.9494403        0.9905987        0.9987183  #> CIDH920105.lag21 CIDH920105.lag22 CIDH920105.lag23 CIDH920105.lag24  #>        0.9472542        0.9010009        0.9828848        1.0574098  #> CIDH920105.lag25 CIDH920105.lag26 CIDH920105.lag27 CIDH920105.lag28  #>        0.9897955        1.0290018        0.9400066        1.0584150  #> CIDH920105.lag29 CIDH920105.lag30  BHAR880101.lag1  BHAR880101.lag2  #>        0.9762904        1.0029734        0.9818711        1.0051730  #>  BHAR880101.lag3  BHAR880101.lag4  BHAR880101.lag5  BHAR880101.lag6  #>        0.9967069        1.1012905        0.9595859        1.1337056"},{"path":"https://nanx.me/protr/articles/protr.html","id":"compositiontransitiondistribution","dir":"Articles","previous_headings":"Commonly used descriptors","what":"Composition/Transition/Distribution","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"CTD descriptors developed Dubchak et al. (1995) Dubchak et al. (1999). Figure 3: sequence hypothetic protein indicating construction composition, transition, distribution descriptors protein. Sequence index indicates position amino acid sequence. index type amino acids sequence (1, 2 3) indicates position first, second, third, ‚Ä¶ type amino acid. 1/2 transition indicates position 12 21 pairs sequence (1/3 2/3 defined way). Step 1: Sequence Encoding amino acids categorized three classes according attribute, amino acid encoded one indices 1, 2, 3 according class belongs. attributes used include hydrophobicity, normalized van der Waals volume, polarity, polarizability. corresponding classification attribute listed Table 1. Table 1: Amino acid attributes, three-group classification 20 amino acids attribute example, given sequence MTEITAAMVKELRESTGAGA, encoded 32132223311311222222 according hydrophobicity. Step 2: Compute Composition, Transition, Distribution Descriptors Three types descriptors, Composition (C), Transition (T), Distribution (D) can calculated given attribute follows.","code":""},{"path":"https://nanx.me/protr/articles/protr.html","id":"composition","dir":"Articles","previous_headings":"Commonly used descriptors > Composition/Transition/Distribution","what":"Composition","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"Composition defined global percentage encoded class protein sequence. example using hydrophobicity classification, numbers encoded classes 1, 2, 3 5, 10, 5, compositions \\(5/20=25\\%\\), \\(10/20=10\\%\\), \\(5/20=25\\%\\), 20 length protein sequence. composition descriptor can expressed \\[ C_r = \\frac{n_r}{n} \\quad r = 1, 2, 3 \\] \\(n_r\\) number amino acid type \\(r\\) encoded sequence; \\(N\\) length sequence. example extractCTDC(): result shows elements named PropertyNumber.GroupNumber returned vector.","code":"extractCTDC(x) #>  hydrophobicity.Group1  hydrophobicity.Group2  hydrophobicity.Group3  #>             0.29715302             0.40569395             0.29715302  #> normwaalsvolume.Group1 normwaalsvolume.Group2 normwaalsvolume.Group3  #>             0.45195730             0.29715302             0.25088968  #>        polarity.Group1        polarity.Group2        polarity.Group3  #>             0.33985765             0.33274021             0.32740214  #>  polarizability.Group1  polarizability.Group2  polarizability.Group3  #>             0.33096085             0.41814947             0.25088968  #>          charge.Group1          charge.Group2          charge.Group3  #>             0.11032028             0.79003559             0.09964413  #> secondarystruct.Group1 secondarystruct.Group2 secondarystruct.Group3  #>             0.38967972             0.29537367             0.31494662  #>   solventaccess.Group1   solventaccess.Group2   solventaccess.Group3  #>             0.43060498             0.29715302             0.27224199"},{"path":"https://nanx.me/protr/articles/protr.html","id":"transition","dir":"Articles","previous_headings":"Commonly used descriptors > Composition/Transition/Distribution","what":"Transition","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"transition class 1 2 percent frequency 1 followed 2 2 followed 1 encoded sequences. transition descriptor can computed \\[ T_{rs} = \\frac{n_{rs} + n_{sr}}{N - 1} \\quad rs = \\text{12}, \\text{13}, \\text{23} \\] \\(n_{rs}\\), \\(n_{sr}\\) numbers dipeptide encoded rs sr sequence; \\(N\\) length sequence. example extractCTDT():","code":"extractCTDT(x) #> prop1.Tr1221 prop1.Tr1331 prop1.Tr2332 prop2.Tr1221 prop2.Tr1331 prop2.Tr2332  #>   0.27094474   0.16042781   0.23351159   0.26737968   0.22638146   0.17112299  #> prop3.Tr1221 prop3.Tr1331 prop3.Tr2332 prop4.Tr1221 prop4.Tr1331 prop4.Tr2332  #>   0.21033868   0.20499109   0.23707665   0.27272727   0.15151515   0.24598930  #> prop5.Tr1221 prop5.Tr1331 prop5.Tr2332 prop6.Tr1221 prop6.Tr1331 prop6.Tr2332  #>   0.18181818   0.02139037   0.15686275   0.21925134   0.22816399   0.15864528  #> prop7.Tr1221 prop7.Tr1331 prop7.Tr2332  #>   0.25133690   0.21568627   0.18003565"},{"path":"https://nanx.me/protr/articles/protr.html","id":"distribution","dir":"Articles","previous_headings":"Commonly used descriptors > Composition/Transition/Distribution","what":"Distribution","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"distribution descriptor describes distribution attribute sequence. five ‚Äúdistribution‚Äù descriptors attribute position percents whole sequence first residue, 25% residues, 50% residues, 75% residues, 100% residues certain encoded class. example, 10 residues encoded 2 example, positions first residue 2, 2nd residue 2 (25% * 10 = 2), 5th 2 residue (50% * 10 = 5), 7th 2 (75% * 10 = 7) 10th residue 2 (100% * 10) encoded sequence 2, 5, 15, 17, 20, distribution descriptors 2 : 10.0 (2/20 * 100), 25.0 (5/20 * 100), 75.0 (15/20 * 100), 85.0 (17/20 * 100), 100.0 (20/20 * 100). compute distribution descriptor, use extractCTDD():","code":"extractCTDD(x) #>   prop1.G1.residue0  prop1.G1.residue25  prop1.G1.residue50  prop1.G1.residue75  #>           0.3558719          23.1316726          50.1779359          73.8434164  #> prop1.G1.residue100   prop1.G2.residue0  prop1.G2.residue25  prop1.G2.residue50  #>          99.8220641           0.5338078          27.4021352          47.3309609  #>  prop1.G2.residue75 prop1.G2.residue100   prop1.G3.residue0  prop1.G3.residue25  #>          75.2669039         100.0000000           0.1779359          19.5729537  #>  prop1.G3.residue50  prop1.G3.residue75 prop1.G3.residue100   prop2.G1.residue0  #>          51.7793594          75.6227758          99.6441281           0.3558719  #>  prop2.G1.residue25  prop2.G1.residue50  prop2.G1.residue75 prop2.G1.residue100  #>          25.6227758          48.0427046          75.4448399         100.0000000  #>   prop2.G2.residue0  prop2.G2.residue25  prop2.G2.residue50  prop2.G2.residue75  #>           1.4234875          23.3096085          54.4483986          76.3345196  #> prop2.G2.residue100   prop2.G3.residue0  prop2.G3.residue25  prop2.G3.residue50  #>          99.4661922           0.1779359          22.7758007          48.9323843  #>  prop2.G3.residue75 prop2.G3.residue100   prop3.G1.residue0  prop3.G1.residue25  #>          69.5729537          99.8220641           0.1779359          20.9964413  #>  prop3.G1.residue50  prop3.G1.residue75 prop3.G1.residue100   prop3.G2.residue0  #>          50.8896797          74.5551601          99.6441281           0.5338078  #>  prop3.G2.residue25  prop3.G2.residue50  prop3.G2.residue75 prop3.G2.residue100  #>          26.5124555          46.2633452          75.4448399         100.0000000  #>   prop3.G3.residue0  prop3.G3.residue25  prop3.G3.residue50  prop3.G3.residue75  #>           0.3558719          24.1992883          50.5338078          73.8434164  #> prop3.G3.residue100   prop4.G1.residue0  prop4.G1.residue25  prop4.G1.residue50  #>          99.8220641           0.3558719          26.5124555          48.3985765  #>  prop4.G1.residue75 prop4.G1.residue100   prop4.G2.residue0  prop4.G2.residue25  #>          76.1565836          99.2882562           1.4234875          21.5302491  #>  prop4.G2.residue50  prop4.G2.residue75 prop4.G2.residue100   prop4.G3.residue0  #>          51.4234875          75.8007117         100.0000000           0.1779359  #>  prop4.G3.residue25  prop4.G3.residue50  prop4.G3.residue75 prop4.G3.residue100  #>          22.7758007          48.9323843          69.5729537          99.8220641  #>   prop5.G1.residue0  prop5.G1.residue25  prop5.G1.residue50  prop5.G1.residue75  #>           0.8896797          20.8185053          48.9323843          69.5729537  #> prop5.G1.residue100   prop5.G2.residue0  prop5.G2.residue25  prop5.G2.residue50  #>          99.8220641           0.1779359          24.9110320          49.1103203  #>  prop5.G2.residue75 prop5.G2.residue100   prop5.G3.residue0  prop5.G3.residue25  #>          75.2669039         100.0000000           0.3558719          26.1565836  #>  prop5.G3.residue50  prop5.G3.residue75 prop5.G3.residue100   prop6.G1.residue0  #>          64.2348754          77.4021352          99.2882562           0.1779359  #>  prop6.G1.residue25  prop6.G1.residue50  prop6.G1.residue75 prop6.G1.residue100  #>          22.9537367          50.8896797          74.3772242          99.8220641  #>   prop6.G2.residue0  prop6.G2.residue25  prop6.G2.residue50  prop6.G2.residue75  #>           1.6014235          21.5302491          49.2882562          70.8185053  #> prop6.G2.residue100   prop6.G3.residue0  prop6.G3.residue25  prop6.G3.residue50  #>          98.9323843           0.3558719          29.0035587          48.2206406  #>  prop6.G3.residue75 prop6.G3.residue100   prop7.G1.residue0  prop7.G1.residue25  #>          77.4021352         100.0000000           0.5338078          23.4875445  #>  prop7.G1.residue50  prop7.G1.residue75 prop7.G1.residue100   prop7.G2.residue0  #>          50.0000000          74.5551601          98.9323843           0.3558719  #>  prop7.G2.residue25  prop7.G2.residue50  prop7.G2.residue75 prop7.G2.residue100  #>          23.1316726          50.1779359          73.8434164          99.8220641  #>   prop7.G3.residue0  prop7.G3.residue25  prop7.G3.residue50  prop7.G3.residue75  #>           0.1779359          27.2241993          48.0427046          75.4448399  #> prop7.G3.residue100  #>         100.0000000"},{"path":"https://nanx.me/protr/articles/protr.html","id":"conjoint-triad-descriptors","dir":"Articles","previous_headings":"Commonly used descriptors","what":"Conjoint triad descriptors","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"Conjoint triad descriptors proposed Shen et al. (2007). conjoint triad descriptors used model protein-protein interactions based classification amino acids. approach, protein sequence represented vector space consisting descriptors amino acids. reduce dimensions vector space, 20 amino acids clustered several classes according dipoles volumes side chains. conjoint triad descriptors calculated follows: Step 1: Classification Amino Acids Electrostatic hydrophobic interactions dominate protein-protein interactions. two kinds interactions may reflected dipoles volumes side chains amino acids, respectively. Accordingly, two parameters calculated using density-functional theory method B3LYP/6-31G molecular modeling approach. Based dipoles volumes side chains, 20 amino acids can clustered seven classes (See Table 2). Amino acids within class likely involve synonymous mutations similar characteristics. Table 2: Classification amino acids based dipoles volumes side chains 1 Dipole Scale (Debye): \\(-\\), Dipole < 1.0; \\(+\\), 1.0 < Dipole < 2.0; \\(++\\), 2.0 < Dipole < 3.0; \\(+++\\), Dipole > 3.0; \\(+'+'+'\\), Dipole > 3.0 opposite orientation. 2 Volume Scale (\\(\\overset{\\lower.5em\\circ}{\\mathrm{}}\\lower.01em^3\\)): \\(-\\), Volume < 50; \\(+\\), Volume > 50. 3 Cys separated class 3 ability form disulfide bonds. Step 2: Conjoint Triad Calculation conjoint triad descriptors considered properties one amino acid vicinal amino acids regarded three continuous amino acids unit. Thus, triads can differentiated according classes amino acids, .e., triads composed three amino acids belonging classes, ART VKS, can treated identically. conveniently represent protein, first use binary space \\((\\mathbf{V}, \\mathbf{F})\\) represent protein sequence. , \\(\\mathbf{V}\\) vector space sequence features, feature \\(v_i\\) represents sort triad type; \\(\\mathbf{F}\\) frequency vector corresponding \\(\\mathbf{V}\\), value \\(\\)-th dimension \\(\\mathbf{F} (f_i)\\) frequency type \\(v_i\\) appearing protein sequence. amino acids catogorized seven classes, size \\(\\mathbf{V}\\) \\(7 \\times 7 \\times 7\\); thus \\(= 1, 2, \\ldots, 343\\). detailed description (\\(\\mathbf{V}\\), \\(\\mathbf{F}\\)) illustrated Figure 4. Figure 4: Schematic diagram constructing vector space (\\(\\mathbf{V}\\), \\(\\mathbf{F}\\)) protein sequences. \\(\\mathbf{V}\\) vector space sequence features; feature (\\(v_i\\)) represents triad composed three consecutive amino acids; \\(\\mathbf{F}\\) frequency vector corresponding \\(\\mathbf{V}\\), value \\(\\)-th dimension \\(\\mathbf{F} (f_i)\\) frequency \\(v_i\\) triad appeared protein sequence. Clearly, protein correlates length (number amino acids) protein. general, long protein large value \\(f_i\\), complicates comparison two heterogeneous proteins. Thus, defined new parameter, \\(d_i\\), normalizing \\(f_i\\) following equation: \\[ d_i = \\frac{f_i - \\min\\{\\,f_1, f_2 , \\ldots, f_{343}\\,\\}}{\\max\\{\\,f_1, f_2, \\ldots, f_{343}\\,\\}} \\] numerical value \\(d_i\\) protein ranges 0 1, thereby enables comparison proteins. Accordingly, obtain another vector space (designated \\(\\mathbf{D}\\)) consisting \\(d_i\\) represent protein. compute conjoint triads protein sequences, can simply use: outputted first 65 total 343 dimension save space.","code":"ctriad <- extractCTriad(x) head(ctriad, n = 65L) #> VS111 VS211 VS311 VS411 VS511 VS611 VS711 VS121 VS221 VS321 VS421 VS521 VS621  #>   0.1   0.3   0.6   0.2   0.4   0.0   0.3   1.0   0.6   0.5   0.0   0.2   0.3  #> VS721 VS131 VS231 VS331 VS431 VS531 VS631 VS731 VS141 VS241 VS341 VS441 VS541  #>   0.0   0.2   0.4   0.5   0.2   0.3   0.3   0.1   0.3   0.3   0.2   0.2   0.0  #> VS641 VS741 VS151 VS251 VS351 VS451 VS551 VS651 VS751 VS161 VS261 VS361 VS461  #>   0.1   0.2   0.2   0.2   0.5   0.1   0.2   0.0   0.0   0.1   0.4   0.2   0.3  #> VS561 VS661 VS761 VS171 VS271 VS371 VS471 VS571 VS671 VS771 VS112 VS212 VS312  #>   0.2   0.0   0.1   0.1   0.3   0.1   0.0   0.1   0.0   0.1   0.8   0.4   0.4  #> VS412 VS512 VS612 VS712 VS122 VS222 VS322 VS422 VS522 VS622 VS722 VS132 VS232  #>   0.6   0.1   0.5   0.2   0.8   0.5   0.2   0.3   0.2   0.0   0.2   0.1   0.3"},{"path":"https://nanx.me/protr/articles/protr.html","id":"quasi-sequence-order-descriptors","dir":"Articles","previous_headings":"Commonly used descriptors","what":"Quasi-sequence-order descriptors","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"quasi-sequence-order descriptors proposed Chou (2000). derived distance matrix 20 amino acids.","code":""},{"path":"https://nanx.me/protr/articles/protr.html","id":"sequence-order-coupling-number","dir":"Articles","previous_headings":"Commonly used descriptors > Quasi-sequence-order descriptors","what":"Sequence-order-coupling number","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"\\(d\\)-th rank sequence-order-coupling number defined : \\[ \\tau_d = \\sum_{=1}^{N-d} (d_{, +d})^2 \\quad d = 1, 2, \\ldots, \\textrm{maxlag} \\] \\(d_{, +d}\\) distance two amino acids position \\(\\) \\(+d\\). Note: maxlag maximum lag length protein must less \\(\\textrm{maxlag}\\). function extractSOCN() used computing sequence-order-coupling numbers: Users can also specify maximum lag value nlag argument. Note: addition Schneider-Wrede physicochemical distance matrix (Schneider Wrede, 1994) used Kuo-Chen Chou, another chemical distance matrix Grantham (1974) also used . descriptors dimension nlag * 2. quasi-sequence-order descriptors described next also utilized two matrices.","code":"extractSOCN(x) #>  Schneider.lag1  Schneider.lag2  Schneider.lag3  Schneider.lag4  Schneider.lag5  #>        204.2036        199.8708        206.8102        197.4828        193.3366  #>  Schneider.lag6  Schneider.lag7  Schneider.lag8  Schneider.lag9 Schneider.lag10  #>        208.1936        195.5476        200.9789        196.7110        193.9931  #> Schneider.lag11 Schneider.lag12 Schneider.lag13 Schneider.lag14 Schneider.lag15  #>        199.7031        204.9389        187.0140        198.4702        205.4526  #> Schneider.lag16 Schneider.lag17 Schneider.lag18 Schneider.lag19 Schneider.lag20  #>        193.1274        187.3529        190.4949        202.8853        198.5299  #> Schneider.lag21 Schneider.lag22 Schneider.lag23 Schneider.lag24 Schneider.lag25  #>        191.1013        185.0074        189.9857        202.7113        201.6267  #> Schneider.lag26 Schneider.lag27 Schneider.lag28 Schneider.lag29 Schneider.lag30  #>        194.5770        185.9939        204.1297        191.1629        183.9073  #>   Grantham.lag1   Grantham.lag2   Grantham.lag3   Grantham.lag4   Grantham.lag5  #>    6674686.0000    6761609.0000    7138892.0000    6748261.0000    6291229.0000  #>   Grantham.lag6   Grantham.lag7   Grantham.lag8   Grantham.lag9  Grantham.lag10  #>    6839853.0000    6594164.0000    6556148.0000    6620183.0000    6770614.0000  #>  Grantham.lag11  Grantham.lag12  Grantham.lag13  Grantham.lag14  Grantham.lag15  #>    6495689.0000    6865537.0000    6297267.0000    6498247.0000    6615566.0000  #>  Grantham.lag16  Grantham.lag17  Grantham.lag18  Grantham.lag19  Grantham.lag20  #>    6572680.0000    6569081.0000    6173947.0000    6570829.0000    6471308.0000  #>  Grantham.lag21  Grantham.lag22  Grantham.lag23  Grantham.lag24  Grantham.lag25  #>    6461649.0000    5939432.0000    6532121.0000    6652472.0000    6480660.0000  #>  Grantham.lag26  Grantham.lag27  Grantham.lag28  Grantham.lag29  Grantham.lag30  #>    6382281.0000    6276521.0000    6537634.0000    6442991.0000    6350157.0000"},{"path":"https://nanx.me/protr/articles/protr.html","id":"quasi-sequence-order-descriptors-1","dir":"Articles","previous_headings":"Commonly used descriptors > Quasi-sequence-order descriptors","what":"Quasi-sequence-order descriptors","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"amino acid type, quasi-sequence-order descriptor can defined : \\[ X_r = \\frac{f_r}{\\sum_{r=1}^{20} f_r + w \\sum_{d=1}^{\\textrm{maxlag}} \\tau_d} \\quad r = 1, 2, \\ldots, 20 \\] \\(f_r\\) normalized occurrence amino acid type \\(\\) \\(w\\) weighting factor (\\(w=0.1\\)). first 20 quasi-sequence-order descriptors. 30 quasi-sequence-order defined : \\[ X_d = \\frac{w \\tau_{d-20}}{\\sum_{r=1}^{20} f_r + w \\sum_{d=1}^{\\textrm{maxlag}} \\tau_d} \\quad d = 21, 22, \\ldots, 20 + \\textrm{maxlag} \\] Figure 5: schematic drawing show () 1st-rank, (b) 2nd-rank, (3) 3rd-rank sequence-order-coupling mode along protein sequence. () Reflects coupling mode contiguous residues, (b) 2nd contiguous residues, (c) 3rd contiguous residues. figure Chou (2000). minimal example extractQSO(): users can also specify maximum lag argument nlag weighting factor argument w.","code":"extractQSO(x) #>  Schneider.Xr.A  Schneider.Xr.R  Schneider.Xr.N  Schneider.Xr.D  Schneider.Xr.C  #>    6.096218e-02    6.773576e-02    3.725467e-02    4.910842e-02    6.434897e-02  #>  Schneider.Xr.E  Schneider.Xr.Q  Schneider.Xr.G  Schneider.Xr.H  Schneider.Xr.I  #>    4.572164e-02    4.572164e-02    7.789612e-02    2.878770e-02    3.386788e-02  #>  Schneider.Xr.L  Schneider.Xr.K  Schneider.Xr.M  Schneider.Xr.F  Schneider.Xr.P  #>    7.281594e-02    3.725467e-02    1.185376e-02    3.048109e-02    5.080182e-02  #>  Schneider.Xr.S  Schneider.Xr.T  Schneider.Xr.W  Schneider.Xr.Y  Schneider.Xr.V  #>    8.466970e-02    4.233485e-02    2.201412e-02    4.064145e-02    4.741503e-02  #>   Grantham.Xr.A   Grantham.Xr.R   Grantham.Xr.N   Grantham.Xr.D   Grantham.Xr.C  #>    1.835033e-06    2.038926e-06    1.121409e-06    1.478221e-06    1.936980e-06  #>   Grantham.Xr.E   Grantham.Xr.Q   Grantham.Xr.G   Grantham.Xr.H   Grantham.Xr.I  #>    1.376275e-06    1.376275e-06    2.344765e-06    8.665435e-07    1.019463e-06  #>   Grantham.Xr.L   Grantham.Xr.K   Grantham.Xr.M   Grantham.Xr.F   Grantham.Xr.P  #>    2.191845e-06    1.121409e-06    3.568120e-07    9.175167e-07    1.529194e-06  #>   Grantham.Xr.S   Grantham.Xr.T   Grantham.Xr.W   Grantham.Xr.Y   Grantham.Xr.V  #>    2.548657e-06    1.274329e-06    6.626509e-07    1.223356e-06    1.427248e-06  #>  Schneider.Xd.1  Schneider.Xd.2  Schneider.Xd.3  Schneider.Xd.4  Schneider.Xd.5  #>    3.457972e-02    3.384600e-02    3.502111e-02    3.344162e-02    3.273951e-02  #>  Schneider.Xd.6  Schneider.Xd.7  Schneider.Xd.8  Schneider.Xd.9 Schneider.Xd.10  #>    3.525537e-02    3.311390e-02    3.403364e-02    3.331093e-02    3.285068e-02  #> Schneider.Xd.11 Schneider.Xd.12 Schneider.Xd.13 Schneider.Xd.14 Schneider.Xd.15  #>    3.381760e-02    3.470422e-02    3.166883e-02    3.360882e-02    3.479121e-02  #> Schneider.Xd.16 Schneider.Xd.17 Schneider.Xd.18 Schneider.Xd.19 Schneider.Xd.20  #>    3.270408e-02    3.172623e-02    3.225829e-02    3.435647e-02    3.361893e-02  #> Schneider.Xd.21 Schneider.Xd.22 Schneider.Xd.23 Schneider.Xd.24 Schneider.Xd.25  #>    3.236099e-02    3.132904e-02    3.217206e-02    3.432701e-02    3.414334e-02  #> Schneider.Xd.26 Schneider.Xd.27 Schneider.Xd.28 Schneider.Xd.29 Schneider.Xd.30  #>    3.294954e-02    3.149609e-02    3.456720e-02    3.237140e-02    3.114275e-02  #>   Grantham.Xd.1   Grantham.Xd.2   Grantham.Xd.3   Grantham.Xd.4   Grantham.Xd.5  #>    3.402298e-02    3.446605e-02    3.638918e-02    3.439801e-02    3.206838e-02  #>   Grantham.Xd.6   Grantham.Xd.7   Grantham.Xd.8   Grantham.Xd.9  Grantham.Xd.10  #>    3.486488e-02    3.361253e-02    3.341875e-02    3.374516e-02    3.451195e-02  #>  Grantham.Xd.11  Grantham.Xd.12  Grantham.Xd.13  Grantham.Xd.14  Grantham.Xd.15  #>    3.311057e-02    3.499580e-02    3.209915e-02    3.312361e-02    3.372162e-02  #>  Grantham.Xd.16  Grantham.Xd.17  Grantham.Xd.18  Grantham.Xd.19  Grantham.Xd.20  #>    3.350302e-02    3.348467e-02    3.147055e-02    3.349358e-02    3.298629e-02  #>  Grantham.Xd.21  Grantham.Xd.22  Grantham.Xd.23  Grantham.Xd.24  Grantham.Xd.25  #>    3.293706e-02    3.027516e-02    3.329628e-02    3.390974e-02    3.303396e-02  #>  Grantham.Xd.26  Grantham.Xd.27  Grantham.Xd.28  Grantham.Xd.29  Grantham.Xd.30  #>    3.253250e-02    3.199340e-02    3.332438e-02    3.284195e-02    3.236875e-02"},{"path":"https://nanx.me/protr/articles/protr.html","id":"pseudo-amino-acid-composition-pseaac","dir":"Articles","previous_headings":"Commonly used descriptors","what":"Pseudo-amino acid composition (PseAAC)","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"group descriptors proposed Chou (2001). PseAAC descriptors also named type 1 pseudo-amino acid composition. Let \\(H_1^o ()\\), \\(H_2^o ()\\), \\(M^o ()\\) (\\(=1, 2, 3, \\ldots, 20\\)) original hydrophobicity values, original hydrophilicity values original side chain masses 20 natural amino acids, respectively. converted following qualities standard conversion: \\[ H_1 () = \\frac{H_1^o () - \\frac{1}{20} \\sum_{=1}^{20} H_1^o ()}{\\sqrt{\\frac{\\sum_{=1}^{20} [H_1^o () - \\frac{1}{20} \\sum_{=1}^{20} H_1^o () ]^2}{20}}} \\] \\(H_2^o ()\\) \\(M^o ()\\) normalized \\(H_2 ()\\) \\(M ()\\) way. Figure 6: schematic drawing show () first-tier, (b) second-tier, (3) third-tiersequence order correlation mode along protein sequence. Panel () reflects correlation mode contiguous residues, panel (b) second-contiguous residues, panel (c) third-contiguous residues. figure Chou (2001). , correlation function can defines \\[ \\Theta (R_i, R_j) = \\frac{1}{3} \\bigg\\{ [ H_1 (R_i) - H_1 (R_j) ]^2 + [ H_2 (R_i) - H_2 (R_j) ]^2 + [ M (R_i) - M (R_j) ]^2 \\bigg\\} \\] correlation function actually average value three amino acid properties: hydrophobicity value, hydrophilicity value side chain mass. Therefore, can extend definition correlation functions one amino acid property set \\(n\\) amino acid properties. one amino acid property, correlation can defined : \\[ \\Theta (R_i, R_j) = [H_1 (R_i) - H_1(R_j)]^2 \\] \\(H (R_i)\\) amino acid property amino acid \\(R_i\\) standardization. set n amino acid properties, can defined : \\(H_k (R_i)\\) \\(k\\)-th property amino acid property set amino acid \\(R_i\\). \\[ \\Theta (R_i, R_j) = \\frac{1}{n} \\sum_{k=1}^{n} [H_k (R_i) - H_k (R_j)]^2 \\] \\(H_k(R_i)\\) \\(k\\)-th property amino acid property set amino acid \\(R_i\\). set descriptors named sequence order-correlated factors defined : \\[\\begin{align*} \\theta_1  & = \\frac{1}{N-1} \\sum_{=1}^{N-1} \\Theta (R_i, R_{+1})\\\\ \\theta_2  & = \\frac{1}{N-2} \\sum_{=1}^{N-2} \\Theta (R_i, R_{+2})\\\\ \\theta_3  & = \\frac{1}{N-3} \\sum_{=1}^{N-3} \\Theta (R_i, R_{+3})\\\\           & \\ldots \\\\ \\theta_\\lambda  & = \\frac{1}{N-\\lambda} \\sum_{=1}^{N-\\lambda} \\Theta (R_i, R_{+\\lambda}) \\end{align*}\\] \\(\\lambda\\) (\\(\\lambda < L\\)) parameter specified. Let \\(f_i\\) normalized occurrence frequency 20 amino acids protein sequence, set \\(20 + \\lambda\\) descriptors called pseudo-amino acid composition protein sequence can defines : \\[ X_c = \\frac{f_c}{\\sum_{r=1}^{20} f_r + w \\sum_{j=1}^{\\lambda} \\theta_j} \\quad (1 < c < 20) \\] \\[ X_c = \\frac{w \\theta_{c-20}}{\\sum_{r=1}^{20} f_r + w \\sum_{j=1}^{\\lambda} \\theta_j} \\quad (21 < c < 20 + \\lambda) \\] \\(w\\) weighting factor sequence-order effect set \\(w = 0.05\\) protr suggested Kuo-Chen Chou. extractPAAC(), can compute PseAAC descriptors directly: extractPAAC() fucntion also provides additional arguments props customprops, similar arguments Moreau-Broto/Moran/Geary autocorrelation descriptors. minor differences, please see ?extracPAAC. Users can specify lambda parameter weighting factor arguments lambda w. Note: work Kuo-Chen Chou, definition ‚Äúnormalized occurrence frequency‚Äù given. work, define occurrence frequency amino acid sequence normalized 100% hence calculated values values .","code":"extractPAAC(x) #>         Xc1.A         Xc1.R         Xc1.N         Xc1.D         Xc1.C  #>    9.07025432   10.07806035    5.54293319    7.30659376    9.57415734  #>         Xc1.E         Xc1.Q         Xc1.G         Xc1.H         Xc1.I  #>    6.80269074    6.80269074   11.58976941    4.28317565    5.03903018  #>         Xc1.L         Xc1.K         Xc1.M         Xc1.F         Xc1.P  #>   10.83391488    5.54293319    1.76366056    4.53512716    7.55854527  #>         Xc1.S         Xc1.T         Xc1.W         Xc1.Y         Xc1.V  #>   12.59757544    6.29878772    3.27536961    6.04683621    7.05464225  #>  Xc2.lambda.1  Xc2.lambda.2  Xc2.lambda.3  Xc2.lambda.4  Xc2.lambda.5  #>    0.02514092    0.02500357    0.02527773    0.02553159    0.02445265  #>  Xc2.lambda.6  Xc2.lambda.7  Xc2.lambda.8  Xc2.lambda.9 Xc2.lambda.10  #>    0.02561910    0.02486131    0.02506656    0.02553952    0.02437663  #> Xc2.lambda.11 Xc2.lambda.12 Xc2.lambda.13 Xc2.lambda.14 Xc2.lambda.15  #>    0.02491262    0.02533803    0.02351915    0.02479912    0.02548431  #> Xc2.lambda.16 Xc2.lambda.17 Xc2.lambda.18 Xc2.lambda.19 Xc2.lambda.20  #>    0.02478210    0.02513770    0.02457224    0.02543046    0.02500889  #> Xc2.lambda.21 Xc2.lambda.22 Xc2.lambda.23 Xc2.lambda.24 Xc2.lambda.25  #>    0.02476967    0.02342389    0.02431684    0.02610300    0.02626722  #> Xc2.lambda.26 Xc2.lambda.27 Xc2.lambda.28 Xc2.lambda.29 Xc2.lambda.30  #>    0.02457082    0.02343049    0.02588823    0.02490463    0.02451951"},{"path":"https://nanx.me/protr/articles/protr.html","id":"amphiphilic-pseudo-amino-acid-composition-apseaac","dir":"Articles","previous_headings":"Commonly used descriptors","what":"Amphiphilic pseudo-amino acid composition (APseAAC)","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"Amphiphilic Pseudo-Amino Acid Composition (APseAAC) proposed Chou (2001). APseAAC also recognized type 2 pseudo-amino acid composition. definitions qualities similar PAAC descriptors. \\(H_1 ()\\) \\(H_2 (j)\\) defined , hydrophobicity hydrophilicity correlation functions defined : \\[\\begin{align*} H_{, j}^1  & = H_1 () H_1 (j)\\\\ H_{, j}^2  & = H_2 () H_2 (j) \\end{align*}\\] qualities, sequence order factors can defines : \\[\\begin{align*} \\tau_1  & = \\frac{1}{N-1} \\sum_{=1}^{N-1} H_{, +1}^1\\\\ \\tau_2  & = \\frac{1}{N-1} \\sum_{=1}^{N-1} H_{, +1}^2\\\\ \\tau_3  & = \\frac{1}{N-2} \\sum_{=1}^{N-2} H_{, +2}^1\\\\ \\tau_4  & = \\frac{1}{N-2} \\sum_{=1}^{N-2} H_{, +2}^2\\\\         & \\ldots \\\\ \\tau_{2 \\lambda - 1} & = \\frac{1}{N-\\lambda} \\sum_{=1}^{N-\\lambda} H_{, +\\lambda}^1\\\\ \\tau_{2 \\lambda}     & = \\frac{1}{N-\\lambda} \\sum_{=1}^{N-\\lambda} H_{, +\\lambda}^2 \\end{align*}\\] Figure 7: schematic diagram show (a1/a2) first-rank, (b1/b2) second-rank (c1/c2) third-rank sequence-order-coupling mode along protein sequence hydrophobicity/hydrophilicity correlation function, \\(H_{, j}^1\\) \\(H_{, j}^2\\) given Equation (3). Panel (a1/a2) reflects coupling mode contiguous residues, panel (b1/b2) second-contiguous residues panel (c1/c2) third-contiguous residues. figure Chou (2005). set descriptors called Amphiphilic Pseudo-Amino Acid Composition (APseAAC) defined : \\[ P_c = \\frac{f_c}{\\sum_{r=1}^{20} f_r + w \\sum_{j=1}^{2 \\lambda} \\tau_j} \\quad (1 < c < 20) \\] \\[ P_c = \\frac{w \\tau_u}{\\sum_{r=1}^{20} f_r + w \\sum_{j=1}^{2 \\lambda} \\tau_j} \\quad (21 < u < 20 + 2 \\lambda) \\] \\(w\\) weighting factor. default value set \\(w = 0.5\\) protr. minimal example extracAPAAC() : function arguments extractPAAC().","code":"extractAPAAC(x) #>                 Pc1.A                 Pc1.R                 Pc1.N  #>          3.537412e+01          3.930458e+01          2.161752e+01  #>                 Pc1.D                 Pc1.C                 Pc1.E  #>          2.849582e+01          3.733935e+01          2.653059e+01  #>                 Pc1.Q                 Pc1.G                 Pc1.H  #>          2.653059e+01          4.520027e+01          1.670445e+01  #>                 Pc1.I                 Pc1.L                 Pc1.K  #>          1.965229e+01          4.225242e+01          2.161752e+01  #>                 Pc1.M                 Pc1.F                 Pc1.P  #>          6.878302e+00          1.768706e+01          2.947844e+01  #>                 Pc1.S                 Pc1.T                 Pc1.W  #>          4.913073e+01          2.456536e+01          1.277399e+01  #>                 Pc1.Y                 Pc1.V  Pc2.Hydrophobicity.1  #>          2.358275e+01          2.751321e+01          2.196320e-04  #>  Pc2.Hydrophilicity.1  Pc2.Hydrophobicity.2  Pc2.Hydrophilicity.2  #>          1.025766e-03         -3.088876e-04         -1.834385e-04  #>  Pc2.Hydrophobicity.3  Pc2.Hydrophilicity.3  Pc2.Hydrophobicity.4  #>          1.174146e-03          7.400156e-04         -1.105715e-03  #>  Pc2.Hydrophilicity.4  Pc2.Hydrophobicity.5  Pc2.Hydrophilicity.5  #>         -4.493680e-04          1.766358e-03          1.471212e-03  #>  Pc2.Hydrophobicity.6  Pc2.Hydrophilicity.6  Pc2.Hydrophobicity.7  #>         -1.441572e-03         -4.913600e-03         -1.678053e-05  #>  Pc2.Hydrophilicity.7  Pc2.Hydrophobicity.8  Pc2.Hydrophilicity.8  #>          7.312356e-04         -1.885399e-03         -1.928708e-03  #>  Pc2.Hydrophobicity.9  Pc2.Hydrophilicity.9 Pc2.Hydrophobicity.10  #>         -2.931177e-03         -1.555660e-03          2.916597e-03  #> Pc2.Hydrophilicity.10 Pc2.Hydrophobicity.11 Pc2.Hydrophilicity.11  #>          3.602591e-03          1.055082e-04          8.697920e-04  #> Pc2.Hydrophobicity.12 Pc2.Hydrophilicity.12 Pc2.Hydrophobicity.13  #>         -9.276413e-04         -2.001384e-03          1.705044e-03  #> Pc2.Hydrophilicity.13 Pc2.Hydrophobicity.14 Pc2.Hydrophilicity.14  #>          4.364007e-03          7.883453e-04         -9.441693e-04  #> Pc2.Hydrophobicity.15 Pc2.Hydrophilicity.15 Pc2.Hydrophobicity.16  #>         -3.133437e-04         -3.599332e-03          3.689079e-05  #> Pc2.Hydrophilicity.16 Pc2.Hydrophobicity.17 Pc2.Hydrophilicity.17  #>          2.483867e-03          4.832798e-04          2.465788e-03  #> Pc2.Hydrophobicity.18 Pc2.Hydrophilicity.18 Pc2.Hydrophobicity.19  #>         -3.142728e-04          2.021961e-03          6.421283e-05  #> Pc2.Hydrophilicity.19 Pc2.Hydrophobicity.20 Pc2.Hydrophilicity.20  #>         -8.896690e-04         -2.986886e-04          9.304039e-04  #> Pc2.Hydrophobicity.21 Pc2.Hydrophilicity.21 Pc2.Hydrophobicity.22  #>         -6.777458e-04          1.646818e-03          3.193506e-03  #> Pc2.Hydrophilicity.22 Pc2.Hydrophobicity.23 Pc2.Hydrophilicity.23  #>          3.270656e-03          2.533569e-03          2.478252e-03  #> Pc2.Hydrophobicity.24 Pc2.Hydrophilicity.24 Pc2.Hydrophobicity.25  #>         -2.489106e-03         -1.031008e-03         -3.992322e-03  #> Pc2.Hydrophilicity.25 Pc2.Hydrophobicity.26 Pc2.Hydrophilicity.26  #>         -2.596060e-03          8.690771e-04         -1.221378e-03  #> Pc2.Hydrophobicity.27 Pc2.Hydrophilicity.27 Pc2.Hydrophobicity.28  #>          5.208649e-03          4.617400e-03         -1.088584e-03  #> Pc2.Hydrophilicity.28 Pc2.Hydrophobicity.29 Pc2.Hydrophilicity.29  #>         -2.512263e-03          1.387641e-03          2.060890e-03  #> Pc2.Hydrophobicity.30 Pc2.Hydrophilicity.30  #>          3.177340e-04          1.451909e-03"},{"path":"https://nanx.me/protr/articles/protr.html","id":"profile-based-descriptors","dir":"Articles","previous_headings":"Commonly used descriptors","what":"Profile-based descriptors","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"profile-based descriptors protein sequences available protr package. feature vectors profile-based methods based PSSM running PSI-BLAST, often show good performance. See Ye et al. (2011) Rangwala Karypis (2005) details. functions extractPSSM(), extractPSSMAcc() extractPSSMFeature() used generate descriptors. Users need install NCBI-BLAST+ software package first make functions fully functional.","code":""},{"path":"https://nanx.me/protr/articles/protr.html","id":"proteochemometric-modeling-descriptors","dir":"Articles","previous_headings":"","what":"Proteochemometric modeling descriptors","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"Proteochemometric (PCM) modeling utilizes statistical modeling techniques model ligand-target interaction space. descriptors implemented protr extensively used Proteochemometric modeling. Scales-based descriptors derived Principal Components Analysis Scales-based descriptors derived Amino Acid Properties AAindex (Protein Fingerprint) Scales-based descriptors derived 20+ classes 2D 3D molecular descriptors (Topological, WHIM, VHSE, etc.) Scales-based descriptors derived Factor Analysis Scales-based descriptors derived Multidimensional Scaling BLOSUM PAM matrix-derived descriptors Note scales-based descriptor functions freely combine 20 classes 2D 3D molecular descriptors construct highly customized scales-based descriptors. course, functions designed flexible enough users can provide totally self-defined property matrices construct scales-based descriptors. example, compute ‚Äútopological scales‚Äù derived PCA (using first 5 principal components), one can use extractDescScales(): argument propmat involkes AATopo dataset shipped protr package, argument index selects 37 41 43 47 columns (molecular descriptors) AATopo dataset use, parameter lag set Auto Cross Covariance (ACC) generating scales-based descriptors length. last, printed summary first 5 principal components (standard deviation, proportion variance, cumulative proportion variance). result length 175 named vector, consistent descriptors : another example, compute descriptors derived BLOSUM62 matrix use first 5 scales, one can use: result length 175 named vector: Dealing gaps. proteochemometrics, (sequence alignment) gaps can useful, since gap certain position contains information. protr package built-support gaps. deal gaps using dummy descriptor code 21st type amino acid. function extractScalesGap() extractProtFPGap() can used deal gaps. See ?extractScalesGap ?extractProtFPGap details.","code":"x <- readFASTA(system.file(   \"protseq/P00750.fasta\",   package = \"protr\" ))[[1]]  descscales <- extractDescScales(   x,   propmat = \"AATopo\",   index = c(37:41, 43:47),   pc = 5, lag = 7, silent = FALSE ) #> Summary of the first 5 principal components:  #>                             PC1      PC2       PC3       PC4        PC5 #> Standard deviation     2.581537 1.754133 0.4621854 0.1918666 0.08972087 #> Proportion of Variance 0.666430 0.307700 0.0213600 0.0036800 0.00080000 #> Cumulative Proportion  0.666430 0.974130 0.9954900 0.9991700 0.99998000 length(descscales) #> [1] 175 head(descscales, 15) #>     scl1.lag1     scl2.lag1     scl3.lag1     scl4.lag1     scl5.lag1  #> -2.645644e-01 -1.717847e-02  1.975438e-02 -7.930659e-05 -3.710597e-05  #>     scl1.lag2     scl2.lag2     scl3.lag2     scl4.lag2     scl5.lag2  #>  3.548612e-01  1.343712e-01  5.699395e-03 -5.489472e-04 -6.364577e-05  #>     scl1.lag3     scl2.lag3     scl3.lag3     scl4.lag3     scl5.lag3  #>  2.011431e-02 -9.211136e-02 -1.461755e-03  6.747801e-04  2.386782e-04 x <- readFASTA(system.file(   \"protseq/P00750.fasta\",   package = \"protr\" ))[[1]]  blosum <- extractBLOSUM(   x,   submat = \"AABLOSUM62\",   k = 5, lag = 7, scale = TRUE, silent = FALSE ) #> Relative importance of all the possible 20 scales:  #>  [1]  1.204960e+01  7.982007e+00  6.254364e+00  4.533706e+00  4.326286e+00 #>  [6]  3.850579e+00  3.752197e+00  3.538207e+00  3.139155e+00  2.546405e+00 #> [11]  2.373286e+00  1.666259e+00  1.553126e+00  1.263685e+00  1.024699e+00 #> [16]  9.630187e-01  9.225759e-01  7.221636e-01  1.020085e-01 -5.354392e-18 length(blosum) #> [1] 175 head(blosum, 15) #>     scl1.lag1     scl2.lag1     scl3.lag1     scl4.lag1     scl5.lag1  #>  0.0042370555 -0.0021502057  0.0005993291  0.0006456375  0.0014849592  #>     scl1.lag2     scl2.lag2     scl3.lag2     scl4.lag2     scl5.lag2  #> -0.0014919096  0.0032873726  0.0011734162 -0.0021758536 -0.0018127568  #>     scl1.lag3     scl2.lag3     scl3.lag3     scl4.lag3     scl5.lag3  #> -0.0029413528  0.0001494193  0.0003298806 -0.0017877430 -0.0051044133"},{"path":"https://nanx.me/protr/articles/protr.html","id":"similarity-calculation-by-sequence-alignment","dir":"Articles","previous_headings":"","what":"Similarity calculation by sequence alignment","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"Similarity computation derived local global protein sequence alignment list protein sequences great need protein research. However, type pairwise similarity computation often computationally intensive, especially exists many protein sequences. Luckily, process also highly parallelizable, protr package integrates function parallelized similarity computation derived local global protein sequence alignment list protein sequences. function twoSeqSim() calculates alignment result two protein sequences. function parSeqSim() calculates pairwise similarity list protein sequences parallel: Similarly, function crossSetSim() calculates pairwise similarity two sets protein sequences parallel. Note small number proteins, calculating pairwise similarity scores derived sequence alignment parallel may significantly reduce overall computation time, since task requires relatively small time finish, thus, computational overheads may exist affect performance. benchmarks, used 1,000 protein sequences 64 CPU cores, observed significant performance improvement comparing sequential computation.","code":"s1 <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]] s2 <- readFASTA(system.file(\"protseq/P08218.fasta\", package = \"protr\"))[[1]] s3 <- readFASTA(system.file(\"protseq/P10323.fasta\", package = \"protr\"))[[1]] s4 <- readFASTA(system.file(\"protseq/P20160.fasta\", package = \"protr\"))[[1]] s5 <- readFASTA(system.file(\"protseq/Q9NZP8.fasta\", package = \"protr\"))[[1]] plist <- list(s1, s2, s3, s4, s5) psimmat <- parSeqSim(plist, cores = 4, type = \"local\", submat = \"BLOSUM62\") psimmat ##            [,1]       [,2]       [,3]       [,4]       [,5] ## [1,] 1.00000000 0.11825938 0.10236985 0.04921696 0.03943488 ## [2,] 0.11825938 1.00000000 0.18858241 0.12124217 0.06391103 ## [3,] 0.10236985 0.18858241 1.00000000 0.05819984 0.06175942 ## [4,] 0.04921696 0.12124217 0.05819984 1.00000000 0.05714638 ## [5,] 0.03943488 0.06391103 0.06175942 0.05714638 1.00000000"},{"path":"https://nanx.me/protr/articles/protr.html","id":"scaling-up-for-a-large-number-of-sequences","dir":"Articles","previous_headings":"Similarity calculation by sequence alignment","what":"Scaling up for a large number of sequences","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"batches. useful argument reducing memory usage batches. splits similarity computations smaller batches. larger batch number reduces memory need parallel process, also adds overhead forking new processes. trade-time (CPU) space (memory). Also, use verbose = TRUE print computation progress. parSeqSimDisk(). similarity computations even larger number protein sequences, please try parSeqSimDisk() set batches large number. Unlike -memory version, disk-based function caches partial results batch hard drive merges results together end, reduces memory usage. Example. Let‚Äôs assume 20,000 sequences. setting cores = 64 batches = 10000 parSeqSimDisk(), workload around 20000^2/2/64/10000 = 312.5 alignments per batch per core. give relatively quick feedback memory size going sufficient, long computation take total, first batches.","code":""},{"path":"https://nanx.me/protr/articles/protr.html","id":"similarity-calculation-by-go-semantic-similarity-measures","dir":"Articles","previous_headings":"","what":"Similarity calculation by GO semantic similarity measures","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"protr package also integrates function similarity score computation derived Gene Ontology (GO) semantic similarity measures list GO terms Entrez Gene IDs. function twoGOSim() calculates similarity derived GO-terms semantic similarity measures two GO terms / Entrez Gene IDs, function parGOSim() calculates pairwise similarity list GO terms / Entrez Gene IDs:","code":"# By GO Terms go1 <- c(   \"GO:0005215\", \"GO:0005488\", \"GO:0005515\",   \"GO:0005625\", \"GO:0005802\", \"GO:0005905\" ) # AP4B1 go2 <- c(   \"GO:0005515\", \"GO:0005634\", \"GO:0005681\",   \"GO:0008380\", \"GO:0031202\" ) # BCAS2 go3 <- c(   \"GO:0003735\", \"GO:0005622\", \"GO:0005840\",   \"GO:0006412\" ) # PDE4DIP golist <- list(go1, go2, go3) parGOSim(golist, type = \"go\", ont = \"CC\", measure = \"Wang\") ##       [,1]  [,2] [,3] ## [1,] 1.000 0.344 0.17 ## [2,] 0.344 1.000 0.24 ## [3,] 0.170 0.240 1.00 # By Entrez gene id genelist <- list(c(\"150\", \"151\", \"152\", \"1814\", \"1815\", \"1816\")) parGOSim(genelist, type = \"gene\", ont = \"BP\", measure = \"Wang\") ##        150   151   152  1814  1815  1816 ## 150  1.000 0.702 0.725 0.496 0.570 0.455 ## 151  0.702 1.000 0.980 0.456 0.507 0.551 ## 152  0.725 0.980 1.000 0.460 0.511 0.538 ## 1814 0.496 0.456 0.460 1.000 0.687 0.473 ## 1815 0.570 0.507 0.511 0.687 1.000 0.505 ## 1816 0.455 0.551 0.538 0.473 0.505 1.000"},{"path":"https://nanx.me/protr/articles/protr.html","id":"miscellaneous-tools","dir":"Articles","previous_headings":"","what":"Miscellaneous tools","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"section, briefly introduce useful tools provided protr package.","code":""},{"path":"https://nanx.me/protr/articles/protr.html","id":"retrieve-protein-sequences-from-uniprot","dir":"Articles","previous_headings":"Miscellaneous tools","what":"Retrieve protein sequences from UniProt","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"function getUniProt() gets protein sequences uniprot.org protein ID(s). input ID character vector specifying protein ID(s). returned sequences stored list:","code":"ids <- c(\"P00750\", \"P00751\", \"P00752\") prots <- getUniProt(ids) prots ## [[1]] ## [1] \"MDAMKRGLCCVLLLCGAVFVSPSQEIHARFRRGARSYQVICRDEKTQMIYQQHQSWLRPVLRSNRVEYCWCN ## SGRAQCHSVPVKSCSEPRCFNGGTCQQALYFSDFVCQCPEGFAGKCCEIDTRATCYEDQGISYRGTWSTAESGAECT ## NWNSSALAQKPYSGRRPDAIRLGLGNHNYCRNPDRDSKPWCYVFKAGKYSSEFCSTPACSEGNSDCYFGNGSAYRGT ## HSLTESGASCLPWNSMILIGKVYTAQNPSAQALGLGKHNYCRNPDGDAKPWCHVLKNRRLTWEYCDVPSCSTCGLRQ ## YSQPQFRIKGGLFADIASHPWQAAIFAKHRRSPGERFLCGGILISSCWILSAAHCFQERFPPHHLTVILGRTYRVVP ## GEEEQKFEVEKYIVHKEFDDDTYDNDIALLQLKSDSSRCAQESSVVRTVCLPPADLQLPDWTECELSGYGKHEALSP ## FYSERLKEAHVRLYPSSRCTSQHLLNRTVTDNMLCAGDTRSGGPQANLHDACQGDSGGPLVCLNDGRMTLVGIISWG ## LGCGQKDVPGVYTKVTNYLDWIRDNMRP\" ## ## [[2]] ## [1] \"MGSNLSPQLCLMPFILGLLSGGVTTTPWSLARPQGSCSLEGVEIKGGSFRLLQEGQALEYVCPSGFYPYPVQ ## TRTCRSTGSWSTLKTQDQKTVRKAECRAIHCPRPHDFENGEYWPRSPYYNVSDEISFHCYDGYTLRGSANRTCQVNG ## RWSGQTAICDNGAGYCSNPGIPIGTRKVGSQYRLEDSVTYHCSRGLTLRGSQRRTCQEGGSWSGTEPSCQDSFMYDT ## PQEVAEAFLSSLTETIEGVDAEDGHGPGEQQKRKIVLDPSGSMNIYLVLDGSDSIGASNFTGAKKCLVNLIEKVASY ## GVKPRYGLVTYATYPKIWVKVSEADSSNADWVTKQLNEINYEDHKLKSGTNTKKALQAVYSMMSWPDDVPPEGWNRT ## RHVIILMTDGLHNMGGDPITVIDEIRDLLYIGKDRKNPREDYLDVYVFGVGPLVNQVNINALASKKDNEQHVFKVKD ## MENLEDVFYQMIDESQSLSLCGMVWEHRKGTDYHKQPWQAKISVIRPSKGHESCMGAVVSEYFVLTAAHCFTVDDKE ## HSIKVSVGGEKRDLEIEVVLFHPNYNINGKKEAGIPEFYDYDVALIKLKNKLKYGQTIRPICLPCTEGTTRALRLPP ## TTTCQQQKEELLPAQDIKALFVSEEEKKLTRKEVYIKNGDKKGSCERDAQYAPGYDKVKDISEVVTPRFLCTGGVSP ## YADPNTCRGDSGGPLIVHKRSRFIQVGVISWGVVDVCKNQKRQKQVPAHARDFHINLFQVLPWLKEKLQDEDLGFL\" ## ## [[3]] ## [1] \"APPIQSRIIGGRECEKNSHPWQVAIYHYSSFQCGGVLVNPKWVLTAAHCKNDNYEVWLGRHNLFENENTAQF ## FGVTADFPHPGFNLSLLKXHTKADGKDYSHDLMLLRLQSPAKITDAVKVLELPTQEPELGSTCEASGWGSIEPGPDB ## FEFPDEIQCVQLTLLQNTFCABAHPBKVTESMLCAGYLPGGKDTCMGDSGGPLICNGMWQGITSWGHTPCGSANKPS ## IYTKLIFYLDWINDTITENP\""},{"path":"https://nanx.me/protr/articles/protr.html","id":"read-fasta-files","dir":"Articles","previous_headings":"Miscellaneous tools","what":"Read FASTA files","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"function readFASTA() provides convenient way read protein sequences stored FASTA format files. See ?readFASTA details. returned sequences stored named list, whose components named protein sequences‚Äô names.","code":""},{"path":"https://nanx.me/protr/articles/protr.html","id":"read-pdb-files","dir":"Articles","previous_headings":"Miscellaneous tools","what":"Read PDB files","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"Protein Data Bank (PDB) file format text file format describing three dimensional structures protein. function readPDB() provides function read protein sequences stored PDB format files. See ?readPDB details.","code":""},{"path":"https://nanx.me/protr/articles/protr.html","id":"sanity-check-for-amino-acid-types","dir":"Articles","previous_headings":"Miscellaneous tools","what":"Sanity check for amino acid types","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"protcheck() function checks protein sequence‚Äôs amino acid types 20 default types, returns TRUE amino acids sequence belongs 20 default types:","code":"x <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]] # a real sequence protcheck(x) #> [1] TRUE # an artificial sequence protcheck(paste(x, \"Z\", sep = \"\")) #> [1] FALSE"},{"path":"https://nanx.me/protr/articles/protr.html","id":"remove-gaps-from-sequences","dir":"Articles","previous_headings":"Miscellaneous tools","what":"Remove gaps from sequences","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"removeGaps() function allows us remove/replace gaps (-) ‚Äúirregular‚Äù characters amino acid sequences, prepare feature extraction sequence alignment based similarity computation.","code":""},{"path":"https://nanx.me/protr/articles/protr.html","id":"protein-sequence-partition","dir":"Articles","previous_headings":"Miscellaneous tools","what":"Protein sequence partition","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"protseg() function partitions protein sequences create sliding windows. usually required creating feature vectors machine learning tasks. Users can specify sequence x, character aa, one 20 amino acid types, positive integer k, controls window size (half window). function returns named list, component contains one segmentations (character string), names list components positions specified amino acid sequence. See example :","code":"protseg(x, aa = \"M\", k = 5) #> $`48` #> [1] \"DEKTQMIYQQH\" #>  #> $`242` #> [1] \"LPWNSMILIGK\" #>  #> $`490` #> [1] \"TVTDNMLCAGD\" #>  #> $`525` #> [1] \"LNDGRMTLVGI\""},{"path":"https://nanx.me/protr/articles/protr.html","id":"auto-cross-covariance-computation","dir":"Articles","previous_headings":"Miscellaneous tools","what":"Auto cross covariance computation","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"Auto Cross Covariance (ACC) extensively used scales-based descriptors computation, approach calculates auto covariance auto cross covariance generating scale-based descriptors length. Users can write scales-based descriptor functions help acc() function protr package.","code":""},{"path":"https://nanx.me/protr/articles/protr.html","id":"pre-computed-2d-and-3d-descriptor-sets-for-the-20-amino-acids","dir":"Articles","previous_headings":"Miscellaneous tools","what":"Pre-computed 2D and 3D descriptor sets for the 20 amino acids","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"protr package ships 20 pre-computed 2D 3D descriptor sets 20 amino acids use scales-based descriptors. Please use data(package = \"protr\") list datasets included protr package.","code":""},{"path":"https://nanx.me/protr/articles/protr.html","id":"blosum-and-pam-matrices-for-the-20-amino-acids","dir":"Articles","previous_headings":"Miscellaneous tools","what":"BLOSUM and PAM matrices for the 20 amino acids","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"BLOSUM PAM matrices 20 amino acids can used calculate BLOSUM PAM matrix-derived descriptors function extractBLOSUM(), datasets named AABLOSUM45, AABLOSUM50, AABLOSUM62, AABLOSUM80, AABLOSUM100, AAPAM30, AAPAM40, AAPAM70, AAPAM120, AAPAM250.","code":""},{"path":"https://nanx.me/protr/articles/protr.html","id":"metadata-of-the-20-amino-acids","dir":"Articles","previous_headings":"Miscellaneous tools","what":"Metadata of the 20 amino acids","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"reference, AAMetaInfo dataset includes meta information 20 amino acids used 2D 3D descriptor calculation protr package. dataset include amino acid‚Äôs name, one-letter representation, three-letter representation, SMILE representation, PubChem CID PubChem link. See data(AAMetaInfo) details.","code":""},{"path":"https://nanx.me/protr/articles/protr.html","id":"protrweb","dir":"Articles","previous_headings":"","what":"ProtrWeb","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"web service built protr, namely ProtrWeb, located http://protr.org. ProtrWeb (Figure 8) require knowledge programming user. user-friendly web application computing protein sequence descriptors presented protr package. Figure 8: screenshot web application ProtrWeb Source code repository Shiny web application: https://github.com/nanxstats/protrweb.","code":""},{"path":"https://nanx.me/protr/articles/protr.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"protr: R package for generating various numerical representation schemes of protein sequences","text":"summary descriptors protr package listed Table 3. Table 3: List commonly used descriptors protr 1 number depends choice number properties amino acids choice maximum values lag. default use 8 types properties lag = 30. 2 number depends maximum value lag. default, lag = 30. Two distance matrices used, descriptor dimension \\(30 \\times 2 = 60\\) \\((20 + 30) \\times 2 = 100\\). 3 number depends choice number set amino acid properties choice \\(\\lambda\\) value. default use 3 types properties proposed Kuo-Chen Chou \\(\\lambda = 30\\). 4 number depends choice \\(\\lambda\\) vlaue. default \\(\\lambda = 30\\). scales-based PCM descriptors protr package listed Table 4. Table 4: List PCM descriptors protr amino acid descriptor sets used scales-based descriptors provided protr package listed Table 5. Note non-informative descriptors (like descriptors one value across 20 amino acids) datasets already filtered . Table 5: List pre-calculated descriptor sets 20 amino acids protr","code":""},{"path":[]},{"path":"https://nanx.me/protr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nan Xiao. Author, maintainer. Qing-Song Xu. Author. Dong-Sheng Cao. Author. Sebastian Mueller. Contributor.            Alva Genomics","code":""},{"path":"https://nanx.me/protr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Xiao N, Cao D, Zhu M, Xu Q (2015). ‚Äúprotr/ProtrWeb: R package web server generating various numerical representation schemes protein sequences.‚Äù Bioinformatics, 31(11), 1857‚Äì1859. doi:10.1093/bioinformatics/btv042.","code":"@Article{,   title = {protr/{ProtrWeb}: {R} package and web server for generating various numerical representation schemes of protein sequences},   author = {Nan Xiao and Dong-Sheng Cao and Min-Feng Zhu and Qing-Song Xu},   year = {2015},   journal = {Bioinformatics},   volume = {31},   number = {11},   pages = {1857--1859},   doi = {10.1093/bioinformatics/btv042}, }"},{"path":"https://nanx.me/protr/index.html","id":"protr-","dir":"","previous_headings":"","what":"Generating Various Numerical Representation Schemes for Protein Sequences","title":"Generating Various Numerical Representation Schemes for Protein Sequences","text":"Comprehensive toolkit generating various numerical features protein sequences described Xiao et al.¬†(2015) <DOI:10.1093/bioinformatics/btv042> (PDF).","code":""},{"path":"https://nanx.me/protr/index.html","id":"paper-citation","dir":"","previous_headings":"","what":"Paper citation","title":"Generating Various Numerical Representation Schemes for Protein Sequences","text":"Formatted citation: Nan Xiao, Dong-Sheng Cao, Min-Feng Zhu, Qing-Song Xu (2015). protr/ProtrWeb: R package web server generating various numerical representation schemes protein sequences. Bioinformatics, 31(11), 1857‚Äì1859. BibTeX entry:","code":"@article{Xiao2015,   author  = {Xiao, Nan and Cao, Dong-Sheng and Zhu, Min-Feng and Xu, Qing-Song.},   title   = {protr/{ProtrWeb}: {R} package and web server for generating various numerical representation schemes of protein sequences},   journal = {Bioinformatics},   year    = {2015},   volume  = {31},   number  = {11},   pages   = {1857--1859},   doi     = {10.1093/bioinformatics/btv042} }"},{"path":"https://nanx.me/protr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Generating Various Numerical Representation Schemes for Protein Sequences","text":"install protr CRAN: try latest version GitHub: Browse package vignette quick-start.","code":"install.packages(\"protr\") remotes::install_github(\"nanxstats/protr\")"},{"path":"https://nanx.me/protr/index.html","id":"shiny-app","dir":"","previous_headings":"","what":"Shiny app","title":"Generating Various Numerical Representation Schemes for Protein Sequences","text":"ProtrWeb, Shiny web application built protr, can accessed http://protr.org. ProtrWeb user-friendly web application computing protein sequence descriptors (features) presented protr package.","code":""},{"path":[]},{"path":"https://nanx.me/protr/index.html","id":"commonly-used-descriptors","dir":"","previous_headings":"List of supported descriptors","what":"Commonly used descriptors","title":"Generating Various Numerical Representation Schemes for Protein Sequences","text":"Amino acid composition descriptors Amino acid composition Dipeptide composition Tripeptide composition Autocorrelation descriptors Normalized Moreau-Broto autocorrelation Moran autocorrelation Geary autocorrelation CTD descriptors Composition Transition Distribution Conjoint Triad descriptors Quasi-sequence-order descriptors Sequence-order-coupling number Quasi-sequence-order descriptors Pseudo amino acid composition (PseAAC) Pseudo amino acid composition Amphiphilic pseudo amino acid composition Profile-based descriptors Profile-based descriptors derived PSSM (Position-Specific Scoring Matrix)","code":""},{"path":"https://nanx.me/protr/index.html","id":"proteochemometric-pcm-modeling-descriptors","dir":"","previous_headings":"List of supported descriptors","what":"Proteochemometric (PCM) modeling descriptors","title":"Generating Various Numerical Representation Schemes for Protein Sequences","text":"Scales-based descriptors derived amino acid properties (AAindex) Scales-based descriptors derived 20+ classes 2D 3D molecular descriptors (Topological, WHIM, VHSE, etc.) Scales-based descriptors derived factor analysis Scales-based descriptors derived multidimensional scaling BLOSUM PAM matrix-derived descriptors","code":""},{"path":"https://nanx.me/protr/index.html","id":"similarity-computation","dir":"","previous_headings":"List of supported descriptors","what":"Similarity computation","title":"Generating Various Numerical Representation Schemes for Protein Sequences","text":"Local global pairwise sequence alignment protein sequences: two protein sequences Parallelized pairwise similarity calculation list protein sequences Parallelized pairwise similarity calculation two sets protein sequences GO semantic similarity measures: two groups GO terms / two Entrez Gene IDs Parallelized pairwise similarity calculation list GO terms / Entrez Gene IDs","code":""},{"path":"https://nanx.me/protr/index.html","id":"miscellaneous-tools-and-datasets","dir":"","previous_headings":"List of supported descriptors","what":"Miscellaneous tools and datasets","title":"Generating Various Numerical Representation Schemes for Protein Sequences","text":"Retrieve protein sequences UniProt Read protein sequences FASTA format Read protein sequences PDB format Sanity check amino acid types appeared protein sequences Protein sequence segmentation Auto cross covariance (ACC) generating scales-based descriptors length 20+ pre-computed 2D 3D descriptor sets 20 amino acids use scales-based descriptors BLOSUM PAM matrices 20 amino acids Meta information 20 amino acids","code":""},{"path":"https://nanx.me/protr/index.html","id":"contribute","dir":"","previous_headings":"","what":"Contribute","title":"Generating Various Numerical Representation Schemes for Protein Sequences","text":"contribute project, please take look Contributing Guidelines first. Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://nanx.me/protr/reference/AA2DACOR.html","id":null,"dir":"Reference","previous_headings":"","what":"2D Autocorrelations Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AA2DACOR","title":"2D Autocorrelations Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AA2DACOR","text":"dataset includes 2D autocorrelations descriptors 20 amino acids calculated Dragon (version 5.4) used scales extraction package.","code":""},{"path":"https://nanx.me/protr/reference/AA2DACOR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"2D Autocorrelations Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AA2DACOR","text":"","code":"data(AA2DACOR)"},{"path":"https://nanx.me/protr/reference/AA3DMoRSE.html","id":null,"dir":"Reference","previous_headings":"","what":"3D-MoRSE Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AA3DMoRSE","title":"3D-MoRSE Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AA3DMoRSE","text":"dataset includes 3D-MoRSE descriptors 20 amino acids calculated Dragon (version 5.4) used scales extraction package.","code":""},{"path":"https://nanx.me/protr/reference/AA3DMoRSE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"3D-MoRSE Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AA3DMoRSE","text":"","code":"data(AA3DMoRSE)"},{"path":"https://nanx.me/protr/reference/AAACF.html","id":null,"dir":"Reference","previous_headings":"","what":"Atom-Centred Fragments Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAACF","title":"Atom-Centred Fragments Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAACF","text":"dataset includes atom-centred fragments descriptors 20 amino acids calculated Dragon (version 5.4) used scales extraction package.","code":""},{"path":"https://nanx.me/protr/reference/AAACF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Atom-Centred Fragments Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAACF","text":"","code":"data(AAACF)"},{"path":"https://nanx.me/protr/reference/AABLOSUM100.html","id":null,"dir":"Reference","previous_headings":"","what":"BLOSUM100 Matrix for 20 Amino Acids ‚Äî AABLOSUM100","title":"BLOSUM100 Matrix for 20 Amino Acids ‚Äî AABLOSUM100","text":"BLOSUM100 Matrix 20 amino acids. matrix extracted Biostrings package Bioconductor.","code":""},{"path":"https://nanx.me/protr/reference/AABLOSUM100.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BLOSUM100 Matrix for 20 Amino Acids ‚Äî AABLOSUM100","text":"","code":"data(AABLOSUM100)"},{"path":"https://nanx.me/protr/reference/AABLOSUM45.html","id":null,"dir":"Reference","previous_headings":"","what":"BLOSUM45 Matrix for 20 Amino Acids ‚Äî AABLOSUM45","title":"BLOSUM45 Matrix for 20 Amino Acids ‚Äî AABLOSUM45","text":"BLOSUM45 Matrix 20 amino acids. matrix extracted Biostrings package Bioconductor.","code":""},{"path":"https://nanx.me/protr/reference/AABLOSUM45.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BLOSUM45 Matrix for 20 Amino Acids ‚Äî AABLOSUM45","text":"","code":"data(AABLOSUM45)"},{"path":"https://nanx.me/protr/reference/AABLOSUM50.html","id":null,"dir":"Reference","previous_headings":"","what":"BLOSUM50 Matrix for 20 Amino Acids ‚Äî AABLOSUM50","title":"BLOSUM50 Matrix for 20 Amino Acids ‚Äî AABLOSUM50","text":"BLOSUM50 Matrix 20 amino acids. matrix extracted Biostrings package Bioconductor.","code":""},{"path":"https://nanx.me/protr/reference/AABLOSUM50.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BLOSUM50 Matrix for 20 Amino Acids ‚Äî AABLOSUM50","text":"","code":"data(AABLOSUM50)"},{"path":"https://nanx.me/protr/reference/AABLOSUM62.html","id":null,"dir":"Reference","previous_headings":"","what":"BLOSUM62 Matrix for 20 Amino Acids ‚Äî AABLOSUM62","title":"BLOSUM62 Matrix for 20 Amino Acids ‚Äî AABLOSUM62","text":"BLOSUM62 Matrix 20 amino acids. matrix extracted Biostrings package Bioconductor.","code":""},{"path":"https://nanx.me/protr/reference/AABLOSUM62.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BLOSUM62 Matrix for 20 Amino Acids ‚Äî AABLOSUM62","text":"","code":"data(AABLOSUM62)"},{"path":"https://nanx.me/protr/reference/AABLOSUM80.html","id":null,"dir":"Reference","previous_headings":"","what":"BLOSUM80 Matrix for 20 Amino Acids ‚Äî AABLOSUM80","title":"BLOSUM80 Matrix for 20 Amino Acids ‚Äî AABLOSUM80","text":"BLOSUM80 Matrix 20 amino acids. matrix extracted Biostrings package Bioconductor.","code":""},{"path":"https://nanx.me/protr/reference/AABLOSUM80.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BLOSUM80 Matrix for 20 Amino Acids ‚Äî AABLOSUM80","text":"","code":"data(AABLOSUM80)"},{"path":"https://nanx.me/protr/reference/AABurden.html","id":null,"dir":"Reference","previous_headings":"","what":"Burden Eigenvalues Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AABurden","title":"Burden Eigenvalues Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AABurden","text":"dataset includes Burden eigenvalues descriptors 20 amino acids calculated Dragon (version 5.4) used scales extraction package.","code":""},{"path":"https://nanx.me/protr/reference/AABurden.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Burden Eigenvalues Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AABurden","text":"","code":"data(AABurden)"},{"path":"https://nanx.me/protr/reference/AACPSA.html","id":null,"dir":"Reference","previous_headings":"","what":"CPSA Descriptors for 20 Amino Acids calculated by Discovery Studio ‚Äî AACPSA","title":"CPSA Descriptors for 20 Amino Acids calculated by Discovery Studio ‚Äî AACPSA","text":"dataset includes CPSA descriptors 20 amino acids calculated Discovery Studio (version 2.5) used scales extraction package.","code":""},{"path":"https://nanx.me/protr/reference/AACPSA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CPSA Descriptors for 20 Amino Acids calculated by Discovery Studio ‚Äî AACPSA","text":"amino acid molecules also optimized MOE 2011.10 (semiempirical AM1) calculating CPSA descriptors. SDF file containing information optimized amino acid molecules included package. See OptAA3d information.","code":""},{"path":"https://nanx.me/protr/reference/AACPSA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CPSA Descriptors for 20 Amino Acids calculated by Discovery Studio ‚Äî AACPSA","text":"","code":"data(AACPSA)"},{"path":"https://nanx.me/protr/reference/AAConn.html","id":null,"dir":"Reference","previous_headings":"","what":"Connectivity Indices Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAConn","title":"Connectivity Indices Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAConn","text":"dataset includes connectivity indices descriptors 20 amino acids calculated Dragon (version 5.4) used scales extraction package.","code":""},{"path":"https://nanx.me/protr/reference/AAConn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connectivity Indices Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAConn","text":"","code":"data(AAConn)"},{"path":"https://nanx.me/protr/reference/AAConst.html","id":null,"dir":"Reference","previous_headings":"","what":"Constitutional Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAConst","title":"Constitutional Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAConst","text":"dataset includes constitutional descriptors 20 amino acids calculated Dragon (version 5.4) used scales extraction package.","code":""},{"path":"https://nanx.me/protr/reference/AAConst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constitutional Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAConst","text":"","code":"data(AAConst)"},{"path":"https://nanx.me/protr/reference/AADescAll.html","id":null,"dir":"Reference","previous_headings":"","what":"All 2D Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AADescAll","title":"All 2D Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AADescAll","text":"dataset includes 2D descriptors 20 amino acids calculated Dragon (version 5.4) used scales extraction package.","code":""},{"path":"https://nanx.me/protr/reference/AADescAll.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"All 2D Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AADescAll","text":"","code":"data(AADescAll)"},{"path":"https://nanx.me/protr/reference/AAEdgeAdj.html","id":null,"dir":"Reference","previous_headings":"","what":"Edge Adjacency Indices Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAEdgeAdj","title":"Edge Adjacency Indices Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAEdgeAdj","text":"dataset includes edge adjacency indices descriptors 20 amino acids calculated Dragon (version 5.4) used scales extraction package.","code":""},{"path":"https://nanx.me/protr/reference/AAEdgeAdj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Edge Adjacency Indices Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAEdgeAdj","text":"","code":"data(AAEdgeAdj)"},{"path":"https://nanx.me/protr/reference/AAEigIdx.html","id":null,"dir":"Reference","previous_headings":"","what":"Eigenvalue-Based Indices Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAEigIdx","title":"Eigenvalue-Based Indices Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAEigIdx","text":"dataset includes eigenvalue-based indices descriptors 20 amino acids calculated Dragon (version 5.4) used scales extraction package.","code":""},{"path":"https://nanx.me/protr/reference/AAEigIdx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Eigenvalue-Based Indices Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAEigIdx","text":"","code":"data(AAEigIdx)"},{"path":"https://nanx.me/protr/reference/AAFGC.html","id":null,"dir":"Reference","previous_headings":"","what":"Functional Group Counts Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAFGC","title":"Functional Group Counts Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAFGC","text":"dataset includes functional group counts descriptors 20 amino acids calculated Dragon (version 5.4) used scales extraction package.","code":""},{"path":"https://nanx.me/protr/reference/AAFGC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functional Group Counts Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAFGC","text":"","code":"data(AAFGC)"},{"path":"https://nanx.me/protr/reference/AAGETAWAY.html","id":null,"dir":"Reference","previous_headings":"","what":"GETAWAY Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAGETAWAY","title":"GETAWAY Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAGETAWAY","text":"dataset includes GETAWAY descriptors 20 amino acids calculated Dragon (version 5.4) used scales extraction package.","code":""},{"path":"https://nanx.me/protr/reference/AAGETAWAY.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GETAWAY Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAGETAWAY","text":"","code":"data(AAGETAWAY)"},{"path":"https://nanx.me/protr/reference/AAGeom.html","id":null,"dir":"Reference","previous_headings":"","what":"Geometrical Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAGeom","title":"Geometrical Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAGeom","text":"dataset includes geometrical descriptors 20 amino acids calculated Dragon (version 5.4) used scales extraction package.","code":""},{"path":"https://nanx.me/protr/reference/AAGeom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geometrical Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAGeom","text":"","code":"data(AAGeom)"},{"path":"https://nanx.me/protr/reference/AAInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Information Indices Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAInfo","title":"Information Indices Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAInfo","text":"dataset includes information indices descriptors 20 amino acids calculated Dragon (version 5.4) used scales extraction package.","code":""},{"path":"https://nanx.me/protr/reference/AAInfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Information Indices Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAInfo","text":"","code":"data(AAInfo)"},{"path":"https://nanx.me/protr/reference/AAMOE2D.html","id":null,"dir":"Reference","previous_headings":"","what":"2D Descriptors for 20 Amino Acids calculated by MOE 2011.10 ‚Äî AAMOE2D","title":"2D Descriptors for 20 Amino Acids calculated by MOE 2011.10 ‚Äî AAMOE2D","text":"dataset includes 2D descriptors 20 amino acids calculated MOE 2011.10 used scales extraction package.","code":""},{"path":"https://nanx.me/protr/reference/AAMOE2D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"2D Descriptors for 20 Amino Acids calculated by MOE 2011.10 ‚Äî AAMOE2D","text":"","code":"data(AAMOE2D)"},{"path":"https://nanx.me/protr/reference/AAMOE3D.html","id":null,"dir":"Reference","previous_headings":"","what":"3D Descriptors for 20 Amino Acids calculated by MOE 2011.10 ‚Äî AAMOE3D","title":"3D Descriptors for 20 Amino Acids calculated by MOE 2011.10 ‚Äî AAMOE3D","text":"dataset includes 3D descriptors 20 amino acids calculated MOE 2011.10 used scales extraction package. amino acid molecules also optimized MOE (semiempirical AM1) calculating 3D descriptors. SDF file containing information optimized amino acid molecules included package. See OptAA3d information.","code":""},{"path":"https://nanx.me/protr/reference/AAMOE3D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"3D Descriptors for 20 Amino Acids calculated by MOE 2011.10 ‚Äî AAMOE3D","text":"","code":"data(AAMOE3D)"},{"path":"https://nanx.me/protr/reference/AAMetaInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Meta Information for the 20 Amino Acids ‚Äî AAMetaInfo","title":"Meta Information for the 20 Amino Acids ‚Äî AAMetaInfo","text":"dataset includes meta information 20 amino acids used 2D 3D descriptor calculation package. column represents: AAName Amino acid name Short One-letter representation Abbreviation Three-letter representation mol SMILES representation PUBCHEM_COMPOUND_CID PubChem CID amino acid PUBCHEM_LINK PubChem link amino acid","code":""},{"path":"https://nanx.me/protr/reference/AAMetaInfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Meta Information for the 20 Amino Acids ‚Äî AAMetaInfo","text":"","code":"data(AAMetaInfo)"},{"path":"https://nanx.me/protr/reference/AAMolProp.html","id":null,"dir":"Reference","previous_headings":"","what":"Molecular Properties Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAMolProp","title":"Molecular Properties Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAMolProp","text":"dataset includes molecular properties descriptors 20 amino acids calculated Dragon (version 5.4) used scales extraction package.","code":""},{"path":"https://nanx.me/protr/reference/AAMolProp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Molecular Properties Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAMolProp","text":"","code":"data(AAMolProp)"},{"path":"https://nanx.me/protr/reference/AAPAM120.html","id":null,"dir":"Reference","previous_headings":"","what":"PAM120 Matrix for 20 Amino Acids ‚Äî AAPAM120","title":"PAM120 Matrix for 20 Amino Acids ‚Äî AAPAM120","text":"PAM120 Matrix 20 amino acids. matrix extracted Biostrings package Bioconductor.","code":""},{"path":"https://nanx.me/protr/reference/AAPAM120.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PAM120 Matrix for 20 Amino Acids ‚Äî AAPAM120","text":"","code":"data(AAPAM120)"},{"path":"https://nanx.me/protr/reference/AAPAM250.html","id":null,"dir":"Reference","previous_headings":"","what":"PAM250 Matrix for 20 Amino Acids ‚Äî AAPAM250","title":"PAM250 Matrix for 20 Amino Acids ‚Äî AAPAM250","text":"PAM250 Matrix 20 amino acids. matrix extracted Biostrings package Bioconductor.","code":""},{"path":"https://nanx.me/protr/reference/AAPAM250.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PAM250 Matrix for 20 Amino Acids ‚Äî AAPAM250","text":"","code":"data(AAPAM250)"},{"path":"https://nanx.me/protr/reference/AAPAM30.html","id":null,"dir":"Reference","previous_headings":"","what":"PAM30 Matrix for 20 Amino Acids ‚Äî AAPAM30","title":"PAM30 Matrix for 20 Amino Acids ‚Äî AAPAM30","text":"PAM30 Matrix 20 amino acids. matrix extracted Biostrings package Bioconductor.","code":""},{"path":"https://nanx.me/protr/reference/AAPAM30.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PAM30 Matrix for 20 Amino Acids ‚Äî AAPAM30","text":"","code":"data(AAPAM30)"},{"path":"https://nanx.me/protr/reference/AAPAM40.html","id":null,"dir":"Reference","previous_headings":"","what":"PAM40 Matrix for 20 Amino Acids ‚Äî AAPAM40","title":"PAM40 Matrix for 20 Amino Acids ‚Äî AAPAM40","text":"PAM40 Matrix 20 amino acids. matrix extracted Biostrings package Bioconductor.","code":""},{"path":"https://nanx.me/protr/reference/AAPAM40.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PAM40 Matrix for 20 Amino Acids ‚Äî AAPAM40","text":"","code":"data(AAPAM40)"},{"path":"https://nanx.me/protr/reference/AAPAM70.html","id":null,"dir":"Reference","previous_headings":"","what":"PAM70 Matrix for 20 Amino Acids ‚Äî AAPAM70","title":"PAM70 Matrix for 20 Amino Acids ‚Äî AAPAM70","text":"PAM70 Matrix 20 amino acids. matrix extracted Biostrings package Bioconductor.","code":""},{"path":"https://nanx.me/protr/reference/AAPAM70.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PAM70 Matrix for 20 Amino Acids ‚Äî AAPAM70","text":"","code":"data(AAPAM70)"},{"path":"https://nanx.me/protr/reference/AARDF.html","id":null,"dir":"Reference","previous_headings":"","what":"RDF Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AARDF","title":"RDF Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AARDF","text":"dataset includes RDF descriptors 20 amino acids calculated Dragon (version 5.4) used scales extraction package.","code":""},{"path":"https://nanx.me/protr/reference/AARDF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RDF Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AARDF","text":"","code":"data(AARDF)"},{"path":"https://nanx.me/protr/reference/AARandic.html","id":null,"dir":"Reference","previous_headings":"","what":"Randic Molecular Profiles Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AARandic","title":"Randic Molecular Profiles Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AARandic","text":"dataset includes Randic molecular profiles descriptors 20 amino acids calculated Dragon (version 5.4) used scales extraction package.","code":""},{"path":"https://nanx.me/protr/reference/AARandic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Randic Molecular Profiles Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AARandic","text":"","code":"data(AARandic)"},{"path":"https://nanx.me/protr/reference/AATopo.html","id":null,"dir":"Reference","previous_headings":"","what":"Topological Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AATopo","title":"Topological Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AATopo","text":"dataset includes topological descriptors 20 amino acids calculated Dragon (version 5.4) used scales extraction package.","code":""},{"path":"https://nanx.me/protr/reference/AATopo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Topological Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AATopo","text":"","code":"data(AATopo)"},{"path":"https://nanx.me/protr/reference/AATopoChg.html","id":null,"dir":"Reference","previous_headings":"","what":"Topological Charge Indices Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AATopoChg","title":"Topological Charge Indices Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AATopoChg","text":"dataset includes topological charge indices descriptors 20 amino acids calculated Dragon (version 5.4) used scales extraction package.","code":""},{"path":"https://nanx.me/protr/reference/AATopoChg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Topological Charge Indices Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AATopoChg","text":"","code":"data(AATopoChg)"},{"path":"https://nanx.me/protr/reference/AAWHIM.html","id":null,"dir":"Reference","previous_headings":"","what":"WHIM Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAWHIM","title":"WHIM Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAWHIM","text":"dataset includes WHIM descriptors 20 amino acids calculated Dragon (version 5.4) used scales extraction package.","code":""},{"path":"https://nanx.me/protr/reference/AAWHIM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"WHIM Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAWHIM","text":"","code":"data(AAWHIM)"},{"path":"https://nanx.me/protr/reference/AAWalk.html","id":null,"dir":"Reference","previous_headings":"","what":"Walk and Path Counts Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAWalk","title":"Walk and Path Counts Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAWalk","text":"dataset includes walk path counts descriptors 20 amino acids calculated Dragon (version 5.4) used scales extraction package.","code":""},{"path":"https://nanx.me/protr/reference/AAWalk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Walk and Path Counts Descriptors for 20 Amino Acids calculated by Dragon ‚Äî AAWalk","text":"","code":"data(AAWalk)"},{"path":"https://nanx.me/protr/reference/AAindex.html","id":null,"dir":"Reference","previous_headings":"","what":"AAindex Data of 544 Physicochemical and Biological Properties for 20 Amino Acids ‚Äî AAindex","title":"AAindex Data of 544 Physicochemical and Biological Properties for 20 Amino Acids ‚Äî AAindex","text":"data extracted AAindex1 database ver 9.1 (https://www.genome.jp/ftp/db/community/aaindex/old/ver9.1/aaindex1) November, 2012 (data last modified 2006-08-14).","code":""},{"path":"https://nanx.me/protr/reference/AAindex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"AAindex Data of 544 Physicochemical and Biological Properties for 20 Amino Acids ‚Äî AAindex","text":"dataset, users can investigate property's accession number details. See https://www.genome.jp/aaindex/ information.","code":""},{"path":"https://nanx.me/protr/reference/AAindex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AAindex Data of 544 Physicochemical and Biological Properties for 20 Amino Acids ‚Äî AAindex","text":"","code":"data(AAindex)"},{"path":"https://nanx.me/protr/reference/ACC.html","id":null,"dir":"Reference","previous_headings":"","what":"Auto Cross Covariance (ACC) for Generating Scales-Based Descriptors of the Same Length ‚Äî acc","title":"Auto Cross Covariance (ACC) for Generating Scales-Based Descriptors of the Same Length ‚Äî acc","text":"function calculates auto covariance auto cross covariance generating scale-based descriptors length.","code":""},{"path":"https://nanx.me/protr/reference/ACC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Auto Cross Covariance (ACC) for Generating Scales-Based Descriptors of the Same Length ‚Äî acc","text":"","code":"acc(mat, lag)"},{"path":"https://nanx.me/protr/reference/ACC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Auto Cross Covariance (ACC) for Generating Scales-Based Descriptors of the Same Length ‚Äî acc","text":"mat p * n matrix. row represents one scale (total p scales), column represents one amino acid position (total n amino acids). lag lag parameter. Must less amino acids.","code":""},{"path":"https://nanx.me/protr/reference/ACC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Auto Cross Covariance (ACC) for Generating Scales-Based Descriptors of the Same Length ‚Äî acc","text":"length lag * p^2 named vector, element names constructed : scales index (crossed scales index) lag index.","code":""},{"path":"https://nanx.me/protr/reference/ACC.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Auto Cross Covariance (ACC) for Generating Scales-Based Descriptors of the Same Length ‚Äî acc","text":"Please see references details auto cross covariance.","code":""},{"path":"https://nanx.me/protr/reference/ACC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Auto Cross Covariance (ACC) for Generating Scales-Based Descriptors of the Same Length ‚Äî acc","text":"Wold, S., Jonsson, J., Sjorstrom, M., Sandberg, M., & Rannar, S. (1993). DNA peptide sequences chemical processes multivariately modelled principal component analysis partial least-squares projections latent structures. Analytica chimica acta, 277(2), 239--253. Sjostrom, M., Rannar, S., & Wieslander, . (1995). Polypeptide sequence property relationships Escherichia coli based auto cross covariances. Chemometrics intelligent laboratory systems, 29(2), 295--305.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/ACC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Auto Cross Covariance (ACC) for Generating Scales-Based Descriptors of the Same Length ‚Äî acc","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/ACC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Auto Cross Covariance (ACC) for Generating Scales-Based Descriptors of the Same Length ‚Äî acc","text":"","code":"p <- 8 # p is the scales number n <- 200 # n is the amino acid number lag <- 7 # the lag paramter mat <- matrix(rnorm(p * n), nrow = p, ncol = n) acc(mat, lag) #>     scl1.lag1     scl2.lag1     scl3.lag1     scl4.lag1     scl5.lag1  #> -1.014626e-02 -4.689789e-02 -2.692515e-02  1.647534e-02  9.724370e-02  #>     scl6.lag1     scl7.lag1     scl8.lag1     scl1.lag2     scl2.lag2  #>  7.484145e-02 -7.700089e-02  5.507884e-03  1.177610e-02  5.797200e-02  #>     scl3.lag2     scl4.lag2     scl5.lag2     scl6.lag2     scl7.lag2  #>  2.777720e-02  7.371168e-02 -3.096055e-02 -6.863102e-02  5.809776e-02  #>     scl8.lag2     scl1.lag3     scl2.lag3     scl3.lag3     scl4.lag3  #>  4.190925e-03 -1.620536e-01 -1.914391e-03  5.151140e-03  4.239143e-02  #>     scl5.lag3     scl6.lag3     scl7.lag3     scl8.lag3     scl1.lag4  #> -3.490024e-02 -8.021212e-02 -4.018082e-02  6.264454e-02  2.969457e-02  #>     scl2.lag4     scl3.lag4     scl4.lag4     scl5.lag4     scl6.lag4  #> -7.984651e-02  4.907431e-02 -1.382956e-02 -1.340997e-01 -4.668484e-02  #>     scl7.lag4     scl8.lag4     scl1.lag5     scl2.lag5     scl3.lag5  #>  2.855372e-02 -2.130800e-03  8.552905e-02  9.787946e-03  7.878780e-02  #>     scl4.lag5     scl5.lag5     scl6.lag5     scl7.lag5     scl8.lag5  #>  3.191921e-02 -2.942088e-02  4.191549e-02 -1.930977e-01  1.801244e-02  #>     scl1.lag6     scl2.lag6     scl3.lag6     scl4.lag6     scl5.lag6  #>  8.467722e-02 -4.763093e-02 -9.402049e-02 -1.060703e-01  1.122288e-01  #>     scl6.lag6     scl7.lag6     scl8.lag6     scl1.lag7     scl2.lag7  #> -1.474603e-02  6.833816e-04 -2.074423e-02 -7.696818e-02 -3.507624e-02  #>     scl3.lag7     scl4.lag7     scl5.lag7     scl6.lag7     scl7.lag7  #> -3.618370e-02  8.265259e-02 -1.182280e-02 -1.087773e-01 -4.273125e-02  #>     scl8.lag7   scl1.2.lag1   scl1.3.lag1   scl1.4.lag1   scl1.5.lag1  #> -4.820032e-02  9.072186e-02 -4.034793e-02  3.855694e-02  3.272032e-02  #>   scl1.6.lag1   scl1.7.lag1   scl1.8.lag1   scl2.3.lag1   scl2.4.lag1  #>  3.445096e-02 -2.929789e-02  1.288788e-01  4.403265e-02 -1.214084e-01  #>   scl2.5.lag1   scl2.6.lag1   scl2.7.lag1   scl2.8.lag1   scl3.4.lag1  #> -4.718246e-02  1.498830e-02 -3.510517e-03  2.588731e-02  3.759873e-02  #>   scl3.5.lag1   scl3.6.lag1   scl3.7.lag1   scl3.8.lag1   scl4.5.lag1  #>  1.041074e-01  9.830565e-02 -2.995253e-02 -4.107438e-03 -8.757631e-02  #>   scl4.6.lag1   scl4.7.lag1   scl4.8.lag1   scl5.6.lag1   scl5.7.lag1  #> -9.577378e-03  1.003160e-01  6.609862e-02 -4.093969e-02 -1.337836e-01  #>   scl5.8.lag1   scl6.7.lag1   scl6.8.lag1   scl7.8.lag1   scl2.1.lag1  #> -3.133033e-02 -1.163018e-01  8.296535e-02  2.601980e-02  4.565739e-02  #>   scl3.1.lag1   scl4.1.lag1   scl5.1.lag1   scl6.1.lag1   scl7.1.lag1  #>  1.010374e-01 -3.934506e-02 -3.167190e-02 -4.123814e-02 -1.036662e-01  #>   scl8.1.lag1   scl3.2.lag1   scl4.2.lag1   scl5.2.lag1   scl6.2.lag1  #>  1.102415e-01  4.812668e-02 -1.014820e-01 -7.001576e-02 -3.997563e-04  #>   scl7.2.lag1   scl8.2.lag1   scl4.3.lag1   scl5.3.lag1   scl6.3.lag1  #> -7.309766e-02 -2.621820e-02  1.148827e-01  1.541341e-01  4.523372e-02  #>   scl7.3.lag1   scl8.3.lag1   scl5.4.lag1   scl6.4.lag1   scl7.4.lag1  #> -1.500824e-01  2.905324e-02  5.775549e-02  6.885754e-02  3.235401e-02  #>   scl8.4.lag1   scl6.5.lag1   scl7.5.lag1   scl8.5.lag1   scl7.6.lag1  #> -5.394662e-02  2.923125e-03 -1.001891e-01 -2.537464e-02 -2.821271e-02  #>   scl8.6.lag1   scl8.7.lag1   scl1.2.lag2   scl1.3.lag2   scl1.4.lag2  #>  4.127258e-02 -4.412768e-02 -1.829914e-02 -2.753872e-02 -1.034009e-01  #>   scl1.5.lag2   scl1.6.lag2   scl1.7.lag2   scl1.8.lag2   scl2.3.lag2  #>  4.420047e-03  3.396719e-02  1.309730e-01  1.084799e-01  2.735404e-02  #>   scl2.4.lag2   scl2.5.lag2   scl2.6.lag2   scl2.7.lag2   scl2.8.lag2  #>  8.781395e-02 -1.045412e-01 -9.428870e-02 -1.798644e-02 -3.550348e-02  #>   scl3.4.lag2   scl3.5.lag2   scl3.6.lag2   scl3.7.lag2   scl3.8.lag2  #>  7.206837e-02 -4.099878e-03  1.096715e-03 -7.730774e-02  5.162370e-02  #>   scl4.5.lag2   scl4.6.lag2   scl4.7.lag2   scl4.8.lag2   scl5.6.lag2  #>  1.367656e-02 -3.298740e-02  1.290353e-01  6.666055e-02 -3.461625e-02  #>   scl5.7.lag2   scl5.8.lag2   scl6.7.lag2   scl6.8.lag2   scl7.8.lag2  #>  9.996531e-02 -8.396944e-02  6.112895e-02 -8.136800e-02 -6.971209e-02  #>   scl2.1.lag2   scl3.1.lag2   scl4.1.lag2   scl5.1.lag2   scl6.1.lag2  #> -1.846996e-02 -4.372762e-02  8.690213e-02  4.804077e-02  9.540462e-04  #>   scl7.1.lag2   scl8.1.lag2   scl3.2.lag2   scl4.2.lag2   scl5.2.lag2  #>  2.965491e-02 -9.818870e-02 -2.112124e-03 -4.883648e-02  1.451089e-01  #>   scl6.2.lag2   scl7.2.lag2   scl8.2.lag2   scl4.3.lag2   scl5.3.lag2  #>  8.361294e-02 -4.952688e-02  1.852868e-02 -5.045060e-02  7.113146e-02  #>   scl6.3.lag2   scl7.3.lag2   scl8.3.lag2   scl5.4.lag2   scl6.4.lag2  #>  4.344614e-02 -2.519331e-03  4.097570e-02  7.662437e-02  3.948970e-02  #>   scl7.4.lag2   scl8.4.lag2   scl6.5.lag2   scl7.5.lag2   scl8.5.lag2  #> -1.316233e-01 -2.391191e-02  5.628492e-02 -8.817427e-02 -3.587799e-02  #>   scl7.6.lag2   scl8.6.lag2   scl8.7.lag2   scl1.2.lag3   scl1.3.lag3  #> -2.501454e-03  2.470557e-02 -5.544666e-02  2.189575e-02  2.256658e-02  #>   scl1.4.lag3   scl1.5.lag3   scl1.6.lag3   scl1.7.lag3   scl1.8.lag3  #> -4.442616e-02 -1.587000e-02  1.730559e-02  1.373491e-02  9.869325e-03  #>   scl2.3.lag3   scl2.4.lag3   scl2.5.lag3   scl2.6.lag3   scl2.7.lag3  #>  1.082218e-01 -1.050241e-01 -7.049303e-02  7.566065e-02  1.593674e-03  #>   scl2.8.lag3   scl3.4.lag3   scl3.5.lag3   scl3.6.lag3   scl3.7.lag3  #>  1.589099e-02  7.996965e-02  2.445346e-02  8.723594e-02 -9.814877e-02  #>   scl3.8.lag3   scl4.5.lag3   scl4.6.lag3   scl4.7.lag3   scl4.8.lag3  #> -1.907348e-02 -1.283348e-01 -1.051488e-01  4.423537e-02  6.285219e-02  #>   scl5.6.lag3   scl5.7.lag3   scl5.8.lag3   scl6.7.lag3   scl6.8.lag3  #>  2.435132e-02 -5.038947e-02  9.147137e-02 -8.602451e-03 -9.754225e-02  #>   scl7.8.lag3   scl2.1.lag3   scl3.1.lag3   scl4.1.lag3   scl5.1.lag3  #>  4.795032e-03  3.563519e-02  6.424525e-03 -1.372916e-01 -8.136544e-02  #>   scl6.1.lag3   scl7.1.lag3   scl8.1.lag3   scl3.2.lag3   scl4.2.lag3  #>  2.392972e-04 -8.045395e-02 -5.663838e-02 -1.326506e-02 -2.952993e-02  #>   scl5.2.lag3   scl6.2.lag3   scl7.2.lag3   scl8.2.lag3   scl4.3.lag3  #>  4.738841e-04 -7.433937e-02  8.054848e-02  3.764598e-02 -6.196252e-02  #>   scl5.3.lag3   scl6.3.lag3   scl7.3.lag3   scl8.3.lag3   scl5.4.lag3  #> -3.336751e-02 -6.633212e-03 -7.027689e-02 -2.005246e-04 -4.974386e-02  #>   scl6.4.lag3   scl7.4.lag3   scl8.4.lag3   scl6.5.lag3   scl7.5.lag3  #>  4.039876e-02 -7.930518e-02  5.055768e-02  1.667628e-01  1.295357e-01  #>   scl8.5.lag3   scl7.6.lag3   scl8.6.lag3   scl8.7.lag3   scl1.2.lag4  #>  5.501598e-02  2.527351e-02  1.634447e-01  5.991775e-02  6.803580e-03  #>   scl1.3.lag4   scl1.4.lag4   scl1.5.lag4   scl1.6.lag4   scl1.7.lag4  #> -8.177647e-02 -3.367828e-02 -5.736340e-02 -9.135188e-02 -4.004469e-02  #>   scl1.8.lag4   scl2.3.lag4   scl2.4.lag4   scl2.5.lag4   scl2.6.lag4  #> -6.371581e-03  5.606253e-02  3.023385e-02  9.332307e-02  1.703150e-01  #>   scl2.7.lag4   scl2.8.lag4   scl3.4.lag4   scl3.5.lag4   scl3.6.lag4  #>  5.389973e-02  9.713901e-02  9.197559e-02  1.690463e-01 -6.529361e-02  #>   scl3.7.lag4   scl3.8.lag4   scl4.5.lag4   scl4.6.lag4   scl4.7.lag4  #> -4.243294e-03  7.388237e-02 -1.365675e-01  1.577828e-02  5.854146e-02  #>   scl4.8.lag4   scl5.6.lag4   scl5.7.lag4   scl5.8.lag4   scl6.7.lag4  #>  1.647634e-02  4.134614e-02  2.087563e-02  2.770891e-02 -2.279915e-02  #>   scl6.8.lag4   scl7.8.lag4   scl2.1.lag4   scl3.1.lag4   scl4.1.lag4  #> -3.585366e-02  2.065098e-02  1.424844e-01  8.308389e-03 -4.552844e-03  #>   scl5.1.lag4   scl6.1.lag4   scl7.1.lag4   scl8.1.lag4   scl3.2.lag4  #> -4.353104e-05 -1.186247e-02 -3.916131e-02  1.712992e-02  1.021958e-01  #>   scl4.2.lag4   scl5.2.lag4   scl6.2.lag4   scl7.2.lag4   scl8.2.lag4  #>  1.142540e-01 -9.140194e-03 -6.561867e-02  9.564153e-02  7.441308e-02  #>   scl4.3.lag4   scl5.3.lag4   scl6.3.lag4   scl7.3.lag4   scl8.3.lag4  #> -6.693345e-02 -2.296764e-02  2.599986e-02  2.201391e-02  2.193636e-02  #>   scl5.4.lag4   scl6.4.lag4   scl7.4.lag4   scl8.4.lag4   scl6.5.lag4  #>  1.455573e-01  1.310553e-01 -1.036613e-01 -6.369097e-02 -5.003286e-02  #>   scl7.5.lag4   scl8.5.lag4   scl7.6.lag4   scl8.6.lag4   scl8.7.lag4  #>  2.493700e-02  5.808592e-03 -1.288403e-02  2.246542e-02 -1.551220e-01  #>   scl1.2.lag5   scl1.3.lag5   scl1.4.lag5   scl1.5.lag5   scl1.6.lag5  #> -4.918705e-02  9.181147e-02 -1.645229e-04 -3.704220e-02 -7.805927e-02  #>   scl1.7.lag5   scl1.8.lag5   scl2.3.lag5   scl2.4.lag5   scl2.5.lag5  #>  1.163643e-01  2.498178e-02 -1.763281e-02  4.081747e-02 -4.399147e-03  #>   scl2.6.lag5   scl2.7.lag5   scl2.8.lag5   scl3.4.lag5   scl3.5.lag5  #>  5.879293e-02 -3.103823e-03  2.093428e-02  7.314053e-02 -1.531432e-01  #>   scl3.6.lag5   scl3.7.lag5   scl3.8.lag5   scl4.5.lag5   scl4.6.lag5  #> -7.230911e-02  9.272714e-02 -6.402741e-02  1.625264e-02  2.102454e-02  #>   scl4.7.lag5   scl4.8.lag5   scl5.6.lag5   scl5.7.lag5   scl5.8.lag5  #> -1.132282e-01 -9.877661e-02 -2.540298e-02 -2.729005e-02 -2.303502e-02  #>   scl6.7.lag5   scl6.8.lag5   scl7.8.lag5   scl2.1.lag5   scl3.1.lag5  #> -2.667938e-02  4.561081e-02 -1.956544e-01 -1.331554e-02 -5.113536e-02  #>   scl4.1.lag5   scl5.1.lag5   scl6.1.lag5   scl7.1.lag5   scl8.1.lag5  #> -3.080750e-02 -5.806834e-02  2.991227e-02 -3.239143e-02 -4.126889e-02  #>   scl3.2.lag5   scl4.2.lag5   scl5.2.lag5   scl6.2.lag5   scl7.2.lag5  #> -6.308123e-02 -9.039233e-03 -7.812553e-03  1.487613e-01 -1.115144e-01  #>   scl8.2.lag5   scl4.3.lag5   scl5.3.lag5   scl6.3.lag5   scl7.3.lag5  #>  1.425205e-01  6.783791e-02  4.977117e-02 -8.917744e-03 -3.679629e-02  #>   scl8.3.lag5   scl5.4.lag5   scl6.4.lag5   scl7.4.lag5   scl8.4.lag5  #> -1.766771e-03  8.767048e-02  4.206977e-02  1.384143e-02  1.738082e-03  #>   scl6.5.lag5   scl7.5.lag5   scl8.5.lag5   scl7.6.lag5   scl8.6.lag5  #>  2.177773e-02 -6.917411e-02  1.602737e-02 -4.822309e-02 -1.190594e-02  #>   scl8.7.lag5   scl1.2.lag6   scl1.3.lag6   scl1.4.lag6   scl1.5.lag6  #> -6.194225e-02  2.470740e-02 -6.069955e-02  9.024074e-03  1.028006e-01  #>   scl1.6.lag6   scl1.7.lag6   scl1.8.lag6   scl2.3.lag6   scl2.4.lag6  #>  3.273739e-02 -9.077855e-02  1.574003e-02 -7.274030e-02 -2.341530e-02  #>   scl2.5.lag6   scl2.6.lag6   scl2.7.lag6   scl2.8.lag6   scl3.4.lag6  #>  1.578845e-02 -7.166288e-02  6.383553e-02 -1.420652e-02  8.507359e-02  #>   scl3.5.lag6   scl3.6.lag6   scl3.7.lag6   scl3.8.lag6   scl4.5.lag6  #> -3.052375e-02  1.231110e-01 -1.496741e-02  2.099733e-02 -1.121743e-01  #>   scl4.6.lag6   scl4.7.lag6   scl4.8.lag6   scl5.6.lag6   scl5.7.lag6  #> -4.276103e-03 -1.949380e-02 -7.622341e-02 -4.937604e-03  5.710194e-03  #>   scl5.8.lag6   scl6.7.lag6   scl6.8.lag6   scl7.8.lag6   scl2.1.lag6  #>  8.226911e-02  1.124395e-01  1.063482e-01 -1.907698e-02  8.616094e-02  #>   scl3.1.lag6   scl4.1.lag6   scl5.1.lag6   scl6.1.lag6   scl7.1.lag6  #>  9.865814e-02 -2.312361e-02 -3.455099e-02 -3.096164e-02  4.662142e-02  #>   scl8.1.lag6   scl3.2.lag6   scl4.2.lag6   scl5.2.lag6   scl6.2.lag6  #>  3.257820e-02  1.000918e-01  1.659531e-01 -4.281339e-03 -8.774312e-02  #>   scl7.2.lag6   scl8.2.lag6   scl4.3.lag6   scl5.3.lag6   scl6.3.lag6  #>  4.154192e-02 -6.935180e-03  4.088713e-02  3.174958e-02 -2.481217e-02  #>   scl7.3.lag6   scl8.3.lag6   scl5.4.lag6   scl6.4.lag6   scl7.4.lag6  #>  7.497311e-02  2.743034e-02  2.257679e-03  5.528845e-03  1.899622e-02  #>   scl8.4.lag6   scl6.5.lag6   scl7.5.lag6   scl8.5.lag6   scl7.6.lag6  #> -2.146237e-02 -1.255438e-01  4.577646e-02  7.786086e-02  6.027946e-02  #>   scl8.6.lag6   scl8.7.lag6   scl1.2.lag7   scl1.3.lag7   scl1.4.lag7  #> -4.806514e-02 -2.847502e-02  3.193948e-02 -3.720124e-03 -8.489616e-02  #>   scl1.5.lag7   scl1.6.lag7   scl1.7.lag7   scl1.8.lag7   scl2.3.lag7  #>  1.868112e-02  9.167665e-02 -6.882979e-02  6.076987e-02  4.250670e-02  #>   scl2.4.lag7   scl2.5.lag7   scl2.6.lag7   scl2.7.lag7   scl2.8.lag7  #>  5.911103e-02  5.108975e-02 -9.541006e-02 -4.186642e-02  2.501601e-02  #>   scl3.4.lag7   scl3.5.lag7   scl3.6.lag7   scl3.7.lag7   scl3.8.lag7  #> -2.614642e-02  1.519533e-02  1.604408e-02 -7.161328e-02  1.021471e-01  #>   scl4.5.lag7   scl4.6.lag7   scl4.7.lag7   scl4.8.lag7   scl5.6.lag7  #> -1.187321e-01  7.877069e-02  6.309676e-02 -3.031132e-02 -4.266212e-02  #>   scl5.7.lag7   scl5.8.lag7   scl6.7.lag7   scl6.8.lag7   scl7.8.lag7  #> -4.365925e-02  2.874007e-02  1.618527e-01  5.262294e-06  2.018572e-02  #>   scl2.1.lag7   scl3.1.lag7   scl4.1.lag7   scl5.1.lag7   scl6.1.lag7  #> -1.235325e-02  3.068055e-02  1.191081e-01  1.373631e-02 -3.742718e-02  #>   scl7.1.lag7   scl8.1.lag7   scl3.2.lag7   scl4.2.lag7   scl5.2.lag7  #>  5.564077e-02  1.399507e-02 -4.229821e-02  2.776238e-02 -6.197035e-02  #>   scl6.2.lag7   scl7.2.lag7   scl8.2.lag7   scl4.3.lag7   scl5.3.lag7  #> -5.754315e-02  5.627585e-02  7.608026e-02  1.124065e-01  3.936790e-03  #>   scl6.3.lag7   scl7.3.lag7   scl8.3.lag7   scl5.4.lag7   scl6.4.lag7  #> -4.405565e-02  2.825133e-02 -6.906910e-02  9.554245e-03 -3.502412e-02  #>   scl7.4.lag7   scl8.4.lag7   scl6.5.lag7   scl7.5.lag7   scl8.5.lag7  #> -1.007280e-01  3.196162e-02 -2.285670e-01  5.462874e-02 -3.553518e-02  #>   scl7.6.lag7   scl8.6.lag7   scl8.7.lag7  #>  3.798382e-02  1.101128e-01  9.460069e-02"},{"path":"https://nanx.me/protr/reference/OptAA3d.html","id":null,"dir":"Reference","previous_headings":"","what":"OptAA3d.sdf - 20 Amino Acids Optimized with MOE 2011.10 (Semiempirical AM1) ‚Äî OptAA3d","title":"OptAA3d.sdf - 20 Amino Acids Optimized with MOE 2011.10 (Semiempirical AM1) ‚Äî OptAA3d","text":"OptAA3d.sdf - 20 Amino Acids Optimized MOE 2011.10 (Semiempirical AM1)","code":""},{"path":"https://nanx.me/protr/reference/OptAA3d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OptAA3d.sdf - 20 Amino Acids Optimized with MOE 2011.10 (Semiempirical AM1) ‚Äî OptAA3d","text":"","code":"# this operation requires the rcdk package # require(rcdk) # optaa3d = load.molecules(system.file(\"sysdata/OptAA3d.sdf\", package = \"protr\")) # view.molecule.2d(optaa3d[[1]])  # view the first AA"},{"path":"https://nanx.me/protr/reference/crossSetSim.html","id":null,"dir":"Reference","previous_headings":"","what":"Parallel Protein Sequence Similarity Calculation Between Two Sets Based on Sequence Alignment (In-Memory Version) ‚Äî crossSetSim","title":"Parallel Protein Sequence Similarity Calculation Between Two Sets Based on Sequence Alignment (In-Memory Version) ‚Äî crossSetSim","text":"Parallel calculation protein sequence similarity based sequence alignment two sets protein sequences.","code":""},{"path":"https://nanx.me/protr/reference/crossSetSim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parallel Protein Sequence Similarity Calculation Between Two Sets Based on Sequence Alignment (In-Memory Version) ‚Äî crossSetSim","text":"","code":"crossSetSim(   protlist1,   protlist2,   type = \"local\",   cores = 2,   batches = 1,   verbose = FALSE,   submat = \"BLOSUM62\",   gap.opening = 10,   gap.extension = 4 )"},{"path":"https://nanx.me/protr/reference/crossSetSim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parallel Protein Sequence Similarity Calculation Between Two Sets Based on Sequence Alignment (In-Memory Version) ‚Äî crossSetSim","text":"protlist1 length n list containing n protein sequences, component list character string, storing one protein sequence. Unknown sequences represented \"\". protlist2 length n list containing m protein sequences, component list character string, storing one protein sequence. Unknown sequences represented \"\". type Type alignment, default \"local\",   can \"global\" \"local\",   \"global\" represents Needleman-Wunsch global alignment; \"local\" represents Smith-Waterman local alignment. cores Integer. number CPU cores use parallel execution, default 2. Users can use availableCores() function parallelly package see many cores use. batches Integer. many batches split similarity computations . useful large number protein sequences, enough number CPU cores, enough RAM compute fit similarities single batch. Defaults 1. verbose Print computation progress? Useful batches > 1. submat Substitution matrix, default \"BLOSUM62\", can one \"BLOSUM45\", \"BLOSUM50\", \"BLOSUM62\", \"BLOSUM80\", \"BLOSUM100\", \"PAM30\", \"PAM40\", \"PAM70\", \"PAM120\", \"PAM250\". gap.opening cost required open gap length alignment. Defaults 10. gap.extension cost extend length existing gap 1. Defaults 4.","code":""},{"path":"https://nanx.me/protr/reference/crossSetSim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parallel Protein Sequence Similarity Calculation Between Two Sets Based on Sequence Alignment (In-Memory Version) ‚Äî crossSetSim","text":"n x m similarity matrix.","code":""},{"path":"https://nanx.me/protr/reference/crossSetSim.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parallel Protein Sequence Similarity Calculation Between Two Sets Based on Sequence Alignment (In-Memory Version) ‚Äî crossSetSim","text":"Sebastian Mueller <https://alva-genomics.com>","code":""},{"path":"https://nanx.me/protr/reference/crossSetSim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parallel Protein Sequence Similarity Calculation Between Two Sets Based on Sequence Alignment (In-Memory Version) ‚Äî crossSetSim","text":"","code":"if (FALSE) {  # Be careful when testing this since it involves parallelization # and might produce unpredictable results in some environments  library(\"Biostrings\") library(\"foreach\") library(\"doParallel\")  s1 <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]] s2 <- readFASTA(system.file(\"protseq/P08218.fasta\", package = \"protr\"))[[1]] s3 <- readFASTA(system.file(\"protseq/P10323.fasta\", package = \"protr\"))[[1]] s4 <- readFASTA(system.file(\"protseq/P20160.fasta\", package = \"protr\"))[[1]] s5 <- readFASTA(system.file(\"protseq/Q9NZP8.fasta\", package = \"protr\"))[[1]]  plist1 <- list(s1 = s1, s2 = s2, s4 = s4) plist2 <- list(s3 = s3, s4_again = s4, s5 = s5, s1_again = s1) psimmat <- crossSetSim(plist1, plist2) colnames(psimmat) <- names(plist1) rownames(psimmat) <- names(plist2) print(psimmat) #                 s1         s2         s4 # s3       0.10236985 0.18858241 0.05819984 # s4_again 0.04921696 0.12124217 1.00000000 # s5       0.03943488 0.06391103 0.05714638 # s1_again 1.00000000 0.11825938 0.04921696 }"},{"path":"https://nanx.me/protr/reference/crossSetSimDisk.html","id":null,"dir":"Reference","previous_headings":"","what":"Parallel Protein Sequence Similarity Calculation Between Two Sets Based on Sequence Alignment (Disk-Based Version) ‚Äî crossSetSimDisk","title":"Parallel Protein Sequence Similarity Calculation Between Two Sets Based on Sequence Alignment (Disk-Based Version) ‚Äî crossSetSimDisk","text":"Parallel calculation protein sequence similarity based sequence alignment two sets protein sequences. version offloads partial results batch hard drive merges results together end, reduces memory usage.","code":""},{"path":"https://nanx.me/protr/reference/crossSetSimDisk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parallel Protein Sequence Similarity Calculation Between Two Sets Based on Sequence Alignment (Disk-Based Version) ‚Äî crossSetSimDisk","text":"","code":"crossSetSimDisk(   protlist1,   protlist2,   cores = 2,   batches = 1,   path = tempdir(),   verbose = FALSE,   type = \"local\",   submat = \"BLOSUM62\",   gap.opening = 10,   gap.extension = 4 )"},{"path":"https://nanx.me/protr/reference/crossSetSimDisk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parallel Protein Sequence Similarity Calculation Between Two Sets Based on Sequence Alignment (Disk-Based Version) ‚Äî crossSetSimDisk","text":"protlist1 length n list containing n protein sequences, component list character string, storing one protein sequence. Unknown sequences represented \"\". protlist2 length n list containing m protein sequences, component list character string, storing one protein sequence. Unknown sequences represented \"\". cores Integer. number CPU cores use parallel execution, default 2. Users can use availableCores() function parallelly package see many cores use. batches Integer. many batches split pairwise similarity computations . useful large number protein sequences, enough number CPU cores, enough RAM compute fit pairwise similarities single batch. Defaults 1. path Directory caching results batch. Defaults temporary directory. verbose Print computation progress? Useful batches > 1. type Type alignment, default \"local\", can \"global\" \"local\", \"global\" represents Needleman-Wunsch global alignment; \"local\" represents Smith-Waterman local alignment. submat Substitution matrix, default \"BLOSUM62\", can one \"BLOSUM45\", \"BLOSUM50\", \"BLOSUM62\", \"BLOSUM80\", \"BLOSUM100\", \"PAM30\", \"PAM40\", \"PAM70\", \"PAM120\", \"PAM250\". gap.opening cost required open gap length alignment. Defaults 10. gap.extension cost extend length existing gap 1. Defaults 4.","code":""},{"path":"https://nanx.me/protr/reference/crossSetSimDisk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parallel Protein Sequence Similarity Calculation Between Two Sets Based on Sequence Alignment (Disk-Based Version) ‚Äî crossSetSimDisk","text":"n x m similarity matrix.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/crossSetSimDisk.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parallel Protein Sequence Similarity Calculation Between Two Sets Based on Sequence Alignment (Disk-Based Version) ‚Äî crossSetSimDisk","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/crossSetSimDisk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parallel Protein Sequence Similarity Calculation Between Two Sets Based on Sequence Alignment (Disk-Based Version) ‚Äî crossSetSimDisk","text":"","code":"if (FALSE) {  # Be careful when testing this since it involves parallelization # and might produce unpredictable results in some environments  library(\"Biostrings\") library(\"foreach\") library(\"doParallel\")  s1 <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]] s2 <- readFASTA(system.file(\"protseq/P08218.fasta\", package = \"protr\"))[[1]] s3 <- readFASTA(system.file(\"protseq/P10323.fasta\", package = \"protr\"))[[1]] s4 <- readFASTA(system.file(\"protseq/P20160.fasta\", package = \"protr\"))[[1]] s5 <- readFASTA(system.file(\"protseq/Q9NZP8.fasta\", package = \"protr\"))[[1]]  set.seed(1010) plist1 <- as.list(c(s1, s2, s3, s4, s5)[sample(1:5, 100, replace = TRUE)]) plist2 <- as.list(c(s1, s2, s3, s4, s5)[sample(1:5, 100, replace = TRUE)]) psimmat <- crossSetSimDisk(   plist1, plist2,   cores = 2, batches = 10, verbose = TRUE,   type = \"local\", submat = \"BLOSUM62\" ) }"},{"path":"https://nanx.me/protr/reference/extractAAC.html","id":null,"dir":"Reference","previous_headings":"","what":"Amino Acid Composition Descriptor ‚Äî extractAAC","title":"Amino Acid Composition Descriptor ‚Äî extractAAC","text":"function calculates Amino Acid Composition descriptor (dim: 20).","code":""},{"path":"https://nanx.me/protr/reference/extractAAC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Amino Acid Composition Descriptor ‚Äî extractAAC","text":"","code":"extractAAC(x)"},{"path":"https://nanx.me/protr/reference/extractAAC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Amino Acid Composition Descriptor ‚Äî extractAAC","text":"x character vector, input protein sequence.","code":""},{"path":"https://nanx.me/protr/reference/extractAAC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Amino Acid Composition Descriptor ‚Äî extractAAC","text":"length 20 named vector","code":""},{"path":"https://nanx.me/protr/reference/extractAAC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Amino Acid Composition Descriptor ‚Äî extractAAC","text":"M. Bhasin, G. P. S. Raghava. Classification Nuclear Receptors Based Amino Acid Composition Dipeptide Composition. Journal Biological Chemistry, 2004, 279, 23262.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/extractAAC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Amino Acid Composition Descriptor ‚Äî extractAAC","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/extractAAC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Amino Acid Composition Descriptor ‚Äî extractAAC","text":"","code":"x <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]] extractAAC(x) #>          A          R          N          D          C          E          Q  #> 0.06405694 0.07117438 0.03914591 0.05160142 0.06761566 0.04804270 0.04804270  #>          G          H          I          L          K          M          F  #> 0.08185053 0.03024911 0.03558719 0.07651246 0.03914591 0.01245552 0.03202847  #>          P          S          T          W          Y          V  #> 0.05338078 0.08896797 0.04448399 0.02313167 0.04270463 0.04982206"},{"path":"https://nanx.me/protr/reference/extractAPAAC.html","id":null,"dir":"Reference","previous_headings":"","what":"Amphiphilic Pseudo Amino Acid Composition (APseAAC) Descriptor ‚Äî extractAPAAC","title":"Amphiphilic Pseudo Amino Acid Composition (APseAAC) Descriptor ‚Äî extractAPAAC","text":"function calculates Amphiphilic Pseudo Amino Acid Composition (APseAAC, APAAC) descriptor (dim: 20 + (n * lambda), n number properties selected, default 80).","code":""},{"path":"https://nanx.me/protr/reference/extractAPAAC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Amphiphilic Pseudo Amino Acid Composition (APseAAC) Descriptor ‚Äî extractAPAAC","text":"","code":"extractAPAAC(   x,   props = c(\"Hydrophobicity\", \"Hydrophilicity\"),   lambda = 30,   w = 0.05,   customprops = NULL )"},{"path":"https://nanx.me/protr/reference/extractAPAAC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Amphiphilic Pseudo Amino Acid Composition (APseAAC) Descriptor ‚Äî extractAPAAC","text":"x character vector, input protein sequence. props character vector, specifying properties used. 2 properties used default, listed : 'Hydrophobicity' Hydrophobicity value 20 amino acids 'Hydrophilicity' Hydrophilicity value 20 amino acids lambda lambda parameter APAAC descriptors, default 30. w weighting factor, default 0.05. customprops n x 21 named data frame contains n customized property. row contains one property. column order different amino acid types 'AccNo', '', 'R', 'N', 'D', 'C', 'E', 'Q', 'G', 'H', '', 'L', 'K', 'M', 'F', 'P', 'S', 'T', 'W', 'Y', 'V', columns also exactly named like . AccNo column contains properties' names. users explicitly specify properties names argument props. See examples demonstration. default value customprops NULL.","code":""},{"path":"https://nanx.me/protr/reference/extractAPAAC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Amphiphilic Pseudo Amino Acid Composition (APseAAC) Descriptor ‚Äî extractAPAAC","text":"length 20 + n * lambda named vector, n number properties selected.","code":""},{"path":"https://nanx.me/protr/reference/extractAPAAC.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Amphiphilic Pseudo Amino Acid Composition (APseAAC) Descriptor ‚Äî extractAPAAC","text":"Note default 20 * 2 prop values already independently given function. Users can also specify (544) properties Accession Number AAindex data, without default three properties, means users explicitly specify properties use. descriptor type, users need intelligently evaluate underlying details descriptors provided, instead using function data blindly. wise use negative positive control comparisons relevant help guide interpretation results.","code":""},{"path":"https://nanx.me/protr/reference/extractAPAAC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Amphiphilic Pseudo Amino Acid Composition (APseAAC) Descriptor ‚Äî extractAPAAC","text":"Kuo-Chen Chou. Prediction Protein Cellular Attributes Using Pseudo-Amino Acid Composition. PROTEINS: Structure, Function, Genetics, 2001, 43: 246-255. Kuo-Chen Chou. Using Amphiphilic Pseudo Amino Acid Composition Predict Enzyme Subfamily Classes. Bioinformatics, 2005, 21, 10-19. JACS, 1962, 84: 4240-4246. (C. Tanford). (hydrophobicity data) PNAS, 1981, 78:3824-3828 (T.P.Hopp & K.R.Woods). (hydrophilicity data)","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/extractAPAAC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Amphiphilic Pseudo Amino Acid Composition (APseAAC) Descriptor ‚Äî extractAPAAC","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/extractAPAAC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Amphiphilic Pseudo Amino Acid Composition (APseAAC) Descriptor ‚Äî extractAPAAC","text":"","code":"x <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]] extractAPAAC(x) #>                 Pc1.A                 Pc1.R                 Pc1.N  #>          3.537412e+01          3.930458e+01          2.161752e+01  #>                 Pc1.D                 Pc1.C                 Pc1.E  #>          2.849582e+01          3.733935e+01          2.653059e+01  #>                 Pc1.Q                 Pc1.G                 Pc1.H  #>          2.653059e+01          4.520027e+01          1.670445e+01  #>                 Pc1.I                 Pc1.L                 Pc1.K  #>          1.965229e+01          4.225242e+01          2.161752e+01  #>                 Pc1.M                 Pc1.F                 Pc1.P  #>          6.878302e+00          1.768706e+01          2.947844e+01  #>                 Pc1.S                 Pc1.T                 Pc1.W  #>          4.913073e+01          2.456536e+01          1.277399e+01  #>                 Pc1.Y                 Pc1.V  Pc2.Hydrophobicity.1  #>          2.358275e+01          2.751321e+01          2.196320e-04  #>  Pc2.Hydrophilicity.1  Pc2.Hydrophobicity.2  Pc2.Hydrophilicity.2  #>          1.025766e-03         -3.088876e-04         -1.834385e-04  #>  Pc2.Hydrophobicity.3  Pc2.Hydrophilicity.3  Pc2.Hydrophobicity.4  #>          1.174146e-03          7.400156e-04         -1.105715e-03  #>  Pc2.Hydrophilicity.4  Pc2.Hydrophobicity.5  Pc2.Hydrophilicity.5  #>         -4.493680e-04          1.766358e-03          1.471212e-03  #>  Pc2.Hydrophobicity.6  Pc2.Hydrophilicity.6  Pc2.Hydrophobicity.7  #>         -1.441572e-03         -4.913600e-03         -1.678053e-05  #>  Pc2.Hydrophilicity.7  Pc2.Hydrophobicity.8  Pc2.Hydrophilicity.8  #>          7.312356e-04         -1.885399e-03         -1.928708e-03  #>  Pc2.Hydrophobicity.9  Pc2.Hydrophilicity.9 Pc2.Hydrophobicity.10  #>         -2.931177e-03         -1.555660e-03          2.916597e-03  #> Pc2.Hydrophilicity.10 Pc2.Hydrophobicity.11 Pc2.Hydrophilicity.11  #>          3.602591e-03          1.055082e-04          8.697920e-04  #> Pc2.Hydrophobicity.12 Pc2.Hydrophilicity.12 Pc2.Hydrophobicity.13  #>         -9.276413e-04         -2.001384e-03          1.705044e-03  #> Pc2.Hydrophilicity.13 Pc2.Hydrophobicity.14 Pc2.Hydrophilicity.14  #>          4.364007e-03          7.883453e-04         -9.441693e-04  #> Pc2.Hydrophobicity.15 Pc2.Hydrophilicity.15 Pc2.Hydrophobicity.16  #>         -3.133437e-04         -3.599332e-03          3.689079e-05  #> Pc2.Hydrophilicity.16 Pc2.Hydrophobicity.17 Pc2.Hydrophilicity.17  #>          2.483867e-03          4.832798e-04          2.465788e-03  #> Pc2.Hydrophobicity.18 Pc2.Hydrophilicity.18 Pc2.Hydrophobicity.19  #>         -3.142728e-04          2.021961e-03          6.421283e-05  #> Pc2.Hydrophilicity.19 Pc2.Hydrophobicity.20 Pc2.Hydrophilicity.20  #>         -8.896690e-04         -2.986886e-04          9.304039e-04  #> Pc2.Hydrophobicity.21 Pc2.Hydrophilicity.21 Pc2.Hydrophobicity.22  #>         -6.777458e-04          1.646818e-03          3.193506e-03  #> Pc2.Hydrophilicity.22 Pc2.Hydrophobicity.23 Pc2.Hydrophilicity.23  #>          3.270656e-03          2.533569e-03          2.478252e-03  #> Pc2.Hydrophobicity.24 Pc2.Hydrophilicity.24 Pc2.Hydrophobicity.25  #>         -2.489106e-03         -1.031008e-03         -3.992322e-03  #> Pc2.Hydrophilicity.25 Pc2.Hydrophobicity.26 Pc2.Hydrophilicity.26  #>         -2.596060e-03          8.690771e-04         -1.221378e-03  #> Pc2.Hydrophobicity.27 Pc2.Hydrophilicity.27 Pc2.Hydrophobicity.28  #>          5.208649e-03          4.617400e-03         -1.088584e-03  #> Pc2.Hydrophilicity.28 Pc2.Hydrophobicity.29 Pc2.Hydrophilicity.29  #>         -2.512263e-03          1.387641e-03          2.060890e-03  #> Pc2.Hydrophobicity.30 Pc2.Hydrophilicity.30  #>          3.177340e-04          1.451909e-03   myprops <- data.frame(   AccNo = c(\"MyProp1\", \"MyProp2\", \"MyProp3\"),   A = c(0.62, -0.5, 15), R = c(-2.53, 3, 101),   N = c(-0.78, 0.2, 58), D = c(-0.9, 3, 59),   C = c(0.29, -1, 47), E = c(-0.74, 3, 73),   Q = c(-0.85, 0.2, 72), G = c(0.48, 0, 1),   H = c(-0.4, -0.5, 82), I = c(1.38, -1.8, 57),   L = c(1.06, -1.8, 57), K = c(-1.5, 3, 73),   M = c(0.64, -1.3, 75), F = c(1.19, -2.5, 91),   P = c(0.12, 0, 42), S = c(-0.18, 0.3, 31),   T = c(-0.05, -0.4, 45), W = c(0.81, -3.4, 130),   Y = c(0.26, -2.3, 107), V = c(1.08, -1.5, 43) )  # use 2 default properties, 4 properties from the # AAindex database, and 3 cutomized properties extractAPAAC(   x,   customprops = myprops,   props = c(     \"Hydrophobicity\", \"Hydrophilicity\",     \"CIDH920105\", \"BHAR880101\",     \"CHAM820101\", \"CHAM820102\",     \"MyProp1\", \"MyProp2\", \"MyProp3\"   ) ) #>                 Pc1.A                 Pc1.R                 Pc1.N  #>          2.726537e+01          3.029486e+01          1.666217e+01  #>                 Pc1.D                 Pc1.C                 Pc1.E  #>          2.196377e+01          2.878011e+01          2.044903e+01  #>                 Pc1.Q                 Pc1.G                 Pc1.H  #>          2.044903e+01          3.483909e+01          1.287531e+01  #>                 Pc1.I                 Pc1.L                 Pc1.K  #>          1.514743e+01          3.256697e+01          1.666217e+01  #>                 Pc1.M                 Pc1.F                 Pc1.P  #>          5.301600e+00          1.363269e+01          2.272114e+01  #>                 Pc1.S                 Pc1.T                 Pc1.W  #>          3.786857e+01          1.893429e+01          9.845828e+00  #>                 Pc1.Y                 Pc1.V  Pc2.Hydrophobicity.1  #>          1.817691e+01          2.120640e+01          1.692861e-04  #>  Pc2.Hydrophilicity.1      Pc2.CIDH920105.1      Pc2.BHAR880101.1  #>          7.906313e-04          3.089061e-03          1.997195e-03  #>      Pc2.CHAM820101.1      Pc2.CHAM820102.1         Pc2.MyProp1.1  #>          1.525781e-03          2.118788e-03          1.692861e-04  #>         Pc2.MyProp2.1         Pc2.MyProp3.1  Pc2.Hydrophobicity.2  #>          7.906313e-04          1.439530e-03         -2.380818e-04  #>  Pc2.Hydrophilicity.2      Pc2.CIDH920105.2      Pc2.BHAR880101.2  #>         -1.413892e-04         -6.083517e-04          1.166533e-03  #>      Pc2.CHAM820101.2      Pc2.CHAM820102.2         Pc2.MyProp1.2  #>          1.928231e-03         -1.406107e-03         -2.380818e-04  #>         Pc2.MyProp2.2         Pc2.MyProp3.2  Pc2.Hydrophobicity.3  #>         -1.413892e-04          3.095179e-03          9.049982e-04  #>  Pc2.Hydrophilicity.3      Pc2.CIDH920105.3      Pc2.BHAR880101.3  #>          5.703830e-04         -6.052530e-04          1.407593e-03  #>      Pc2.CHAM820101.3      Pc2.CHAM820102.3         Pc2.MyProp1.3  #>          1.208629e-05         -3.818626e-03          9.049982e-04  #>         Pc2.MyProp2.3         Pc2.MyProp3.3  Pc2.Hydrophobicity.4  #>          5.703830e-04          7.898860e-05         -8.522536e-04  #>  Pc2.Hydrophilicity.4      Pc2.CIDH920105.4      Pc2.BHAR880101.4  #>         -3.463601e-04         -9.747006e-04         -2.234010e-03  #>      Pc2.CHAM820101.4      Pc2.CHAM820102.4         Pc2.MyProp1.4  #>          1.447898e-03         -3.222112e-03         -8.522536e-04  #>         Pc2.MyProp2.4         Pc2.MyProp3.4  Pc2.Hydrophobicity.5  #>         -3.463601e-04          1.759628e-03          1.361459e-03  #>  Pc2.Hydrophilicity.5      Pc2.CIDH920105.5      Pc2.BHAR880101.5  #>          1.133968e-03          2.993837e-03          2.675103e-03  #>      Pc2.CHAM820101.5      Pc2.CHAM820102.5         Pc2.MyProp1.5  #>          4.224830e-03          8.000519e-04          1.361459e-03  #>         Pc2.MyProp2.5         Pc2.MyProp3.5  Pc2.Hydrophobicity.6  #>          1.133968e-03          2.824775e-03         -1.111123e-03  #>  Pc2.Hydrophilicity.6      Pc2.CIDH920105.6      Pc2.BHAR880101.6  #>         -3.787263e-03         -1.619698e-03         -3.377592e-03  #>      Pc2.CHAM820101.6      Pc2.CHAM820102.6         Pc2.MyProp1.6  #>          3.047700e-03          5.464276e-04         -1.111123e-03  #>         Pc2.MyProp2.6         Pc2.MyProp3.6  Pc2.Hydrophobicity.7  #>         -3.787263e-03          4.399177e-03         -1.293396e-05  #>  Pc2.Hydrophilicity.7      Pc2.CIDH920105.7      Pc2.BHAR880101.7  #>          5.636157e-04         -1.375419e-03         -9.471565e-04  #>      Pc2.CHAM820101.7      Pc2.CHAM820102.7         Pc2.MyProp1.7  #>          2.510108e-03         -8.127858e-05         -1.293396e-05  #>         Pc2.MyProp2.7         Pc2.MyProp3.7  Pc2.Hydrophobicity.8  #>          5.636157e-04          2.327124e-03         -1.453212e-03  #>  Pc2.Hydrophilicity.8      Pc2.CIDH920105.8      Pc2.BHAR880101.8  #>         -1.486593e-03          9.121515e-04          2.923706e-03  #>      Pc2.CHAM820101.8      Pc2.CHAM820102.8         Pc2.MyProp1.8  #>          3.951525e-03          1.697524e-03         -1.453212e-03  #>         Pc2.MyProp2.8         Pc2.MyProp3.8  Pc2.Hydrophobicity.9  #>         -1.486593e-03          4.742073e-03         -2.259268e-03  #>  Pc2.Hydrophilicity.9      Pc2.CIDH920105.9      Pc2.BHAR880101.9  #>         -1.199058e-03         -1.997173e-04          1.563555e-05  #>      Pc2.CHAM820101.9      Pc2.CHAM820102.9         Pc2.MyProp1.9  #>          3.657590e-03         -2.088309e-03         -2.259268e-03  #>         Pc2.MyProp2.9         Pc2.MyProp3.9 Pc2.Hydrophobicity.10  #>         -1.199058e-03          3.186717e-03          2.248030e-03  #> Pc2.Hydrophilicity.10     Pc2.CIDH920105.10     Pc2.BHAR880101.10  #>          2.776775e-03          1.979571e-03          4.562424e-03  #>     Pc2.CHAM820101.10     Pc2.CHAM820102.10        Pc2.MyProp1.10  #>          3.953245e-04          1.488532e-03          2.248030e-03  #>        Pc2.MyProp2.10        Pc2.MyProp3.10 Pc2.Hydrophobicity.11  #>          2.776775e-03          7.015885e-05          8.132275e-05  #> Pc2.Hydrophilicity.11     Pc2.CIDH920105.11     Pc2.BHAR880101.11  #>          6.704110e-04          3.111663e-03          1.930726e-03  #>     Pc2.CHAM820101.11     Pc2.CHAM820102.11        Pc2.MyProp1.11  #>          2.920811e-03         -4.381601e-05          8.132275e-05  #>        Pc2.MyProp2.11        Pc2.MyProp3.11 Pc2.Hydrophobicity.12  #>          6.704110e-04          1.943423e-03         -7.149996e-04  #> Pc2.Hydrophilicity.12     Pc2.CIDH920105.12     Pc2.BHAR880101.12  #>         -1.542610e-03          2.052446e-04          7.637776e-04  #>     Pc2.CHAM820101.12     Pc2.CHAM820102.12        Pc2.MyProp1.12  #>          2.629436e-03          1.082862e-03         -7.149996e-04  #>        Pc2.MyProp2.12        Pc2.MyProp3.12 Pc2.Hydrophobicity.13  #>         -1.542610e-03          3.152375e-03          1.314200e-03  #> Pc2.Hydrophilicity.13     Pc2.CIDH920105.13     Pc2.BHAR880101.13  #>          3.363653e-03          3.154151e-03          3.770682e-03  #>     Pc2.CHAM820101.13     Pc2.CHAM820102.13        Pc2.MyProp1.13  #>          4.367833e-03          3.287165e-03          1.314200e-03  #>        Pc2.MyProp2.13        Pc2.MyProp3.13 Pc2.Hydrophobicity.14  #>          3.363653e-03          4.548631e-03          6.076342e-04  #> Pc2.Hydrophilicity.14     Pc2.CIDH920105.14     Pc2.BHAR880101.14  #>         -7.277389e-04          1.821700e-04          1.136616e-03  #>     Pc2.CHAM820101.14     Pc2.CHAM820102.14        Pc2.MyProp1.14  #>          2.725934e-03         -2.422624e-03          6.076342e-04  #>        Pc2.MyProp2.14        Pc2.MyProp3.14 Pc2.Hydrophobicity.15  #>         -7.277389e-04          3.644842e-03         -2.415164e-04  #> Pc2.Hydrophilicity.15     Pc2.CIDH920105.15     Pc2.BHAR880101.15  #>         -2.774263e-03          7.090685e-05          1.886016e-03  #>     Pc2.CHAM820101.15     Pc2.CHAM820102.15        Pc2.MyProp1.15  #>          3.086345e-03         -8.290011e-04         -2.415164e-04  #>        Pc2.MyProp2.15        Pc2.MyProp3.15 Pc2.Hydrophobicity.16  #>         -2.774263e-03          3.455495e-03          2.843438e-05  #> Pc2.Hydrophilicity.16     Pc2.CIDH920105.16     Pc2.BHAR880101.16  #>          1.914495e-03         -5.799552e-05          2.209231e-03  #>     Pc2.CHAM820101.16     Pc2.CHAM820102.16        Pc2.MyProp1.16  #>          9.447110e-04         -1.832162e-04          2.843438e-05  #>        Pc2.MyProp2.16        Pc2.MyProp3.16 Pc2.Hydrophobicity.17  #>          1.914495e-03          1.706065e-03          3.724984e-04  #> Pc2.Hydrophilicity.17     Pc2.CIDH920105.17     Pc2.BHAR880101.17  #>          1.900560e-03         -4.512885e-04          6.174000e-04  #>     Pc2.CHAM820101.17     Pc2.CHAM820102.17        Pc2.MyProp1.17  #>         -1.942794e-04          5.385367e-04          3.724984e-04  #>        Pc2.MyProp2.17        Pc2.MyProp3.17 Pc2.Hydrophobicity.18  #>          1.900560e-03         -2.383272e-04         -2.422325e-04  #> Pc2.Hydrophilicity.18     Pc2.CIDH920105.18     Pc2.BHAR880101.18  #>          1.558471e-03          2.694786e-03         -9.023092e-04  #>     Pc2.CHAM820101.18     Pc2.CHAM820102.18        Pc2.MyProp1.18  #>          3.617169e-03          2.025085e-03         -2.422325e-04  #>        Pc2.MyProp2.18        Pc2.MyProp3.18 Pc2.Hydrophobicity.19  #>          1.558471e-03          3.331545e-03          4.949343e-05  #> Pc2.Hydrophilicity.19     Pc2.CIDH920105.19     Pc2.BHAR880101.19  #>         -6.857316e-04          1.267582e-03         -3.028707e-04  #>     Pc2.CHAM820101.19     Pc2.CHAM820102.19        Pc2.MyProp1.19  #>          1.116845e-03         -9.942419e-04          4.949343e-05  #>        Pc2.MyProp2.19        Pc2.MyProp3.19 Pc2.Hydrophobicity.20  #>         -6.857316e-04          1.336517e-03         -2.302207e-04  #> Pc2.Hydrophilicity.20     Pc2.CIDH920105.20     Pc2.BHAR880101.20  #>          7.171290e-04          1.018011e-03          2.024248e-04  #>     Pc2.CHAM820101.20     Pc2.CHAM820102.20        Pc2.MyProp1.20  #>          3.103507e-03         -4.292626e-04         -2.302207e-04  #>        Pc2.MyProp2.20        Pc2.MyProp3.20 Pc2.Hydrophobicity.21  #>          7.171290e-04          2.234626e-03         -5.223873e-04  #> Pc2.Hydrophilicity.21     Pc2.CIDH920105.21     Pc2.BHAR880101.21  #>          1.269321e-03          2.767261e-03          6.379400e-04  #>     Pc2.CHAM820101.21     Pc2.CHAM820102.21        Pc2.MyProp1.21  #>          2.719312e-03         -5.515094e-04         -5.223873e-04  #>        Pc2.MyProp2.21        Pc2.MyProp3.21 Pc2.Hydrophobicity.22  #>          1.269321e-03          3.148752e-03          2.461464e-03  #> Pc2.Hydrophilicity.22     Pc2.CIDH920105.22     Pc2.BHAR880101.22  #>          2.520929e-03          4.365216e-03          4.823171e-03  #>     Pc2.CHAM820101.22     Pc2.CHAM820102.22        Pc2.MyProp1.22  #>          6.004310e-03         -3.525639e-04          2.461464e-03  #>        Pc2.MyProp2.22        Pc2.MyProp3.22 Pc2.Hydrophobicity.23  #>          2.520929e-03          5.044113e-03          1.952803e-03  #> Pc2.Hydrophilicity.23     Pc2.CIDH920105.23     Pc2.BHAR880101.23  #>          1.910167e-03          1.572223e-03          1.023679e-04  #>     Pc2.CHAM820101.23     Pc2.CHAM820102.23        Pc2.MyProp1.23  #>          2.158838e-03         -1.900535e-03          1.952803e-03  #>        Pc2.MyProp2.23        Pc2.MyProp3.23 Pc2.Hydrophobicity.24  #>          1.910167e-03          2.118122e-03         -1.918533e-03  #> Pc2.Hydrophilicity.24     Pc2.CIDH920105.24     Pc2.BHAR880101.24  #>         -7.946720e-04         -1.023436e-03          4.326760e-04  #>     Pc2.CHAM820101.24     Pc2.CHAM820102.24        Pc2.MyProp1.24  #>          8.041312e-04         -3.096339e-04         -1.918533e-03  #>        Pc2.MyProp2.24        Pc2.MyProp3.24 Pc2.Hydrophobicity.25  #>         -7.946720e-04          7.919708e-04         -3.077168e-03  #> Pc2.Hydrophilicity.25     Pc2.CIDH920105.25     Pc2.BHAR880101.25  #>         -2.000970e-03          1.267741e-03          1.367532e-03  #>     Pc2.CHAM820101.25     Pc2.CHAM820102.25        Pc2.MyProp1.25  #>          3.039638e-03          9.110689e-04         -3.077168e-03  #>        Pc2.MyProp2.25        Pc2.MyProp3.25 Pc2.Hydrophobicity.26  #>         -2.000970e-03          2.346114e-03          6.698600e-04  #> Pc2.Hydrophilicity.26     Pc2.CIDH920105.26     Pc2.BHAR880101.26  #>         -9.414037e-04         -1.228932e-04          6.990684e-04  #>     Pc2.CHAM820101.26     Pc2.CHAM820102.26        Pc2.MyProp1.26  #>          3.889658e-03         -3.211254e-05          6.698600e-04  #>        Pc2.MyProp2.26        Pc2.MyProp3.26 Pc2.Hydrophobicity.27  #>         -9.414037e-04          5.287878e-03          4.014679e-03  #> Pc2.Hydrophilicity.27     Pc2.CIDH920105.27     Pc2.BHAR880101.27  #>          3.558961e-03          2.958180e-03          3.952585e-03  #>     Pc2.CHAM820101.27     Pc2.CHAM820102.27        Pc2.MyProp1.27  #>          3.050843e-03          3.261111e-04          4.014679e-03  #>        Pc2.MyProp2.27        Pc2.MyProp3.27 Pc2.Hydrophobicity.28  #>          3.558961e-03          2.621260e-03         -8.390496e-04  #> Pc2.Hydrophilicity.28     Pc2.CIDH920105.28     Pc2.BHAR880101.28  #>         -1.936381e-03         -1.067034e-03          2.741618e-05  #>     Pc2.CHAM820101.28     Pc2.CHAM820102.28        Pc2.MyProp1.28  #>          2.754108e-03         -4.269171e-04         -8.390496e-04  #>        Pc2.MyProp2.28        Pc2.MyProp3.28 Pc2.Hydrophobicity.29  #>         -1.936381e-03          1.931571e-03          1.069554e-03  #> Pc2.Hydrophilicity.29     Pc2.CIDH920105.29     Pc2.BHAR880101.29  #>          1.588476e-03          1.768304e-03          2.975706e-03  #>     Pc2.CHAM820101.29     Pc2.CHAM820102.29        Pc2.MyProp1.29  #>          7.609157e-04          1.224138e-03          1.069554e-03  #>        Pc2.MyProp2.29        Pc2.MyProp3.29 Pc2.Hydrophobicity.30  #>          1.588476e-03          5.908359e-04          2.449004e-04  #> Pc2.Hydrophilicity.30     Pc2.CIDH920105.30     Pc2.BHAR880101.30  #>          1.119090e-03          7.795027e-04          1.672987e-03  #>     Pc2.CHAM820101.30     Pc2.CHAM820102.30        Pc2.MyProp1.30  #>          3.002246e-03          3.108433e-03          2.449004e-04  #>        Pc2.MyProp2.30        Pc2.MyProp3.30  #>          1.119090e-03          3.398358e-03"},{"path":"https://nanx.me/protr/reference/extractBLOSUM.html","id":null,"dir":"Reference","previous_headings":"","what":"BLOSUM and PAM Matrix-Derived Descriptors ‚Äî extractBLOSUM","title":"BLOSUM and PAM Matrix-Derived Descriptors ‚Äî extractBLOSUM","text":"function calculates BLOSUM matrix-derived descriptors. users' convenience, protr provides BLOSUM45, BLOSUM50, BLOSUM62, BLOSUM80, BLOSUM100, PAM30, PAM40, PAM70, PAM120, PAM250 matrices 20 amino acids select .","code":""},{"path":"https://nanx.me/protr/reference/extractBLOSUM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BLOSUM and PAM Matrix-Derived Descriptors ‚Äî extractBLOSUM","text":"","code":"extractBLOSUM(x, submat = \"AABLOSUM62\", k, lag, scale = TRUE, silent = TRUE)"},{"path":"https://nanx.me/protr/reference/extractBLOSUM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BLOSUM and PAM Matrix-Derived Descriptors ‚Äî extractBLOSUM","text":"x character vector, input protein sequence. submat Substitution matrix 20 amino acids. one AABLOSUM45, AABLOSUM50, AABLOSUM62, AABLOSUM80, AABLOSUM100, AAPAM30, AAPAM40, AAPAM70, AAPAM120, AAPAM250. Default \"AABLOSUM62\". k Integer. number selected scales (.e. first k scales) derived substitution matrix. can selected according printed relative importance values. lag lag parameter. Must less amino acids. scale Logical. auto-scale substitution matrix (submat) eigen decomposition? Default TRUE. silent Logical. Whether print relative importance scales (diagnal value eigen decomposition result matrix B) . Default TRUE.","code":""},{"path":"https://nanx.me/protr/reference/extractBLOSUM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"BLOSUM and PAM Matrix-Derived Descriptors ‚Äî extractBLOSUM","text":"length lag * p^2 named vector, p number scales selected.","code":""},{"path":"https://nanx.me/protr/reference/extractBLOSUM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"BLOSUM and PAM Matrix-Derived Descriptors ‚Äî extractBLOSUM","text":"Georgiev, . G. (2009). Interpretable numerical descriptors amino acid space. Journal Computational Biology, 16(5), 703--723.","code":""},{"path":"https://nanx.me/protr/reference/extractBLOSUM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"BLOSUM and PAM Matrix-Derived Descriptors ‚Äî extractBLOSUM","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/extractBLOSUM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BLOSUM and PAM Matrix-Derived Descriptors ‚Äî extractBLOSUM","text":"","code":"x <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]] blosum <- extractBLOSUM(x, submat = \"AABLOSUM62\", k = 5, lag = 7, scale = TRUE, silent = FALSE) #> Relative importance of all the possible 20 scales:  #>  [1]  1.204960e+01  7.982007e+00  6.254364e+00  4.533706e+00  4.326286e+00 #>  [6]  3.850579e+00  3.752197e+00  3.538207e+00  3.139155e+00  2.546405e+00 #> [11]  2.373286e+00  1.666259e+00  1.553126e+00  1.263685e+00  1.024699e+00 #> [16]  9.630187e-01  9.225759e-01  7.221636e-01  1.020085e-01 -5.354392e-18"},{"path":"https://nanx.me/protr/reference/extractCTDC.html","id":null,"dir":"Reference","previous_headings":"","what":"CTD Descriptors - Composition ‚Äî extractCTDC","title":"CTD Descriptors - Composition ‚Äî extractCTDC","text":"function calculates Composition descriptor CTD descriptors (dim: 21).","code":""},{"path":"https://nanx.me/protr/reference/extractCTDC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CTD Descriptors - Composition ‚Äî extractCTDC","text":"","code":"extractCTDC(x)"},{"path":"https://nanx.me/protr/reference/extractCTDC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CTD Descriptors - Composition ‚Äî extractCTDC","text":"x character vector, input protein sequence.","code":""},{"path":"https://nanx.me/protr/reference/extractCTDC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CTD Descriptors - Composition ‚Äî extractCTDC","text":"length 21 named vector","code":""},{"path":"https://nanx.me/protr/reference/extractCTDC.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"CTD Descriptors - Composition ‚Äî extractCTDC","text":"descriptor type, users need intelligently evaluate underlying details descriptors provided, instead using function data blindly. wise use negative positive control comparisons relevant help guide interpretation results.","code":""},{"path":"https://nanx.me/protr/reference/extractCTDC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"CTD Descriptors - Composition ‚Äî extractCTDC","text":"Inna Dubchak, Ilya Muchink, Stephen R. Holbrook Sung-Hou Kim. Prediction protein folding class using global description amino acid sequence. Proceedings National Academy Sciences. USA, 1995, 92, 8700-8704. Inna Dubchak, Ilya Muchink, Christopher Mayor, Igor Dralyuk Sung-Hou Kim. Recognition Protein Fold Context SCOP classification. Proteins: Structure, Function Genetics, 1999, 35, 401-407.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/extractCTDC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CTD Descriptors - Composition ‚Äî extractCTDC","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/extractCTDC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CTD Descriptors - Composition ‚Äî extractCTDC","text":"","code":"x <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]] extractCTDC(x) #>  hydrophobicity.Group1  hydrophobicity.Group2  hydrophobicity.Group3  #>             0.29715302             0.40569395             0.29715302  #> normwaalsvolume.Group1 normwaalsvolume.Group2 normwaalsvolume.Group3  #>             0.45195730             0.29715302             0.25088968  #>        polarity.Group1        polarity.Group2        polarity.Group3  #>             0.33985765             0.33274021             0.32740214  #>  polarizability.Group1  polarizability.Group2  polarizability.Group3  #>             0.33096085             0.41814947             0.25088968  #>          charge.Group1          charge.Group2          charge.Group3  #>             0.11032028             0.79003559             0.09964413  #> secondarystruct.Group1 secondarystruct.Group2 secondarystruct.Group3  #>             0.38967972             0.29537367             0.31494662  #>   solventaccess.Group1   solventaccess.Group2   solventaccess.Group3  #>             0.43060498             0.29715302             0.27224199"},{"path":"https://nanx.me/protr/reference/extractCTDCClass.html","id":null,"dir":"Reference","previous_headings":"","what":"CTD Descriptors - Composition (with customized amino acid classification support) ‚Äî extractCTDCClass","title":"CTD Descriptors - Composition (with customized amino acid classification support) ‚Äî extractCTDCClass","text":"function calculates Composition descriptor CTD descriptors, customized amino acid classification support.","code":""},{"path":"https://nanx.me/protr/reference/extractCTDCClass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CTD Descriptors - Composition (with customized amino acid classification support) ‚Äî extractCTDCClass","text":"","code":"extractCTDCClass(x, aagroup1, aagroup2, aagroup3)"},{"path":"https://nanx.me/protr/reference/extractCTDCClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CTD Descriptors - Composition (with customized amino acid classification support) ‚Äî extractCTDCClass","text":"x character vector, input protein sequence. aagroup1 named list contains first group customized amino acid classification. See example . aagroup2 named list contains second group customized amino acid classification. See example . aagroup3 named list contains third group customized amino acid classification. See example .","code":""},{"path":"https://nanx.me/protr/reference/extractCTDCClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CTD Descriptors - Composition (with customized amino acid classification support) ‚Äî extractCTDCClass","text":"length k * 3 named vector, k number amino acid properties used.","code":""},{"path":"https://nanx.me/protr/reference/extractCTDCClass.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"CTD Descriptors - Composition (with customized amino acid classification support) ‚Äî extractCTDCClass","text":"descriptor type, users need intelligently evaluate underlying details descriptors provided, instead using function data blindly. wise use negative positive control comparisons relevant help guide interpretation results.","code":""},{"path":"https://nanx.me/protr/reference/extractCTDCClass.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"CTD Descriptors - Composition (with customized amino acid classification support) ‚Äî extractCTDCClass","text":"Inna Dubchak, Ilya Muchink, Stephen R. Holbrook Sung-Hou Kim. Prediction protein folding class using global description amino acid sequence. Proceedings National Academy Sciences. USA, 1995, 92, 8700-8704. Inna Dubchak, Ilya Muchink, Christopher Mayor, Igor Dralyuk Sung-Hou Kim. Recognition Protein Fold Context SCOP classification. Proteins: Structure, Function Genetics, 1999, 35, 401-407.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/extractCTDCClass.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CTD Descriptors - Composition (with customized amino acid classification support) ‚Äî extractCTDCClass","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/extractCTDCClass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CTD Descriptors - Composition (with customized amino acid classification support) ‚Äî extractCTDCClass","text":"","code":"x <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]]  # using five customized amino acid property classification group1 <- list(   \"hydrophobicity\" = c(\"R\", \"K\", \"E\", \"D\", \"Q\", \"N\"),   \"normwaalsvolume\" = c(\"G\", \"A\", \"S\", \"T\", \"P\", \"D\", \"C\"),   \"polarizability\" = c(\"G\", \"A\", \"S\", \"D\", \"T\"),   \"secondarystruct\" = c(\"E\", \"A\", \"L\", \"M\", \"Q\", \"K\", \"R\", \"H\"),   \"solventaccess\" = c(\"A\", \"L\", \"F\", \"C\", \"G\", \"I\", \"V\", \"W\") )  group2 <- list(   \"hydrophobicity\" = c(\"G\", \"A\", \"S\", \"T\", \"P\", \"H\", \"Y\"),   \"normwaalsvolume\" = c(\"N\", \"V\", \"E\", \"Q\", \"I\", \"L\"),   \"polarizability\" = c(\"C\", \"P\", \"N\", \"V\", \"E\", \"Q\", \"I\", \"L\"),   \"secondarystruct\" = c(\"V\", \"I\", \"Y\", \"C\", \"W\", \"F\", \"T\"),   \"solventaccess\" = c(\"R\", \"K\", \"Q\", \"E\", \"N\", \"D\") )  group3 <- list(   \"hydrophobicity\" = c(\"C\", \"L\", \"V\", \"I\", \"M\", \"F\", \"W\"),   \"normwaalsvolume\" = c(\"M\", \"H\", \"K\", \"F\", \"R\", \"Y\", \"W\"),   \"polarizability\" = c(\"K\", \"M\", \"H\", \"F\", \"R\", \"Y\", \"W\"),   \"secondarystruct\" = c(\"G\", \"N\", \"P\", \"S\", \"D\"),   \"solventaccess\" = c(\"M\", \"S\", \"P\", \"T\", \"H\", \"Y\") )  extractCTDCClass(x, aagroup1 = group1, aagroup2 = group2, aagroup3 = group3) #>  prop1.G1  prop1.G2  prop1.G3  prop2.G1  prop2.G2  prop2.G3  prop3.G1  prop3.G2  #> 0.2971530 0.4056940 0.2971530 0.4519573 0.2971530 0.2508897 0.3309609 0.4181495  #>  prop3.G3  prop4.G1  prop4.G2  prop4.G3  prop5.G1  prop5.G2  prop5.G3  #> 0.2508897 0.3896797 0.2953737 0.3149466 0.4306050 0.2971530 0.2722420"},{"path":"https://nanx.me/protr/reference/extractCTDD.html","id":null,"dir":"Reference","previous_headings":"","what":"CTD Descriptors - Distribution ‚Äî extractCTDD","title":"CTD Descriptors - Distribution ‚Äî extractCTDD","text":"function calculates Distribution descriptor CTD descriptors (dim: 105).","code":""},{"path":"https://nanx.me/protr/reference/extractCTDD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CTD Descriptors - Distribution ‚Äî extractCTDD","text":"","code":"extractCTDD(x)"},{"path":"https://nanx.me/protr/reference/extractCTDD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CTD Descriptors - Distribution ‚Äî extractCTDD","text":"x character vector, input protein sequence.","code":""},{"path":"https://nanx.me/protr/reference/extractCTDD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CTD Descriptors - Distribution ‚Äî extractCTDD","text":"length 105 named vector","code":""},{"path":"https://nanx.me/protr/reference/extractCTDD.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"CTD Descriptors - Distribution ‚Äî extractCTDD","text":"descriptor type, users need intelligently evaluate underlying details descriptors provided, instead using function data blindly. wise use negative positive control comparisons relevant help guide interpretation results.","code":""},{"path":"https://nanx.me/protr/reference/extractCTDD.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"CTD Descriptors - Distribution ‚Äî extractCTDD","text":"Inna Dubchak, Ilya Muchink, Stephen R. Holbrook Sung-Hou Kim. Prediction protein folding class using global description amino acid sequence. Proceedings National Academy Sciences. USA, 1995, 92, 8700-8704. Inna Dubchak, Ilya Muchink, Christopher Mayor, Igor Dralyuk Sung-Hou Kim. Recognition Protein Fold Context SCOP classification. Proteins: Structure, Function Genetics, 1999, 35, 401-407.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/extractCTDD.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CTD Descriptors - Distribution ‚Äî extractCTDD","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/extractCTDD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CTD Descriptors - Distribution ‚Äî extractCTDD","text":"","code":"x <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]] extractCTDD(x) #>   prop1.G1.residue0  prop1.G1.residue25  prop1.G1.residue50  prop1.G1.residue75  #>           0.3558719          23.1316726          50.1779359          73.8434164  #> prop1.G1.residue100   prop1.G2.residue0  prop1.G2.residue25  prop1.G2.residue50  #>          99.8220641           0.5338078          27.4021352          47.3309609  #>  prop1.G2.residue75 prop1.G2.residue100   prop1.G3.residue0  prop1.G3.residue25  #>          75.2669039         100.0000000           0.1779359          19.5729537  #>  prop1.G3.residue50  prop1.G3.residue75 prop1.G3.residue100   prop2.G1.residue0  #>          51.7793594          75.6227758          99.6441281           0.3558719  #>  prop2.G1.residue25  prop2.G1.residue50  prop2.G1.residue75 prop2.G1.residue100  #>          25.6227758          48.0427046          75.4448399         100.0000000  #>   prop2.G2.residue0  prop2.G2.residue25  prop2.G2.residue50  prop2.G2.residue75  #>           1.4234875          23.3096085          54.4483986          76.3345196  #> prop2.G2.residue100   prop2.G3.residue0  prop2.G3.residue25  prop2.G3.residue50  #>          99.4661922           0.1779359          22.7758007          48.9323843  #>  prop2.G3.residue75 prop2.G3.residue100   prop3.G1.residue0  prop3.G1.residue25  #>          69.5729537          99.8220641           0.1779359          20.9964413  #>  prop3.G1.residue50  prop3.G1.residue75 prop3.G1.residue100   prop3.G2.residue0  #>          50.8896797          74.5551601          99.6441281           0.5338078  #>  prop3.G2.residue25  prop3.G2.residue50  prop3.G2.residue75 prop3.G2.residue100  #>          26.5124555          46.2633452          75.4448399         100.0000000  #>   prop3.G3.residue0  prop3.G3.residue25  prop3.G3.residue50  prop3.G3.residue75  #>           0.3558719          24.1992883          50.5338078          73.8434164  #> prop3.G3.residue100   prop4.G1.residue0  prop4.G1.residue25  prop4.G1.residue50  #>          99.8220641           0.3558719          26.5124555          48.3985765  #>  prop4.G1.residue75 prop4.G1.residue100   prop4.G2.residue0  prop4.G2.residue25  #>          76.1565836          99.2882562           1.4234875          21.5302491  #>  prop4.G2.residue50  prop4.G2.residue75 prop4.G2.residue100   prop4.G3.residue0  #>          51.4234875          75.8007117         100.0000000           0.1779359  #>  prop4.G3.residue25  prop4.G3.residue50  prop4.G3.residue75 prop4.G3.residue100  #>          22.7758007          48.9323843          69.5729537          99.8220641  #>   prop5.G1.residue0  prop5.G1.residue25  prop5.G1.residue50  prop5.G1.residue75  #>           0.8896797          20.8185053          48.9323843          69.5729537  #> prop5.G1.residue100   prop5.G2.residue0  prop5.G2.residue25  prop5.G2.residue50  #>          99.8220641           0.1779359          24.9110320          49.1103203  #>  prop5.G2.residue75 prop5.G2.residue100   prop5.G3.residue0  prop5.G3.residue25  #>          75.2669039         100.0000000           0.3558719          26.1565836  #>  prop5.G3.residue50  prop5.G3.residue75 prop5.G3.residue100   prop6.G1.residue0  #>          64.2348754          77.4021352          99.2882562           0.1779359  #>  prop6.G1.residue25  prop6.G1.residue50  prop6.G1.residue75 prop6.G1.residue100  #>          22.9537367          50.8896797          74.3772242          99.8220641  #>   prop6.G2.residue0  prop6.G2.residue25  prop6.G2.residue50  prop6.G2.residue75  #>           1.6014235          21.5302491          49.2882562          70.8185053  #> prop6.G2.residue100   prop6.G3.residue0  prop6.G3.residue25  prop6.G3.residue50  #>          98.9323843           0.3558719          29.0035587          48.2206406  #>  prop6.G3.residue75 prop6.G3.residue100   prop7.G1.residue0  prop7.G1.residue25  #>          77.4021352         100.0000000           0.5338078          23.4875445  #>  prop7.G1.residue50  prop7.G1.residue75 prop7.G1.residue100   prop7.G2.residue0  #>          50.0000000          74.5551601          98.9323843           0.3558719  #>  prop7.G2.residue25  prop7.G2.residue50  prop7.G2.residue75 prop7.G2.residue100  #>          23.1316726          50.1779359          73.8434164          99.8220641  #>   prop7.G3.residue0  prop7.G3.residue25  prop7.G3.residue50  prop7.G3.residue75  #>           0.1779359          27.2241993          48.0427046          75.4448399  #> prop7.G3.residue100  #>         100.0000000"},{"path":"https://nanx.me/protr/reference/extractCTDDClass.html","id":null,"dir":"Reference","previous_headings":"","what":"CTD Descriptors - Distribution (with customized amino acid classification support) ‚Äî extractCTDDClass","title":"CTD Descriptors - Distribution (with customized amino acid classification support) ‚Äî extractCTDDClass","text":"function calculates Distribution descriptor CTD descriptors, customized amino acid classification support.","code":""},{"path":"https://nanx.me/protr/reference/extractCTDDClass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CTD Descriptors - Distribution (with customized amino acid classification support) ‚Äî extractCTDDClass","text":"","code":"extractCTDDClass(x, aagroup1, aagroup2, aagroup3)"},{"path":"https://nanx.me/protr/reference/extractCTDDClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CTD Descriptors - Distribution (with customized amino acid classification support) ‚Äî extractCTDDClass","text":"x character vector, input protein sequence. aagroup1 named list contains first group customized amino acid classification. See example . aagroup2 named list contains second group customized amino acid classification. See example . aagroup3 named list contains third group customized amino acid classification. See example .","code":""},{"path":"https://nanx.me/protr/reference/extractCTDDClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CTD Descriptors - Distribution (with customized amino acid classification support) ‚Äî extractCTDDClass","text":"length k * 15 named vector, k number amino acid properties used.","code":""},{"path":"https://nanx.me/protr/reference/extractCTDDClass.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"CTD Descriptors - Distribution (with customized amino acid classification support) ‚Äî extractCTDDClass","text":"descriptor type, users need intelligently evaluate underlying details descriptors provided, instead using function data blindly. wise use negative positive control comparisons relevant help guide interpretation results.","code":""},{"path":"https://nanx.me/protr/reference/extractCTDDClass.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"CTD Descriptors - Distribution (with customized amino acid classification support) ‚Äî extractCTDDClass","text":"Inna Dubchak, Ilya Muchink, Stephen R. Holbrook Sung-Hou Kim. Prediction protein folding class using global description amino acid sequence. Proceedings National Academy Sciences. USA, 1995, 92, 8700-8704. Inna Dubchak, Ilya Muchink, Christopher Mayor, Igor Dralyuk Sung-Hou Kim. Recognition Protein Fold Context SCOP classification. Proteins: Structure, Function Genetics, 1999, 35, 401-407.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/extractCTDDClass.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CTD Descriptors - Distribution (with customized amino acid classification support) ‚Äî extractCTDDClass","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/extractCTDDClass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CTD Descriptors - Distribution (with customized amino acid classification support) ‚Äî extractCTDDClass","text":"","code":"x <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]]  # using five customized amino acid property classification group1 <- list(   \"hydrophobicity\" = c(\"R\", \"K\", \"E\", \"D\", \"Q\", \"N\"),   \"normwaalsvolume\" = c(\"G\", \"A\", \"S\", \"T\", \"P\", \"D\", \"C\"),   \"polarizability\" = c(\"G\", \"A\", \"S\", \"D\", \"T\"),   \"secondarystruct\" = c(\"E\", \"A\", \"L\", \"M\", \"Q\", \"K\", \"R\", \"H\"),   \"solventaccess\" = c(\"A\", \"L\", \"F\", \"C\", \"G\", \"I\", \"V\", \"W\") )  group2 <- list(   \"hydrophobicity\" = c(\"G\", \"A\", \"S\", \"T\", \"P\", \"H\", \"Y\"),   \"normwaalsvolume\" = c(\"N\", \"V\", \"E\", \"Q\", \"I\", \"L\"),   \"polarizability\" = c(\"C\", \"P\", \"N\", \"V\", \"E\", \"Q\", \"I\", \"L\"),   \"secondarystruct\" = c(\"V\", \"I\", \"Y\", \"C\", \"W\", \"F\", \"T\"),   \"solventaccess\" = c(\"R\", \"K\", \"Q\", \"E\", \"N\", \"D\") )  group3 <- list(   \"hydrophobicity\" = c(\"C\", \"L\", \"V\", \"I\", \"M\", \"F\", \"W\"),   \"normwaalsvolume\" = c(\"M\", \"H\", \"K\", \"F\", \"R\", \"Y\", \"W\"),   \"polarizability\" = c(\"K\", \"M\", \"H\", \"F\", \"R\", \"Y\", \"W\"),   \"secondarystruct\" = c(\"G\", \"N\", \"P\", \"S\", \"D\"),   \"solventaccess\" = c(\"M\", \"S\", \"P\", \"T\", \"H\", \"Y\") )  extractCTDDClass(x, aagroup1 = group1, aagroup2 = group2, aagroup3 = group3) #>   prop1.G1.residue0  prop1.G1.residue25  prop1.G1.residue50  prop1.G1.residue75  #>           0.3558719          23.1316726          50.1779359          73.8434164  #> prop1.G1.residue100   prop1.G2.residue0  prop1.G2.residue25  prop1.G2.residue50  #>          99.8220641           0.5338078          27.4021352          47.3309609  #>  prop1.G2.residue75 prop1.G2.residue100   prop1.G3.residue0  prop1.G3.residue25  #>          75.2669039         100.0000000           0.1779359          19.5729537  #>  prop1.G3.residue50  prop1.G3.residue75 prop1.G3.residue100   prop2.G1.residue0  #>          51.7793594          75.6227758          99.6441281           0.3558719  #>  prop2.G1.residue25  prop2.G1.residue50  prop2.G1.residue75 prop2.G1.residue100  #>          25.6227758          48.0427046          75.4448399         100.0000000  #>   prop2.G2.residue0  prop2.G2.residue25  prop2.G2.residue50  prop2.G2.residue75  #>           1.4234875          23.3096085          54.4483986          76.3345196  #> prop2.G2.residue100   prop2.G3.residue0  prop2.G3.residue25  prop2.G3.residue50  #>          99.4661922           0.1779359          22.7758007          48.9323843  #>  prop2.G3.residue75 prop2.G3.residue100   prop3.G1.residue0  prop3.G1.residue25  #>          69.5729537          99.8220641           0.3558719          26.5124555  #>  prop3.G1.residue50  prop3.G1.residue75 prop3.G1.residue100   prop3.G2.residue0  #>          48.3985765          76.1565836          99.2882562           1.4234875  #>  prop3.G2.residue25  prop3.G2.residue50  prop3.G2.residue75 prop3.G2.residue100  #>          21.5302491          51.4234875          75.8007117         100.0000000  #>   prop3.G3.residue0  prop3.G3.residue25  prop3.G3.residue50  prop3.G3.residue75  #>           0.1779359          22.7758007          48.9323843          69.5729537  #> prop3.G3.residue100   prop4.G1.residue0  prop4.G1.residue25  prop4.G1.residue50  #>          99.8220641           0.1779359          22.9537367          50.8896797  #>  prop4.G1.residue75 prop4.G1.residue100   prop4.G2.residue0  prop4.G2.residue25  #>          74.3772242          99.8220641           1.6014235          21.5302491  #>  prop4.G2.residue50  prop4.G2.residue75 prop4.G2.residue100   prop4.G3.residue0  #>          49.2882562          70.8185053          98.9323843           0.3558719  #>  prop4.G3.residue25  prop4.G3.residue50  prop4.G3.residue75 prop4.G3.residue100  #>          29.0035587          48.2206406          77.4021352         100.0000000  #>   prop5.G1.residue0  prop5.G1.residue25  prop5.G1.residue50  prop5.G1.residue75  #>           0.5338078          23.4875445          50.0000000          74.5551601  #> prop5.G1.residue100   prop5.G2.residue0  prop5.G2.residue25  prop5.G2.residue50  #>          98.9323843           0.3558719          23.1316726          50.1779359  #>  prop5.G2.residue75 prop5.G2.residue100   prop5.G3.residue0  prop5.G3.residue25  #>          73.8434164          99.8220641           0.1779359          27.2241993  #>  prop5.G3.residue50  prop5.G3.residue75 prop5.G3.residue100  #>          48.0427046          75.4448399         100.0000000"},{"path":"https://nanx.me/protr/reference/extractCTDT.html","id":null,"dir":"Reference","previous_headings":"","what":"CTD Descriptors - Transition ‚Äî extractCTDT","title":"CTD Descriptors - Transition ‚Äî extractCTDT","text":"function calculates Transition descriptor CTD descriptors (dim: 21).","code":""},{"path":"https://nanx.me/protr/reference/extractCTDT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CTD Descriptors - Transition ‚Äî extractCTDT","text":"","code":"extractCTDT(x)"},{"path":"https://nanx.me/protr/reference/extractCTDT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CTD Descriptors - Transition ‚Äî extractCTDT","text":"x character vector, input protein sequence.","code":""},{"path":"https://nanx.me/protr/reference/extractCTDT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CTD Descriptors - Transition ‚Äî extractCTDT","text":"length 21 named vector","code":""},{"path":"https://nanx.me/protr/reference/extractCTDT.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"CTD Descriptors - Transition ‚Äî extractCTDT","text":"descriptor type, users need intelligently evaluate underlying details descriptors provided, instead using function data blindly. wise use negative positive control comparisons relevant help guide interpretation results.","code":""},{"path":"https://nanx.me/protr/reference/extractCTDT.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"CTD Descriptors - Transition ‚Äî extractCTDT","text":"Inna Dubchak, Ilya Muchink, Stephen R. Holbrook Sung-Hou Kim. Prediction protein folding class using global description amino acid sequence. Proceedings National Academy Sciences. USA, 1995, 92, 8700-8704. Inna Dubchak, Ilya Muchink, Christopher Mayor, Igor Dralyuk Sung-Hou Kim. Recognition Protein Fold Context SCOP classification. Proteins: Structure, Function Genetics, 1999, 35, 401-407.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/extractCTDT.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CTD Descriptors - Transition ‚Äî extractCTDT","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/extractCTDT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CTD Descriptors - Transition ‚Äî extractCTDT","text":"","code":"x <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]] extractCTDT(x) #> prop1.Tr1221 prop1.Tr1331 prop1.Tr2332 prop2.Tr1221 prop2.Tr1331 prop2.Tr2332  #>   0.27094474   0.16042781   0.23351159   0.26737968   0.22638146   0.17112299  #> prop3.Tr1221 prop3.Tr1331 prop3.Tr2332 prop4.Tr1221 prop4.Tr1331 prop4.Tr2332  #>   0.21033868   0.20499109   0.23707665   0.27272727   0.15151515   0.24598930  #> prop5.Tr1221 prop5.Tr1331 prop5.Tr2332 prop6.Tr1221 prop6.Tr1331 prop6.Tr2332  #>   0.18181818   0.02139037   0.15686275   0.21925134   0.22816399   0.15864528  #> prop7.Tr1221 prop7.Tr1331 prop7.Tr2332  #>   0.25133690   0.21568627   0.18003565"},{"path":"https://nanx.me/protr/reference/extractCTDTClass.html","id":null,"dir":"Reference","previous_headings":"","what":"CTD Descriptors - Transition (with customized amino acid classification support) ‚Äî extractCTDTClass","title":"CTD Descriptors - Transition (with customized amino acid classification support) ‚Äî extractCTDTClass","text":"function calculates Transition descriptor CTD descriptors, customized amino acid classification support.","code":""},{"path":"https://nanx.me/protr/reference/extractCTDTClass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CTD Descriptors - Transition (with customized amino acid classification support) ‚Äî extractCTDTClass","text":"","code":"extractCTDTClass(x, aagroup1, aagroup2, aagroup3)"},{"path":"https://nanx.me/protr/reference/extractCTDTClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CTD Descriptors - Transition (with customized amino acid classification support) ‚Äî extractCTDTClass","text":"x character vector, input protein sequence. aagroup1 named list contains first group customized amino acid classification. See example . aagroup2 named list contains second group customized amino acid classification. See example . aagroup3 named list contains third group customized amino acid classification. See example .","code":""},{"path":"https://nanx.me/protr/reference/extractCTDTClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CTD Descriptors - Transition (with customized amino acid classification support) ‚Äî extractCTDTClass","text":"length k * 3 named vector, k number amino acid properties used.","code":""},{"path":"https://nanx.me/protr/reference/extractCTDTClass.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"CTD Descriptors - Transition (with customized amino acid classification support) ‚Äî extractCTDTClass","text":"descriptor type, users need intelligently evaluate underlying details descriptors provided, instead using function data blindly. wise use negative positive control comparisons relevant help guide interpretation results.","code":""},{"path":"https://nanx.me/protr/reference/extractCTDTClass.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"CTD Descriptors - Transition (with customized amino acid classification support) ‚Äî extractCTDTClass","text":"Inna Dubchak, Ilya Muchink, Stephen R. Holbrook Sung-Hou Kim. Prediction protein folding class using global description amino acid sequence. Proceedings National Academy Sciences. USA, 1995, 92, 8700-8704. Inna Dubchak, Ilya Muchink, Christopher Mayor, Igor Dralyuk Sung-Hou Kim. Recognition Protein Fold Context SCOP classification. Proteins: Structure, Function Genetics, 1999, 35, 401-407.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/extractCTDTClass.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CTD Descriptors - Transition (with customized amino acid classification support) ‚Äî extractCTDTClass","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/extractCTDTClass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CTD Descriptors - Transition (with customized amino acid classification support) ‚Äî extractCTDTClass","text":"","code":"x <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]]  # using five customized amino acid property classification group1 <- list(   \"hydrophobicity\" = c(\"R\", \"K\", \"E\", \"D\", \"Q\", \"N\"),   \"normwaalsvolume\" = c(\"G\", \"A\", \"S\", \"T\", \"P\", \"D\", \"C\"),   \"polarizability\" = c(\"G\", \"A\", \"S\", \"D\", \"T\"),   \"secondarystruct\" = c(\"E\", \"A\", \"L\", \"M\", \"Q\", \"K\", \"R\", \"H\"),   \"solventaccess\" = c(\"A\", \"L\", \"F\", \"C\", \"G\", \"I\", \"V\", \"W\") )  group2 <- list(   \"hydrophobicity\" = c(\"G\", \"A\", \"S\", \"T\", \"P\", \"H\", \"Y\"),   \"normwaalsvolume\" = c(\"N\", \"V\", \"E\", \"Q\", \"I\", \"L\"),   \"polarizability\" = c(\"C\", \"P\", \"N\", \"V\", \"E\", \"Q\", \"I\", \"L\"),   \"secondarystruct\" = c(\"V\", \"I\", \"Y\", \"C\", \"W\", \"F\", \"T\"),   \"solventaccess\" = c(\"R\", \"K\", \"Q\", \"E\", \"N\", \"D\") )  group3 <- list(   \"hydrophobicity\" = c(\"C\", \"L\", \"V\", \"I\", \"M\", \"F\", \"W\"),   \"normwaalsvolume\" = c(\"M\", \"H\", \"K\", \"F\", \"R\", \"Y\", \"W\"),   \"polarizability\" = c(\"K\", \"M\", \"H\", \"F\", \"R\", \"Y\", \"W\"),   \"secondarystruct\" = c(\"G\", \"N\", \"P\", \"S\", \"D\"),   \"solventaccess\" = c(\"M\", \"S\", \"P\", \"T\", \"H\", \"Y\") )  extractCTDTClass(x, aagroup1 = group1, aagroup2 = group2, aagroup3 = group3) #> prop1.Tr1221 prop1.Tr1331 prop1.Tr2332 prop2.Tr1221 prop2.Tr1331 prop2.Tr2332  #>    0.2709447    0.1604278    0.2335116    0.2673797    0.2263815    0.1711230  #> prop3.Tr1221 prop3.Tr1331 prop3.Tr2332 prop4.Tr1221 prop4.Tr1331 prop4.Tr2332  #>    0.2727273    0.1515152    0.2459893    0.2192513    0.2281640    0.1586453  #> prop5.Tr1221 prop5.Tr1331 prop5.Tr2332  #>    0.2513369    0.2156863    0.1800357"},{"path":"https://nanx.me/protr/reference/extractCTriad.html","id":null,"dir":"Reference","previous_headings":"","what":"Conjoint Triad Descriptor ‚Äî extractCTriad","title":"Conjoint Triad Descriptor ‚Äî extractCTriad","text":"function calculates Conjoint Triad descriptor (dim: 343).","code":""},{"path":"https://nanx.me/protr/reference/extractCTriad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conjoint Triad Descriptor ‚Äî extractCTriad","text":"","code":"extractCTriad(x)"},{"path":"https://nanx.me/protr/reference/extractCTriad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conjoint Triad Descriptor ‚Äî extractCTriad","text":"x character vector, input protein sequence.","code":""},{"path":"https://nanx.me/protr/reference/extractCTriad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conjoint Triad Descriptor ‚Äî extractCTriad","text":"length 343 named vector","code":""},{"path":"https://nanx.me/protr/reference/extractCTriad.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Conjoint Triad Descriptor ‚Äî extractCTriad","text":"descriptor type, users need intelligently evaluate underlying details descriptors provided, instead using function data blindly. wise use negative positive control comparisons relevant help guide interpretation results.","code":""},{"path":"https://nanx.me/protr/reference/extractCTriad.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Conjoint Triad Descriptor ‚Äî extractCTriad","text":"J.W. Shen, J. Zhang, X.M. Luo, W.L. Zhu, K.Q. Yu, K.X. Chen, Y.X. Li, H.L. Jiang. Predicting Protein-protein Interactions Based Sequences Information. Proceedings National Academy Sciences. 007, 104, 4337--4341.","code":""},{"path":"https://nanx.me/protr/reference/extractCTriad.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Conjoint Triad Descriptor ‚Äî extractCTriad","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/extractCTriad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conjoint Triad Descriptor ‚Äî extractCTriad","text":"","code":"x <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]] extractCTriad(x) #> VS111 VS211 VS311 VS411 VS511 VS611 VS711 VS121 VS221 VS321 VS421 VS521 VS621  #>   0.1   0.3   0.6   0.2   0.4   0.0   0.3   1.0   0.6   0.5   0.0   0.2   0.3  #> VS721 VS131 VS231 VS331 VS431 VS531 VS631 VS731 VS141 VS241 VS341 VS441 VS541  #>   0.0   0.2   0.4   0.5   0.2   0.3   0.3   0.1   0.3   0.3   0.2   0.2   0.0  #> VS641 VS741 VS151 VS251 VS351 VS451 VS551 VS651 VS751 VS161 VS261 VS361 VS461  #>   0.1   0.2   0.2   0.2   0.5   0.1   0.2   0.0   0.0   0.1   0.4   0.2   0.3  #> VS561 VS661 VS761 VS171 VS271 VS371 VS471 VS571 VS671 VS771 VS112 VS212 VS312  #>   0.2   0.0   0.1   0.1   0.3   0.1   0.0   0.1   0.0   0.1   0.8   0.4   0.4  #> VS412 VS512 VS612 VS712 VS122 VS222 VS322 VS422 VS522 VS622 VS722 VS132 VS232  #>   0.6   0.1   0.5   0.2   0.8   0.5   0.2   0.3   0.2   0.0   0.2   0.1   0.3  #> VS332 VS432 VS532 VS632 VS732 VS142 VS242 VS342 VS442 VS542 VS642 VS742 VS152  #>   0.3   0.4   0.2   0.0   0.1   0.1   0.3   0.3   0.3   0.2   0.1   0.1   0.3  #> VS252 VS352 VS452 VS552 VS652 VS752 VS162 VS262 VS362 VS462 VS562 VS662 VS762  #>   0.3   0.2   0.2   0.2   0.3   0.0   0.2   0.0   0.3   0.2   0.1   0.0   0.2  #> VS172 VS272 VS372 VS472 VS572 VS672 VS772 VS113 VS213 VS313 VS413 VS513 VS613  #>   0.2   0.0   0.1   0.2   0.1   0.0   0.0   0.3   0.2   0.3   0.1   0.5   0.1  #> VS713 VS123 VS223 VS323 VS423 VS523 VS623 VS723 VS133 VS233 VS333 VS433 VS533  #>   0.0   0.4   0.4   0.5   0.2   0.3   0.1   0.0   0.2   0.5   0.1   0.4   0.4  #> VS633 VS733 VS143 VS243 VS343 VS443 VS543 VS643 VS743 VS153 VS253 VS353 VS453  #>   0.3   0.3   0.1   0.0   0.4   0.5   0.1   0.3   0.2   0.6   0.2   0.1   0.1  #> VS553 VS653 VS753 VS163 VS263 VS363 VS463 VS563 VS663 VS763 VS173 VS273 VS373  #>   0.1   0.2   0.0   0.4   0.1   0.2   0.2   0.1   0.1   0.0   0.1   0.1   0.3  #> VS473 VS573 VS673 VS773 VS114 VS214 VS314 VS414 VS514 VS614 VS714 VS124 VS224  #>   0.1   0.1   0.2   0.0   0.1   0.4   0.2   0.1   0.1   0.2   0.2   0.1   0.4  #> VS324 VS424 VS524 VS624 VS724 VS134 VS234 VS334 VS434 VS534 VS634 VS734 VS144  #>   0.0   0.3   0.2   0.2   0.3   0.4   0.4   0.3   0.1   0.2   0.0   0.1   0.2  #> VS244 VS344 VS444 VS544 VS644 VS744 VS154 VS254 VS354 VS454 VS554 VS654 VS754  #>   0.3   0.3   0.4   0.1   0.0   0.1   0.3   0.2   0.0   0.0   0.0   0.0   0.2  #> VS164 VS264 VS364 VS464 VS564 VS664 VS764 VS174 VS274 VS374 VS474 VS574 VS674  #>   0.0   0.2   0.2   0.0   0.1   0.2   0.0   0.2   0.0   0.3   0.3   0.0   0.0  #> VS774 VS115 VS215 VS315 VS415 VS515 VS615 VS715 VS125 VS225 VS325 VS425 VS525  #>   0.0   0.4   0.5   0.3   0.2   0.0   0.2   0.0   0.5   0.0   0.0   0.4   0.3  #> VS625 VS725 VS135 VS235 VS335 VS435 VS535 VS635 VS735 VS145 VS245 VS345 VS445  #>   0.1   0.0   0.2   0.0   0.5   0.1   0.0   0.3   0.0   0.3   0.1   0.1   0.0  #> VS545 VS645 VS745 VS155 VS255 VS355 VS455 VS555 VS655 VS755 VS165 VS265 VS365  #>   0.2   0.1   0.0   0.1   0.1   0.1   0.2   0.0   0.0   0.0   0.2   0.1   0.1  #> VS465 VS565 VS665 VS765 VS175 VS275 VS375 VS475 VS575 VS675 VS775 VS116 VS216  #>   0.1   0.0   0.1   0.0   0.0   0.1   0.2   0.0   0.0   0.0   0.0   0.2   0.4  #> VS316 VS416 VS516 VS616 VS716 VS126 VS226 VS326 VS426 VS526 VS626 VS726 VS136  #>   0.1   0.1   0.1   0.2   0.0   0.0   0.1   0.1   0.2   0.2   0.2   0.1   0.1  #> VS236 VS336 VS436 VS536 VS636 VS736 VS146 VS246 VS346 VS446 VS546 VS646 VS746  #>   0.2   0.3   0.2   0.1   0.0   0.3   0.1   0.3   0.2   0.0   0.1   0.1   0.0  #> VS156 VS256 VS356 VS456 VS556 VS656 VS756 VS166 VS266 VS366 VS466 VS566 VS666  #>   0.0   0.2   0.0   0.2   0.0   0.1   0.1   0.1   0.1   0.1   0.0   0.1   0.2  #> VS766 VS176 VS276 VS376 VS476 VS576 VS676 VS776 VS117 VS217 VS317 VS417 VS517  #>   0.0   0.0   0.0   0.1   0.0   0.0   0.1   0.1   0.0   0.4   0.1   0.0   0.0  #> VS617 VS717 VS127 VS227 VS327 VS427 VS527 VS627 VS727 VS137 VS237 VS337 VS437  #>   0.1   0.0   0.2   0.2   0.1   0.0   0.0   0.1   0.0   0.3   0.1   0.2   0.2  #> VS537 VS637 VS737 VS147 VS247 VS347 VS447 VS547 VS647 VS747 VS157 VS257 VS357  #>   0.1   0.2   0.0   0.2   0.2   0.0   0.0   0.0   0.0   0.2   0.1   0.1   0.2  #> VS457 VS557 VS657 VS757 VS167 VS267 VS367 VS467 VS567 VS667 VS767 VS177 VS277  #>   0.0   0.0   0.0   0.0   0.1   0.0   0.2   0.0   0.0   0.0   0.0   0.0   0.1  #> VS377 VS477 VS577 VS677 VS777  #>   0.0   0.0   0.1   0.0   0.0"},{"path":"https://nanx.me/protr/reference/extractCTriadClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Conjoint Triad Descriptor (with customized amino acid classification support) ‚Äî extractCTriadClass","title":"Conjoint Triad Descriptor (with customized amino acid classification support) ‚Äî extractCTriadClass","text":"function calculates Conjoint Triad descriptor, customized amino acid classification support.","code":""},{"path":"https://nanx.me/protr/reference/extractCTriadClass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conjoint Triad Descriptor (with customized amino acid classification support) ‚Äî extractCTriadClass","text":"","code":"extractCTriadClass(x, aaclass)"},{"path":"https://nanx.me/protr/reference/extractCTriadClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conjoint Triad Descriptor (with customized amino acid classification support) ‚Äî extractCTriadClass","text":"x character vector, input protein sequence. aaclass list containing customized amino acid classification. See example .","code":""},{"path":"https://nanx.me/protr/reference/extractCTriadClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conjoint Triad Descriptor (with customized amino acid classification support) ‚Äî extractCTriadClass","text":"length k^3 named vector, k number customized classes amino acids.","code":""},{"path":"https://nanx.me/protr/reference/extractCTriadClass.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Conjoint Triad Descriptor (with customized amino acid classification support) ‚Äî extractCTriadClass","text":"descriptor type, users need intelligently evaluate underlying details descriptors provided, instead using function data blindly. wise use negative positive control comparisons relevant help guide interpretation results.","code":""},{"path":"https://nanx.me/protr/reference/extractCTriadClass.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Conjoint Triad Descriptor (with customized amino acid classification support) ‚Äî extractCTriadClass","text":"J.W. Shen, J. Zhang, X.M. Luo, W.L. Zhu, K.Q. Yu, K.X. Chen, Y.X. Li, H.L. Jiang. Predicting Protein-protein Interactions Based Sequences Information. Proceedings National Academy Sciences. 007, 104, 4337--4341.","code":""},{"path":"https://nanx.me/protr/reference/extractCTriadClass.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Conjoint Triad Descriptor (with customized amino acid classification support) ‚Äî extractCTriadClass","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/extractCTriadClass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conjoint Triad Descriptor (with customized amino acid classification support) ‚Äî extractCTriadClass","text":"","code":"x <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]]  # use customized amino acid classification (normalized van der Waals volume) newclass <- list(   c(\"G\", \"A\", \"S\", \"T\", \"P\", \"D\", \"C\"),   c(\"N\", \"V\", \"E\", \"Q\", \"I\", \"L\"),   c(\"M\", \"H\", \"K\", \"F\", \"R\", \"Y\", \"W\") )  extractCTriadClass(x, aaclass = newclass) #>      VS111      VS211      VS311      VS121      VS221      VS321      VS131  #> 0.90384615 0.55769231 0.46153846 0.59615385 0.23076923 0.26923077 0.42307692  #>      VS231      VS331      VS112      VS212      VS312      VS122      VS222  #> 0.38461538 0.17307692 0.57692308 0.34615385 0.28846154 0.26923077 0.17307692  #>      VS322      VS132      VS232      VS332      VS113      VS213      VS313  #> 0.11538462 0.26923077 0.21153846 0.09615385 0.44230769 0.19230769 0.23076923  #>      VS123      VS223      VS323      VS133      VS233      VS333  #> 0.34615385 0.15384615 0.19230769 0.17307692 0.09615385 0.00000000"},{"path":"https://nanx.me/protr/reference/extractDC.html","id":null,"dir":"Reference","previous_headings":"","what":"Dipeptide Composition Descriptor ‚Äî extractDC","title":"Dipeptide Composition Descriptor ‚Äî extractDC","text":"function calculates Dipeptide Composition descriptor (dim: 400).","code":""},{"path":"https://nanx.me/protr/reference/extractDC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dipeptide Composition Descriptor ‚Äî extractDC","text":"","code":"extractDC(x)"},{"path":"https://nanx.me/protr/reference/extractDC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dipeptide Composition Descriptor ‚Äî extractDC","text":"x character vector, input protein sequence.","code":""},{"path":"https://nanx.me/protr/reference/extractDC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dipeptide Composition Descriptor ‚Äî extractDC","text":"length 400 named vector","code":""},{"path":"https://nanx.me/protr/reference/extractDC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dipeptide Composition Descriptor ‚Äî extractDC","text":"M. Bhasin, G. P. S. Raghava. Classification Nuclear Receptors Based Amino Acid Composition Dipeptide Composition. Journal Biological Chemistry, 2004, 279, 23262.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/extractDC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dipeptide Composition Descriptor ‚Äî extractDC","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/extractDC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dipeptide Composition Descriptor ‚Äî extractDC","text":"","code":"x <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]] extractDC(x) #>          AA          RA          NA          DA          CA          EA  #> 0.003565062 0.003565062 0.000000000 0.007130125 0.003565062 0.003565062  #>          QA          GA          HA          IA          LA          KA  #> 0.007130125 0.007130125 0.001782531 0.003565062 0.001782531 0.001782531  #>          MA          FA          PA          SA          TA          WA  #> 0.000000000 0.005347594 0.003565062 0.007130125 0.003565062 0.000000000  #>          YA          VA          AR          RR          NR          DR  #> 0.000000000 0.000000000 0.003565062 0.007130125 0.005347594 0.001782531  #>          CR          ER          QR          GR          HR          IR  #> 0.005347594 0.005347594 0.000000000 0.007130125 0.001782531 0.003565062  #>          LR          KR          MR          FR          PR          SR  #> 0.005347594 0.001782531 0.001782531 0.003565062 0.001782531 0.003565062  #>          TR          WR          YR          VR          AN          RN  #> 0.003565062 0.000000000 0.005347594 0.003565062 0.001782531 0.003565062  #>          NN          DN          CN          EN          QN          GN  #> 0.000000000 0.005347594 0.001782531 0.000000000 0.001782531 0.005347594  #>          HN          IN          LN          KN          MN          FN  #> 0.003565062 0.000000000 0.003565062 0.001782531 0.000000000 0.001782531  #>          PN          SN          TN          WN          YN          VN  #> 0.000000000 0.001782531 0.003565062 0.003565062 0.000000000 0.000000000  #>          AD          RD          ND          DD          CD          ED  #> 0.003565062 0.005347594 0.003565062 0.003565062 0.001782531 0.001782531  #>          QD          GD          HD          ID          LD          KD  #> 0.000000000 0.005347594 0.001782531 0.001782531 0.001782531 0.001782531  #>          MD          FD          PD          SD          TD          WD  #> 0.001782531 0.001782531 0.007130125 0.005347594 0.001782531 0.000000000  #>          YD          VD          AC          RC          NC          DC  #> 0.001782531 0.000000000 0.003565062 0.005347594 0.000000000 0.001782531  #>          CC          EC          QC          GC          HC          IC  #> 0.003565062 0.003565062 0.003565062 0.001782531 0.001782531 0.001782531  #>          LC          KC          MC          FC          PC          SC  #> 0.007130125 0.001782531 0.000000000 0.001782531 0.000000000 0.007130125  #>          TC          WC          YC          VC          AE          RE  #> 0.005347594 0.005347594 0.007130125 0.005347594 0.003565062 0.000000000  #>          NE          DE          CE          EE          QE          GE  #> 0.000000000 0.001782531 0.003565062 0.003565062 0.005347594 0.003565062  #>          HE          IE          LE          KE          ME          FE  #> 0.001782531 0.000000000 0.000000000 0.003565062 0.000000000 0.001782531  #>          PE          SE          TE          WE          YE          VE  #> 0.001782531 0.007130125 0.003565062 0.001782531 0.001782531 0.003565062  #>          AQ          RQ          NQ          DQ          CQ          EQ  #> 0.008912656 0.001782531 0.000000000 0.001782531 0.005347594 0.001782531  #>          QQ          GQ          HQ          IQ          LQ          KQ  #> 0.003565062 0.001782531 0.001782531 0.000000000 0.003565062 0.000000000  #>          MQ          FQ          PQ          SQ          TQ          WQ  #> 0.000000000 0.001782531 0.003565062 0.005347594 0.001782531 0.001782531  #>          YQ          VQ          AG          RG          NG          DG  #> 0.003565062 0.000000000 0.005347594 0.007130125 0.003565062 0.003565062  #>          CG          EG          QG          GG          HG          IG  #> 0.007130125 0.003565062 0.003565062 0.008912656 0.000000000 0.001782531  #>          LG          KG          MG          FG          PG          SG  #> 0.010695187 0.001782531 0.000000000 0.001782531 0.005347594 0.012477718  #>          TG          WG          YG          VG          AH          RH  #> 0.000000000 0.001782531 0.001782531 0.001782531 0.003565062 0.000000000  #>          NH          DH          CH          EH          QH          GH  #> 0.001782531 0.000000000 0.003565062 0.000000000 0.003565062 0.000000000  #>          HH          IH          LH          KH          MH          FH  #> 0.001782531 0.001782531 0.001782531 0.005347594 0.000000000 0.000000000  #>          PH          SH          TH          WH          YH          VH  #> 0.001782531 0.001782531 0.001782531 0.000000000 0.000000000 0.001782531  #>          AI          RI          NI          DI          CI          EI  #> 0.003565062 0.001782531 0.000000000 0.003565062 0.000000000 0.003565062  #>          QI          GI          HI          II          LI          KI  #> 0.000000000 0.005347594 0.000000000 0.001782531 0.003565062 0.000000000  #>          MI          FI          PI          SI          TI          WI  #> 0.003565062 0.000000000 0.000000000 0.000000000 0.000000000 0.003565062  #>          YI          VI          AL          RL          NL          DL  #> 0.001782531 0.003565062 0.008912656 0.007130125 0.001782531 0.001782531  #>          CL          EL          QL          GL          HL          IL  #> 0.005347594 0.001782531 0.003565062 0.010695187 0.003565062 0.007130125  #>          LL          KL          ML          FL          PL          SL  #> 0.007130125 0.000000000 0.001782531 0.001782531 0.001782531 0.001782531  #>          TL          WL          YL          VL          AK          RK  #> 0.001782531 0.001782531 0.001782531 0.005347594 0.003565062 0.000000000  #>          NK          DK          CK          EK          QK          GK  #> 0.000000000 0.000000000 0.000000000 0.003565062 0.005347594 0.008912656  #>          HK          IK          LK          KK          MK          FK  #> 0.001782531 0.001782531 0.005347594 0.000000000 0.001782531 0.001782531  #>          PK          SK          TK          WK          YK          VK  #> 0.000000000 0.001782531 0.001782531 0.000000000 0.000000000 0.001782531  #>          AM          RM          NM          DM          CM          EM  #> 0.001782531 0.001782531 0.003565062 0.000000000 0.000000000 0.000000000  #>          QM          GM          HM          IM          LM          KM  #> 0.001782531 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>          MM          FM          PM          SM          TM          WM  #> 0.000000000 0.000000000 0.000000000 0.001782531 0.000000000 0.000000000  #>          YM          VM          AF          RF          NF          DF  #> 0.000000000 0.000000000 0.000000000 0.005347594 0.000000000 0.001782531  #>          CF          EF          QF          GF          HF          IF  #> 0.003565062 0.003565062 0.001782531 0.001782531 0.000000000 0.001782531  #>          LF          KF          MF          FF          PF          SF  #> 0.001782531 0.001782531 0.000000000 0.000000000 0.001782531 0.000000000  #>          TF          WF          YF          VF          AP          RP  #> 0.000000000 0.000000000 0.003565062 0.003565062 0.000000000 0.005347594  #>          NP          DP          CP          EP          QP          GP  #> 0.005347594 0.000000000 0.001782531 0.001782531 0.001782531 0.003565062  #>          HP          IP          LP          KP          MP          FP  #> 0.001782531 0.000000000 0.005347594 0.005347594 0.000000000 0.001782531  #>          PP          SP          TP          WP          YP          VP  #> 0.003565062 0.005347594 0.001782531 0.000000000 0.001782531 0.007130125  #>          AS          RS          NS          DS          CS          ES  #> 0.003565062 0.007130125 0.007130125 0.005347594 0.007130125 0.005347594  #>          QS          GS          HS          IS          LS          KS  #> 0.001782531 0.001782531 0.003565062 0.005347594 0.005347594 0.003565062  #>          MS          FS          PS          SS          TS          WS  #> 0.000000000 0.001782531 0.007130125 0.010695187 0.001782531 0.001782531  #>          YS          VS          AT          RT          NT          DT  #> 0.007130125 0.001782531 0.001782531 0.005347594 0.000000000 0.005347594  #>          CT          ET          QT          GT          HT          IT  #> 0.003565062 0.000000000 0.000000000 0.005347594 0.000000000 0.000000000  #>          LT          KT          MT          FT          PT          ST  #> 0.005347594 0.001782531 0.001782531 0.000000000 0.000000000 0.005347594  #>          TT          WT          YT          VT          AW          RW  #> 0.000000000 0.001782531 0.003565062 0.003565062 0.000000000 0.000000000  #>          NW          DW          CW          EW          QW          GW  #> 0.001782531 0.003565062 0.003565062 0.000000000 0.000000000 0.000000000  #>          HW          IW          LW          KW          MW          FW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>          PW          SW          TW          WW          YW          VW  #> 0.007130125 0.003565062 0.003565062 0.000000000 0.000000000 0.000000000  #>          AY          RY          NY          DY          CY          EY  #> 0.001782531 0.000000000 0.005347594 0.000000000 0.005347594 0.003565062  #>          QY          GY          HY          IY          LY          KY  #> 0.001782531 0.001782531 0.000000000 0.001782531 0.003565062 0.003565062  #>          MY          FY          PY          SY          TY          WY  #> 0.000000000 0.001782531 0.001782531 0.003565062 0.003565062 0.000000000  #>          YY          VY          AV          RV          NV          DV  #> 0.000000000 0.003565062 0.001782531 0.003565062 0.000000000 0.003565062  #>          CV          EV          QV          GV          HV          IV  #> 0.001782531 0.001782531 0.001782531 0.001782531 0.003565062 0.001782531  #>          LV          KV          MV          FV          PV          SV  #> 0.003565062 0.003565062 0.000000000 0.003565062 0.003565062 0.003565062  #>          TV          WV          YV          VV  #> 0.005347594 0.000000000 0.001782531 0.003565062"},{"path":"https://nanx.me/protr/reference/extractDescScales.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales-Based Descriptors with 20+ classes of Molecular Descriptors ‚Äî extractDescScales","title":"Scales-Based Descriptors with 20+ classes of Molecular Descriptors ‚Äî extractDescScales","text":"function calculates scales-based descriptors molecular descriptors sets calculated Dragon, Discovery Studio MOE. Users can specify molecular descriptors select one deseriptor sets specify numerical character index molecular descriptors descriptor set.","code":""},{"path":"https://nanx.me/protr/reference/extractDescScales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales-Based Descriptors with 20+ classes of Molecular Descriptors ‚Äî extractDescScales","text":"","code":"extractDescScales(   x,   propmat,   index = NULL,   pc,   lag,   scale = TRUE,   silent = TRUE )"},{"path":"https://nanx.me/protr/reference/extractDescScales.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales-Based Descriptors with 20+ classes of Molecular Descriptors ‚Äî extractDescScales","text":"x character vector, input protein sequence. propmat matrix containing descriptor set amino acids, can chosen AAMOE2D, AAMOE3D, AACPSA, AADescAll, AA2DACOR, AA3DMoRSE, AAACF, AABurden, AAConn, AAConst, AAEdgeAdj, AAEigIdx, AAFGC, AAGeom, AAGETAWAY, AAInfo, AAMolProp, AARandic, AARDF, AATopo, AATopoChg, AAWalk, AAWHIM. index Integer vector character vector. Specify molecular descriptors select one deseriptor sets specify numerical character index molecular descriptors descriptor set. Default NULL, means selecting molecular descriptors descriptor set. pc Integer. maximum dimension space data represented . Must greater number amino acid properties provided. lag lag parameter. Must less amino acids. scale Logical. auto-scale property matrix (propmat) MDS? Default TRUE. silent Logical. Whether print standard deviation, proportion variance cumulative proportion selected principal components . Default TRUE.","code":""},{"path":"https://nanx.me/protr/reference/extractDescScales.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scales-Based Descriptors with 20+ classes of Molecular Descriptors ‚Äî extractDescScales","text":"length lag * p^2 named vector, p number scales selected.","code":""},{"path":"https://nanx.me/protr/reference/extractDescScales.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scales-Based Descriptors with 20+ classes of Molecular Descriptors ‚Äî extractDescScales","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/extractDescScales.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scales-Based Descriptors with 20+ classes of Molecular Descriptors ‚Äî extractDescScales","text":"","code":"x <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]] descscales <- extractDescScales(   x,   propmat = \"AATopo\", index = c(37:41, 43:47),   pc = 5, lag = 7, silent = FALSE ) #> Summary of the first 5 principal components:  #>                             PC1      PC2       PC3       PC4        PC5 #> Standard deviation     2.581537 1.754133 0.4621854 0.1918666 0.08972087 #> Proportion of Variance 0.666430 0.307700 0.0213600 0.0036800 0.00080000 #> Cumulative Proportion  0.666430 0.974130 0.9954900 0.9991700 0.99998000"},{"path":"https://nanx.me/protr/reference/extractFAScales.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales-Based Descriptors derived by Factor Analysis ‚Äî extractFAScales","title":"Scales-Based Descriptors derived by Factor Analysis ‚Äî extractFAScales","text":"function calculates scales-based descriptors derived Factor Analysis (FA). Users can provide customized amino acid property matrices.","code":""},{"path":"https://nanx.me/protr/reference/extractFAScales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales-Based Descriptors derived by Factor Analysis ‚Äî extractFAScales","text":"","code":"extractFAScales(   x,   propmat,   factors,   scores = \"regression\",   lag,   scale = TRUE,   silent = TRUE )"},{"path":"https://nanx.me/protr/reference/extractFAScales.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales-Based Descriptors derived by Factor Analysis ‚Äî extractFAScales","text":"x character vector, input protein sequence. propmat matrix containing properties amino acids. row represent one amino acid type, column represents one property. Note one-letter row names must provided need seek properties AA type. factors Integer. number factors fitted. Must greater number AA properties provided. scores Type scores produce. default \"regression\", gives Thompson's scores, \"Bartlett\" given Bartlett's weighted least-squares scores. lag lag parameter. Must less amino acids number protein sequence. scale Logical. auto-scale property matrix (propmat) Factor Analysis? Default TRUE. silent Logical. Whether print SS loadings, proportion variance cumulative proportion selected factors . Default TRUE.","code":""},{"path":"https://nanx.me/protr/reference/extractFAScales.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scales-Based Descriptors derived by Factor Analysis ‚Äî extractFAScales","text":"length lag * p^2 named vector, p number scales (factors) selected.","code":""},{"path":"https://nanx.me/protr/reference/extractFAScales.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Scales-Based Descriptors derived by Factor Analysis ‚Äî extractFAScales","text":"Atchley, W. R., Zhao, J., Fernandes, . D., & Druke, T. (2005). Solving protein sequence metric problem. Proceedings National Academy Sciences United States America, 102(18), 6395-6400.","code":""},{"path":"https://nanx.me/protr/reference/extractFAScales.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scales-Based Descriptors derived by Factor Analysis ‚Äî extractFAScales","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/extractFAScales.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scales-Based Descriptors derived by Factor Analysis ‚Äî extractFAScales","text":"","code":"x <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]] data(AATopo) tprops <- AATopo[, c(37:41, 43:47)] # select a set of topological descriptors fa <- extractFAScales(x, propmat = tprops, factors = 5, lag = 7, silent = FALSE) #> Summary of the factor analysis result:  #>  #> Call: #> factanal(x = propmat, factors = factors, scores = scores) #>  #> Uniquenesses: #> WhetZ Whetm Whetv Whete Whetp JhetZ Jhetm Jhetv Jhete Jhetp  #> 0.005 0.005 0.005 0.005 0.005 0.005 0.005 0.005 0.005 0.005  #>  #> Loadings: #>       Factor1 Factor2 Factor3 Factor4 Factor5 #> WhetZ  0.982  -0.166                          #> Whetm  0.982  -0.166                          #> Whetv  0.989  -0.133                          #> Whete  0.982  -0.159                          #> Whetp  0.989  -0.131                          #> JhetZ -0.399   0.881   0.162   0.192          #> Jhetm -0.399   0.881   0.162   0.192          #> Jhetv          0.985          -0.131          #> Jhete -0.378   0.872   0.300                  #> Jhetp          0.970  -0.210                  #>  #>                Factor1 Factor2 Factor3 Factor4 Factor5 #> SS loadings      5.313   4.340   0.212   0.107   0.003 #> Proportion Var   0.531   0.434   0.021   0.011   0.000 #> Cumulative Var   0.531   0.965   0.986   0.997   0.997 #>  #> Test of the hypothesis that 5 factors are sufficient. #> The chi square statistic is 472.2 on 5 degrees of freedom. #> The p-value is 7.96e-100"},{"path":"https://nanx.me/protr/reference/extractGeary.html","id":null,"dir":"Reference","previous_headings":"","what":"Geary Autocorrelation Descriptor ‚Äî extractGeary","title":"Geary Autocorrelation Descriptor ‚Äî extractGeary","text":"function calculates Geary autocorrelation descriptor (dim: length(props) * nlag).","code":""},{"path":"https://nanx.me/protr/reference/extractGeary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geary Autocorrelation Descriptor ‚Äî extractGeary","text":"","code":"extractGeary(   x,   props = c(\"CIDH920105\", \"BHAR880101\", \"CHAM820101\", \"CHAM820102\", \"CHOC760101\",     \"BIGC670101\", \"CHAM810101\", \"DAYM780201\"),   nlag = 30L,   customprops = NULL )"},{"path":"https://nanx.me/protr/reference/extractGeary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geary Autocorrelation Descriptor ‚Äî extractGeary","text":"x character vector, input protein sequence. props character vector, specifying Accession Number target properties. 8 properties used default, listed : AccNo. CIDH920105 Normalized average hydrophobicity scales (Cid et al., 1992) AccNo. BHAR880101 Average flexibility indices (Bhaskaran-Ponnuswamy, 1988) AccNo. CHAM820101 Polarizability parameter (Charton-Charton, 1982) AccNo. CHAM820102 Free energy solution water, kcal/mole (Charton-Charton, 1982) AccNo. CHOC760101 Residue accessible surface area tripeptide (Chothia, 1976) AccNo. BIGC670101 Residue volume (Bigelow, 1967) AccNo. CHAM810101 Steric parameter (Charton, 1981) AccNo. DAYM780201 Relative mutability (Dayhoff et al., 1978b) nlag Maximum value lag parameter. Default 30. customprops n x 21 named data frame contains n customized property. row contains one property. column order different amino acid types 'AccNo', '', 'R', 'N', 'D', 'C', 'E', 'Q', 'G', 'H', '', 'L', 'K', 'M', 'F', 'P', 'S', 'T', 'W', 'Y', 'V', columns also exactly named like . AccNo column contains properties' names. users explicitly specify properties names argument props. See examples demonstration. default value customprops NULL.","code":""},{"path":"https://nanx.me/protr/reference/extractGeary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geary Autocorrelation Descriptor ‚Äî extractGeary","text":"length length(props) * nlag named vector.","code":""},{"path":"https://nanx.me/protr/reference/extractGeary.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Geary Autocorrelation Descriptor ‚Äî extractGeary","text":"descriptor type, users need intelligently evaluate underlying details descriptors provided, instead using function data blindly. wise use negative positive control comparisons relevant help guide interpretation results.","code":""},{"path":"https://nanx.me/protr/reference/extractGeary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Geary Autocorrelation Descriptor ‚Äî extractGeary","text":"AAindex: Amino acid index database. https://www.genome.jp/dbget/aaindex.html Feng, Z.P. Zhang, C.T. (2000) Prediction membrane protein types based hydrophobic index amino acids. Journal Protein Chemistry, 19, 269-275. Horne, D.S. (1988) Prediction protein helix content autocorrelation analysis sequence hydrophobicities. Biopolymers, 27, 451-477. Sokal, R.R. Thomson, B.. (2006) Population structure inferred local spatial autocorrelation: usage Amerindian tribal population. American Journal Physical Anthropology, 129, 121-131.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/extractGeary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Geary Autocorrelation Descriptor ‚Äî extractGeary","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/extractGeary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geary Autocorrelation Descriptor ‚Äî extractGeary","text":"","code":"x <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]] extractGeary(x) #>  CIDH920105.lag1  CIDH920105.lag2  CIDH920105.lag3  CIDH920105.lag4  #>        0.9361830        1.0442920        1.0452843        1.0563467  #>  CIDH920105.lag5  CIDH920105.lag6  CIDH920105.lag7  CIDH920105.lag8  #>        0.9406031        1.0765517        1.0675786        0.9991363  #>  CIDH920105.lag9 CIDH920105.lag10 CIDH920105.lag11 CIDH920105.lag12  #>        1.0316555        0.9684585        0.9353130        1.0201990  #> CIDH920105.lag13 CIDH920105.lag14 CIDH920105.lag15 CIDH920105.lag16  #>        0.9340933        1.0207373        1.0251486        1.0290464  #> CIDH920105.lag17 CIDH920105.lag18 CIDH920105.lag19 CIDH920105.lag20  #>        1.0414375        0.9494403        0.9905987        0.9987183  #> CIDH920105.lag21 CIDH920105.lag22 CIDH920105.lag23 CIDH920105.lag24  #>        0.9472542        0.9010009        0.9828848        1.0574098  #> CIDH920105.lag25 CIDH920105.lag26 CIDH920105.lag27 CIDH920105.lag28  #>        0.9897955        1.0290018        0.9400066        1.0584150  #> CIDH920105.lag29 CIDH920105.lag30  BHAR880101.lag1  BHAR880101.lag2  #>        0.9762904        1.0029734        0.9818711        1.0051730  #>  BHAR880101.lag3  BHAR880101.lag4  BHAR880101.lag5  BHAR880101.lag6  #>        0.9967069        1.1012905        0.9595859        1.1337056  #>  BHAR880101.lag7  BHAR880101.lag8  BHAR880101.lag9 BHAR880101.lag10  #>        1.0628740        0.9497400        1.0338201        0.9023549  #> BHAR880101.lag11 BHAR880101.lag12 BHAR880101.lag13 BHAR880101.lag14  #>        0.9802386        1.0151581        0.9292786        1.0066693  #> BHAR880101.lag15 BHAR880101.lag16 BHAR880101.lag17 BHAR880101.lag18  #>        0.9856150        0.9759971        1.0232794        1.0687209  #> BHAR880101.lag19 BHAR880101.lag20 BHAR880101.lag21 BHAR880101.lag22  #>        1.0491804        1.0351528        1.0232000        0.9016895  #> BHAR880101.lag23 BHAR880101.lag24 BHAR880101.lag25 BHAR880101.lag26  #>        1.0391900        1.0301878        1.0021211        1.0222207  #> BHAR880101.lag27 BHAR880101.lag28 BHAR880101.lag29 BHAR880101.lag30  #>        0.9260382        1.0403725        0.9530778        0.9884374  #>  CHAM820101.lag1  CHAM820101.lag2  CHAM820101.lag3  CHAM820101.lag4  #>        1.0133839        1.0022438        1.0551890        1.0169637  #>  CHAM820101.lag5  CHAM820101.lag6  CHAM820101.lag7  CHAM820101.lag8  #>        0.9413192        0.9730229        0.9865679        0.9428985  #>  CHAM820101.lag9 CHAM820101.lag10 CHAM820101.lag11 CHAM820101.lag12  #>        0.9521705        1.0440834        0.9744226        0.9842079  #> CHAM820101.lag13 CHAM820101.lag14 CHAM820101.lag15 CHAM820101.lag16  #>        0.9375430        0.9847534        0.9762810        1.0337143  #> CHAM820101.lag17 CHAM820101.lag18 CHAM820101.lag19 CHAM820101.lag20  #>        1.0637944        0.9600194        1.0264610        0.9730978  #> CHAM820101.lag21 CHAM820101.lag22 CHAM820101.lag23 CHAM820101.lag24  #>        0.9841629        0.8944897        1.0012565        1.0407044  #> CHAM820101.lag25 CHAM820101.lag26 CHAM820101.lag27 CHAM820101.lag28  #>        0.9774393        0.9556452        0.9771782        0.9855390  #> CHAM820101.lag29 CHAM820101.lag30  CHAM820102.lag1  CHAM820102.lag2  #>        1.0378770        0.9705165        0.9503346        1.0343446  #>  CHAM820102.lag3  CHAM820102.lag4  CHAM820102.lag5  CHAM820102.lag6  #>        1.0930293        1.0805000        0.9861535        0.9921047  #>  CHAM820102.lag7  CHAM820102.lag8  CHAM820102.lag9 CHAM820102.lag10  #>        1.0083331        0.9676778        1.0545499        0.9671392  #> CHAM820102.lag11 CHAM820102.lag12 CHAM820102.lag13 CHAM820102.lag14  #>        1.0000784        0.9749532        0.9242556        1.0615438  #> CHAM820102.lag15 CHAM820102.lag16 CHAM820102.lag17 CHAM820102.lag18  #>        1.0210459        1.0068944        0.9859525        0.9524320  #> CHAM820102.lag19 CHAM820102.lag20 CHAM820102.lag21 CHAM820102.lag22  #>        1.0254189        1.0110984        1.0153212        1.0091916  #> CHAM820102.lag23 CHAM820102.lag24 CHAM820102.lag25 CHAM820102.lag26  #>        1.0471259        1.0112268        0.9833002        1.0031331  #> CHAM820102.lag27 CHAM820102.lag28 CHAM820102.lag29 CHAM820102.lag30  #>        0.9958332        1.0151695        0.9763861        0.9332919  #>  CHOC760101.lag1  CHOC760101.lag2  CHOC760101.lag3  CHOC760101.lag4  #>        1.0150406        0.9729159        1.0498232        0.9944486  #>  CHOC760101.lag5  CHOC760101.lag6  CHOC760101.lag7  CHOC760101.lag8  #>        0.9503834        0.9408494        0.9576772        0.9247629  #>  CHOC760101.lag9 CHOC760101.lag10 CHOC760101.lag11 CHOC760101.lag12  #>        0.9614165        1.0452973        1.0171362        0.9890922  #> CHOC760101.lag13 CHOC760101.lag14 CHOC760101.lag15 CHOC760101.lag16  #>        0.9510173        0.9532281        0.9770492        1.0067054  #> CHOC760101.lag17 CHOC760101.lag18 CHOC760101.lag19 CHOC760101.lag20  #>        1.0677338        0.9598050        1.0069556        1.0038437  #> CHOC760101.lag21 CHOC760101.lag22 CHOC760101.lag23 CHOC760101.lag24  #>        0.9524803        0.9014090        0.9852450        1.0379942  #> CHOC760101.lag25 CHOC760101.lag26 CHOC760101.lag27 CHOC760101.lag28  #>        1.0006621        0.9339269        0.9963756        1.0052963  #> CHOC760101.lag29 CHOC760101.lag30  BIGC670101.lag1  BIGC670101.lag2  #>        1.0413666        0.9467525        1.0059350        0.9929376  #>  BIGC670101.lag3  BIGC670101.lag4  BIGC670101.lag5  BIGC670101.lag6  #>        1.0731913        1.0077837        0.9192554        0.9672734  #>  BIGC670101.lag7  BIGC670101.lag8  BIGC670101.lag9 BIGC670101.lag10  #>        0.9461109        0.9529949        0.9730305        1.0427910  #> BIGC670101.lag11 BIGC670101.lag12 BIGC670101.lag13 BIGC670101.lag14  #>        1.0039312        0.9984156        0.9450803        0.9733642  #> BIGC670101.lag15 BIGC670101.lag16 BIGC670101.lag17 BIGC670101.lag18  #>        0.9915806        1.0137285        1.0702942        0.9415800  #> BIGC670101.lag19 BIGC670101.lag20 BIGC670101.lag21 BIGC670101.lag22  #>        1.0139971        0.9625814        0.9565350        0.8898701  #> BIGC670101.lag23 BIGC670101.lag24 BIGC670101.lag25 BIGC670101.lag26  #>        0.9905643        1.0442658        0.9891278        0.9570413  #> BIGC670101.lag27 BIGC670101.lag28 BIGC670101.lag29 BIGC670101.lag30  #>        0.9987817        1.0008018        1.0376577        0.9536494  #>  CHAM810101.lag1  CHAM810101.lag2  CHAM810101.lag3  CHAM810101.lag4  #>        0.9927308        0.9615010        1.0668733        1.0353024  #>  CHAM810101.lag5  CHAM810101.lag6  CHAM810101.lag7  CHAM810101.lag8  #>        0.9916586        0.9749523        0.9871645        0.9444802  #>  CHAM810101.lag9 CHAM810101.lag10 CHAM810101.lag11 CHAM810101.lag12  #>        1.0291907        1.0194290        1.0607408        0.9999449  #> CHAM810101.lag13 CHAM810101.lag14 CHAM810101.lag15 CHAM810101.lag16  #>        0.9931695        0.9297656        0.9611833        0.9814565  #> CHAM810101.lag17 CHAM810101.lag18 CHAM810101.lag19 CHAM810101.lag20  #>        1.0321136        0.9892586        1.0563039        1.0206550  #> CHAM810101.lag21 CHAM810101.lag22 CHAM810101.lag23 CHAM810101.lag24  #>        0.9041110        0.9103649        0.9775755        1.0068787  #> CHAM810101.lag25 CHAM810101.lag26 CHAM810101.lag27 CHAM810101.lag28  #>        1.0079916        0.9596887        1.0191264        1.0140882  #> CHAM810101.lag29 CHAM810101.lag30  DAYM780201.lag1  DAYM780201.lag2  #>        0.9151374        0.9253788        0.9646010        1.0522299  #>  DAYM780201.lag3  DAYM780201.lag4  DAYM780201.lag5  DAYM780201.lag6  #>        1.0335338        1.1041881        0.9693172        1.0428607  #>  DAYM780201.lag7  DAYM780201.lag8  DAYM780201.lag9 DAYM780201.lag10  #>        1.1097225        0.9169442        0.9054205        0.9649199  #> DAYM780201.lag11 DAYM780201.lag12 DAYM780201.lag13 DAYM780201.lag14  #>        1.0263117        1.0189425        0.9578808        1.0286703  #> DAYM780201.lag15 DAYM780201.lag16 DAYM780201.lag17 DAYM780201.lag18  #>        1.0104818        1.0764483        0.9954050        0.9180787  #> DAYM780201.lag19 DAYM780201.lag20 DAYM780201.lag21 DAYM780201.lag22  #>        0.9481601        1.0128404        0.9719377        0.9898303  #> DAYM780201.lag23 DAYM780201.lag24 DAYM780201.lag25 DAYM780201.lag26  #>        0.9977120        0.9509454        1.0878960        1.0429411  #> DAYM780201.lag27 DAYM780201.lag28 DAYM780201.lag29 DAYM780201.lag30  #>        0.9938437        0.9506562        0.9532393        1.0463685   myprops <- data.frame(   AccNo = c(\"MyProp1\", \"MyProp2\", \"MyProp3\"),   A = c(0.62, -0.5, 15), R = c(-2.53, 3, 101),   N = c(-0.78, 0.2, 58), D = c(-0.9, 3, 59),   C = c(0.29, -1, 47), E = c(-0.74, 3, 73),   Q = c(-0.85, 0.2, 72), G = c(0.48, 0, 1),   H = c(-0.4, -0.5, 82), I = c(1.38, -1.8, 57),   L = c(1.06, -1.8, 57), K = c(-1.5, 3, 73),   M = c(0.64, -1.3, 75), F = c(1.19, -2.5, 91),   P = c(0.12, 0, 42), S = c(-0.18, 0.3, 31),   T = c(-0.05, -0.4, 45), W = c(0.81, -3.4, 130),   Y = c(0.26, -2.3, 107), V = c(1.08, -1.5, 43) )  # Use 4 properties in the AAindex database, and 3 cutomized properties extractGeary(   x,   customprops = myprops,   props = c(     \"CIDH920105\", \"BHAR880101\",     \"CHAM820101\", \"CHAM820102\",     \"MyProp1\", \"MyProp2\", \"MyProp3\"   ) ) #>  CIDH920105.lag1  CIDH920105.lag2  CIDH920105.lag3  CIDH920105.lag4  #>        0.9361830        1.0442920        1.0452843        1.0563467  #>  CIDH920105.lag5  CIDH920105.lag6  CIDH920105.lag7  CIDH920105.lag8  #>        0.9406031        1.0765517        1.0675786        0.9991363  #>  CIDH920105.lag9 CIDH920105.lag10 CIDH920105.lag11 CIDH920105.lag12  #>        1.0316555        0.9684585        0.9353130        1.0201990  #> CIDH920105.lag13 CIDH920105.lag14 CIDH920105.lag15 CIDH920105.lag16  #>        0.9340933        1.0207373        1.0251486        1.0290464  #> CIDH920105.lag17 CIDH920105.lag18 CIDH920105.lag19 CIDH920105.lag20  #>        1.0414375        0.9494403        0.9905987        0.9987183  #> CIDH920105.lag21 CIDH920105.lag22 CIDH920105.lag23 CIDH920105.lag24  #>        0.9472542        0.9010009        0.9828848        1.0574098  #> CIDH920105.lag25 CIDH920105.lag26 CIDH920105.lag27 CIDH920105.lag28  #>        0.9897955        1.0290018        0.9400066        1.0584150  #> CIDH920105.lag29 CIDH920105.lag30  BHAR880101.lag1  BHAR880101.lag2  #>        0.9762904        1.0029734        0.9818711        1.0051730  #>  BHAR880101.lag3  BHAR880101.lag4  BHAR880101.lag5  BHAR880101.lag6  #>        0.9967069        1.1012905        0.9595859        1.1337056  #>  BHAR880101.lag7  BHAR880101.lag8  BHAR880101.lag9 BHAR880101.lag10  #>        1.0628740        0.9497400        1.0338201        0.9023549  #> BHAR880101.lag11 BHAR880101.lag12 BHAR880101.lag13 BHAR880101.lag14  #>        0.9802386        1.0151581        0.9292786        1.0066693  #> BHAR880101.lag15 BHAR880101.lag16 BHAR880101.lag17 BHAR880101.lag18  #>        0.9856150        0.9759971        1.0232794        1.0687209  #> BHAR880101.lag19 BHAR880101.lag20 BHAR880101.lag21 BHAR880101.lag22  #>        1.0491804        1.0351528        1.0232000        0.9016895  #> BHAR880101.lag23 BHAR880101.lag24 BHAR880101.lag25 BHAR880101.lag26  #>        1.0391900        1.0301878        1.0021211        1.0222207  #> BHAR880101.lag27 BHAR880101.lag28 BHAR880101.lag29 BHAR880101.lag30  #>        0.9260382        1.0403725        0.9530778        0.9884374  #>  CHAM820101.lag1  CHAM820101.lag2  CHAM820101.lag3  CHAM820101.lag4  #>        1.0133839        1.0022438        1.0551890        1.0169637  #>  CHAM820101.lag5  CHAM820101.lag6  CHAM820101.lag7  CHAM820101.lag8  #>        0.9413192        0.9730229        0.9865679        0.9428985  #>  CHAM820101.lag9 CHAM820101.lag10 CHAM820101.lag11 CHAM820101.lag12  #>        0.9521705        1.0440834        0.9744226        0.9842079  #> CHAM820101.lag13 CHAM820101.lag14 CHAM820101.lag15 CHAM820101.lag16  #>        0.9375430        0.9847534        0.9762810        1.0337143  #> CHAM820101.lag17 CHAM820101.lag18 CHAM820101.lag19 CHAM820101.lag20  #>        1.0637944        0.9600194        1.0264610        0.9730978  #> CHAM820101.lag21 CHAM820101.lag22 CHAM820101.lag23 CHAM820101.lag24  #>        0.9841629        0.8944897        1.0012565        1.0407044  #> CHAM820101.lag25 CHAM820101.lag26 CHAM820101.lag27 CHAM820101.lag28  #>        0.9774393        0.9556452        0.9771782        0.9855390  #> CHAM820101.lag29 CHAM820101.lag30  CHAM820102.lag1  CHAM820102.lag2  #>        1.0378770        0.9705165        0.9503346        1.0343446  #>  CHAM820102.lag3  CHAM820102.lag4  CHAM820102.lag5  CHAM820102.lag6  #>        1.0930293        1.0805000        0.9861535        0.9921047  #>  CHAM820102.lag7  CHAM820102.lag8  CHAM820102.lag9 CHAM820102.lag10  #>        1.0083331        0.9676778        1.0545499        0.9671392  #> CHAM820102.lag11 CHAM820102.lag12 CHAM820102.lag13 CHAM820102.lag14  #>        1.0000784        0.9749532        0.9242556        1.0615438  #> CHAM820102.lag15 CHAM820102.lag16 CHAM820102.lag17 CHAM820102.lag18  #>        1.0210459        1.0068944        0.9859525        0.9524320  #> CHAM820102.lag19 CHAM820102.lag20 CHAM820102.lag21 CHAM820102.lag22  #>        1.0254189        1.0110984        1.0153212        1.0091916  #> CHAM820102.lag23 CHAM820102.lag24 CHAM820102.lag25 CHAM820102.lag26  #>        1.0471259        1.0112268        0.9833002        1.0031331  #> CHAM820102.lag27 CHAM820102.lag28 CHAM820102.lag29 CHAM820102.lag30  #>        0.9958332        1.0151695        0.9763861        0.9332919  #>     MyProp1.lag1     MyProp1.lag2     MyProp1.lag3     MyProp1.lag4  #>        0.9987014        1.0042430        0.9768573        1.0215035  #>     MyProp1.lag5     MyProp1.lag6     MyProp1.lag7     MyProp1.lag8  #>        0.9654430        1.0173820        0.9899070        1.0259654  #>     MyProp1.lag9    MyProp1.lag10    MyProp1.lag11    MyProp1.lag12  #>        1.0470257        0.9354884        0.9901335        1.0102046  #>    MyProp1.lag13    MyProp1.lag14    MyProp1.lag15    MyProp1.lag16  #>        0.9604603        0.9777933        0.9986361        0.9935197  #>    MyProp1.lag17    MyProp1.lag18    MyProp1.lag19    MyProp1.lag20  #>        0.9863639        1.0013734        0.9944359        1.0021568  #>    MyProp1.lag21    MyProp1.lag22    MyProp1.lag23    MyProp1.lag24  #>        1.0101742        0.9369555        0.9493721        1.0463017  #>    MyProp1.lag25    MyProp1.lag26    MyProp1.lag27    MyProp1.lag28  #>        1.0762954        0.9830056        0.9012154        1.0225609  #>    MyProp1.lag29    MyProp1.lag30     MyProp2.lag1     MyProp2.lag2  #>        0.9707321        0.9912091        0.9900593        1.0132171  #>     MyProp2.lag3     MyProp2.lag4     MyProp2.lag5     MyProp2.lag6  #>        0.9939543        1.0220681        0.9749927        1.1142163  #>     MyProp2.lag7     MyProp2.lag8     MyProp2.lag9    MyProp2.lag10  #>        0.9886743        1.0465832        1.0369295        0.9221438  #>    MyProp2.lag11    MyProp2.lag12    MyProp2.lag13    MyProp2.lag14  #>        0.9835647        1.0490332        0.9073427        1.0270654  #>    MyProp2.lag15    MyProp2.lag16    MyProp2.lag17    MyProp2.lag18  #>        1.0853336        0.9506871        0.9516677        0.9625250  #>    MyProp2.lag19    MyProp2.lag20    MyProp2.lag21    MyProp2.lag22  #>        1.0281791        0.9887198        0.9739604        0.9363962  #>    MyProp2.lag23    MyProp2.lag24    MyProp2.lag25    MyProp2.lag26  #>        0.9529674        1.0334644        1.0674287        1.0375601  #>    MyProp2.lag27    MyProp2.lag28    MyProp2.lag29    MyProp2.lag30  #>        0.9084307        1.0695042        0.9657679        0.9768113  #>     MyProp3.lag1     MyProp3.lag2     MyProp3.lag3     MyProp3.lag4  #>        1.0146280        0.9722862        1.0497983        1.0080631  #>     MyProp3.lag5     MyProp3.lag6     MyProp3.lag7     MyProp3.lag8  #>        0.9823002        0.9406788        0.9923895        0.9274328  #>     MyProp3.lag9    MyProp3.lag10    MyProp3.lag11    MyProp3.lag12  #>        0.9692848        1.0514912        1.0026759        0.9732718  #>    MyProp3.lag13    MyProp3.lag14    MyProp3.lag15    MyProp3.lag16  #>        0.9387388        0.9636088        0.9700880        1.0131516  #>    MyProp3.lag17    MyProp3.lag18    MyProp3.lag19    MyProp3.lag20  #>        1.0611696        0.9700136        1.0189479        0.9968361  #>    MyProp3.lag21    MyProp3.lag22    MyProp3.lag23    MyProp3.lag24  #>        0.9737338        0.9262255        1.0027198        1.0388112  #>    MyProp3.lag25    MyProp3.lag26    MyProp3.lag27    MyProp3.lag28  #>        0.9966404        0.9222564        0.9889491        1.0064019  #>    MyProp3.lag29    MyProp3.lag30  #>        1.0376997        0.9617269"},{"path":"https://nanx.me/protr/reference/extractMDSScales.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales-Based Descriptors derived by Multidimensional Scaling ‚Äî extractMDSScales","title":"Scales-Based Descriptors derived by Multidimensional Scaling ‚Äî extractMDSScales","text":"function calculates scales-based descriptors derived Multidimensional Scaling (MDS). Users can provide customized amino acid property matrices.","code":""},{"path":"https://nanx.me/protr/reference/extractMDSScales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales-Based Descriptors derived by Multidimensional Scaling ‚Äî extractMDSScales","text":"","code":"extractMDSScales(x, propmat, k, lag, scale = TRUE, silent = TRUE)"},{"path":"https://nanx.me/protr/reference/extractMDSScales.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales-Based Descriptors derived by Multidimensional Scaling ‚Äî extractMDSScales","text":"x character vector, input protein sequence. propmat matrix containing properties amino acids. row represent one amino acid type, column represents one property. Note one-letter row names must provided need seek properties AA type. k Integer. maximum dimension space data represented . Must greater number AA properties provided. lag lag parameter. Must less amino acids. scale Logical. auto-scale property matrix (propmat) MDS? Default TRUE. silent Logical. Whether print k eigenvalues computed scaling process . Default TRUE.","code":""},{"path":"https://nanx.me/protr/reference/extractMDSScales.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scales-Based Descriptors derived by Multidimensional Scaling ‚Äî extractMDSScales","text":"length lag * p^2 named vector, p number scales (dimensionality) selected.","code":""},{"path":"https://nanx.me/protr/reference/extractMDSScales.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Scales-Based Descriptors derived by Multidimensional Scaling ‚Äî extractMDSScales","text":"Venkatarajan, M. S., & Braun, W. (2001). New quantitative descriptors amino acids based multidimensional scaling large number physical-chemical properties. Molecular modeling annual, 7(12), 445--453.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/extractMDSScales.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scales-Based Descriptors derived by Multidimensional Scaling ‚Äî extractMDSScales","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/extractMDSScales.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scales-Based Descriptors derived by Multidimensional Scaling ‚Äî extractMDSScales","text":"","code":"x <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]] data(AATopo) tprops <- AATopo[, c(37:41, 43:47)] # select a set of topological descriptors mds <- extractMDSScales(x, propmat = tprops, k = 5, lag = 7, silent = FALSE) #> Eigenvalues computed during the scaling process:  #>  [1]  1.266223e+02  5.846270e+01  4.058692e+00  6.994430e-01  1.529469e-01 #>  [6]  3.434787e-03  4.284842e-04  4.918500e-05  3.626185e-06  3.042620e-10 #> [11]  2.295818e-15  1.850329e-15  1.455955e-15  1.208436e-15  6.929084e-16 #> [16]  5.639676e-16 -9.663800e-16 -1.207752e-15 -2.504939e-15 -3.313120e-15"},{"path":"https://nanx.me/protr/reference/extractMoran.html","id":null,"dir":"Reference","previous_headings":"","what":"Moran Autocorrelation Descriptor ‚Äî extractMoran","title":"Moran Autocorrelation Descriptor ‚Äî extractMoran","text":"function calculates Moran autocorrelation descriptor (dim: length(props) * nlag).","code":""},{"path":"https://nanx.me/protr/reference/extractMoran.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Moran Autocorrelation Descriptor ‚Äî extractMoran","text":"","code":"extractMoran(   x,   props = c(\"CIDH920105\", \"BHAR880101\", \"CHAM820101\", \"CHAM820102\", \"CHOC760101\",     \"BIGC670101\", \"CHAM810101\", \"DAYM780201\"),   nlag = 30L,   customprops = NULL )"},{"path":"https://nanx.me/protr/reference/extractMoran.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Moran Autocorrelation Descriptor ‚Äî extractMoran","text":"x character vector, input protein sequence. props character vector, specifying Accession Number target properties. 8 properties used default, listed : AccNo. CIDH920105 Normalized average hydrophobicity scales (Cid et al., 1992) AccNo. BHAR880101 Average flexibility indices (Bhaskaran-Ponnuswamy, 1988) AccNo. CHAM820101 Polarizability parameter (Charton-Charton, 1982) AccNo. CHAM820102 Free energy solution water, kcal/mole (Charton-Charton, 1982) AccNo. CHOC760101 Residue accessible surface area tripeptide (Chothia, 1976) AccNo. BIGC670101 Residue volume (Bigelow, 1967) AccNo. CHAM810101 Steric parameter (Charton, 1981) AccNo. DAYM780201 Relative mutability (Dayhoff et al., 1978b) nlag Maximum value lag parameter. Default 30. customprops n x 21 named data frame contains n customized property. row contains one property. column order different amino acid types 'AccNo', '', 'R', 'N', 'D', 'C', 'E', 'Q', 'G', 'H', '', 'L', 'K', 'M', 'F', 'P', 'S', 'T', 'W', 'Y', 'V', columns also exactly named like . AccNo column contains properties' names. users explicitly specify properties names argument props. See examples demonstration. default value customprops NULL.","code":""},{"path":"https://nanx.me/protr/reference/extractMoran.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Moran Autocorrelation Descriptor ‚Äî extractMoran","text":"length length(props) * nlag named vector.","code":""},{"path":"https://nanx.me/protr/reference/extractMoran.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Moran Autocorrelation Descriptor ‚Äî extractMoran","text":"descriptor type, users need intelligently evaluate underlying details descriptors provided, instead using function data blindly. wise use negative positive control comparisons relevant help guide interpretation results.","code":""},{"path":"https://nanx.me/protr/reference/extractMoran.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Moran Autocorrelation Descriptor ‚Äî extractMoran","text":"AAindex: Amino acid index database. https://www.genome.jp/dbget/aaindex.html Feng, Z.P. Zhang, C.T. (2000) Prediction membrane protein types based hydrophobic index amino acids. Journal Protein Chemistry, 19, 269-275. Horne, D.S. (1988) Prediction protein helix content autocorrelation analysis sequence hydrophobicities. Biopolymers, 27, 451-477. Sokal, R.R. Thomson, B.. (2006) Population structure inferred local spatial autocorrelation: usage Amerindian tribal population. American Journal Physical Anthropology, 129, 121-131.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/extractMoran.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Moran Autocorrelation Descriptor ‚Äî extractMoran","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/extractMoran.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Moran Autocorrelation Descriptor ‚Äî extractMoran","text":"","code":"x <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]] extractMoran(x) #>  CIDH920105.lag1  CIDH920105.lag2  CIDH920105.lag3  CIDH920105.lag4  #>     0.0628957240    -0.0448276812    -0.0450651172    -0.0559556782  #>  CIDH920105.lag5  CIDH920105.lag6  CIDH920105.lag7  CIDH920105.lag8  #>     0.0605863773    -0.0741284119    -0.0673088521    -0.0012933840  #>  CIDH920105.lag9 CIDH920105.lag10 CIDH920105.lag11 CIDH920105.lag12  #>    -0.0337475878     0.0293921932     0.0617898004    -0.0233684365  #> CIDH920105.lag13 CIDH920105.lag14 CIDH920105.lag15 CIDH920105.lag16  #>     0.0627694174    -0.0249122640    -0.0282980428    -0.0315840631  #> CIDH920105.lag17 CIDH920105.lag18 CIDH920105.lag19 CIDH920105.lag20  #>    -0.0434667300     0.0478306937     0.0058839009    -0.0017697691  #> CIDH920105.lag21 CIDH920105.lag22 CIDH920105.lag23 CIDH920105.lag24  #>     0.0493340478     0.0964279695     0.0151475944    -0.0600925088  #> CIDH920105.lag25 CIDH920105.lag26 CIDH920105.lag27 CIDH920105.lag28  #>     0.0075491522    -0.0339878848     0.0563076747    -0.0618444531  #> CIDH920105.lag29 CIDH920105.lag30  BHAR880101.lag1  BHAR880101.lag2  #>     0.0214847799    -0.0084617756     0.0142299506    -0.0091424191  #>  BHAR880101.lag3  BHAR880101.lag4  BHAR880101.lag5  BHAR880101.lag6  #>    -0.0032722616    -0.1096133317     0.0333462328    -0.1415385983  #>  BHAR880101.lag7  BHAR880101.lag8  BHAR880101.lag9 BHAR880101.lag10  #>    -0.0703941531     0.0409328968    -0.0436344551     0.0875104047  #> BHAR880101.lag11 BHAR880101.lag12 BHAR880101.lag13 BHAR880101.lag14  #>     0.0107143877    -0.0234509834     0.0634629637    -0.0136768674  #> BHAR880101.lag15 BHAR880101.lag16 BHAR880101.lag17 BHAR880101.lag18  #>     0.0077095251     0.0175920242    -0.0291658885    -0.0738567937  #> BHAR880101.lag19 BHAR880101.lag20 BHAR880101.lag21 BHAR880101.lag22  #>    -0.0565998559    -0.0418922713    -0.0292203651     0.0929470317  #> BHAR880101.lag23 BHAR880101.lag24 BHAR880101.lag25 BHAR880101.lag26  #>    -0.0436753428    -0.0335888211    -0.0056728997    -0.0254747391  #> BHAR880101.lag27 BHAR880101.lag28 BHAR880101.lag29 BHAR880101.lag30  #>     0.0688812089    -0.0459053364     0.0406307434     0.0014525774  #>  CHAM820101.lag1  CHAM820101.lag2  CHAM820101.lag3  CHAM820101.lag4  #>    -0.0139286496    -0.0031774785    -0.0561007348    -0.0165238751  #>  CHAM820101.lag5  CHAM820101.lag6  CHAM820101.lag7  CHAM820101.lag8  #>     0.0603640362     0.0264796116     0.0121346645     0.0507592124  #>  CHAM820101.lag9 CHAM820101.lag10 CHAM820101.lag11 CHAM820101.lag12  #>     0.0429513118    -0.0474984658     0.0218889871     0.0137500943  #> CHAM820101.lag13 CHAM820101.lag14 CHAM820101.lag15 CHAM820101.lag16  #>     0.0619880622     0.0163904824     0.0261899010    -0.0322412396  #> CHAM820101.lag17 CHAM820101.lag18 CHAM820101.lag19 CHAM820101.lag20  #>    -0.0639839388     0.0417769933    -0.0274431147     0.0277859179  #> CHAM820101.lag21 CHAM820101.lag22 CHAM820101.lag23 CHAM820101.lag24  #>     0.0176309571     0.1090112290     0.0025546785    -0.0352426985  #> CHAM820101.lag25 CHAM820101.lag26 CHAM820101.lag27 CHAM820101.lag28  #>     0.0274560224     0.0509827246     0.0281024830     0.0202381193  #> CHAM820101.lag29 CHAM820101.lag30  CHAM820102.lag1  CHAM820102.lag2  #>    -0.0349253902     0.0253187647     0.0472909282    -0.0365090783  #>  CHAM820102.lag3  CHAM820102.lag4  CHAM820102.lag5  CHAM820102.lag6  #>    -0.0938150715    -0.0795931788     0.0160017074     0.0101696097  #>  CHAM820102.lag7  CHAM820102.lag8  CHAM820102.lag9 CHAM820102.lag10  #>    -0.0046945877     0.0375211657    -0.0528134748     0.0319808011  #> CHAM820102.lag11 CHAM820102.lag12 CHAM820102.lag13 CHAM820102.lag14  #>    -0.0046958694     0.0221070009     0.0745338891    -0.0612460620  #> CHAM820102.lag15 CHAM820102.lag16 CHAM820102.lag17 CHAM820102.lag18  #>    -0.0235480177    -0.0080840950     0.0088808557     0.0442566241  #> CHAM820102.lag19 CHAM820102.lag20 CHAM820102.lag21 CHAM820102.lag22  #>    -0.0274928975    -0.0138698888    -0.0166914894    -0.0118719298  #> CHAM820102.lag23 CHAM820102.lag24 CHAM820102.lag25 CHAM820102.lag26  #>    -0.0485695652    -0.0107514909     0.0182771924    -0.0043974543  #> CHAM820102.lag27 CHAM820102.lag28 CHAM820102.lag29 CHAM820102.lag30  #>     0.0042313858    -0.0136384843     0.0257957985     0.0705161992  #>  CHOC760101.lag1  CHOC760101.lag2  CHOC760101.lag3  CHOC760101.lag4  #>    -0.0154525807     0.0265724188    -0.0498887566     0.0070961701  #>  CHOC760101.lag5  CHOC760101.lag6  CHOC760101.lag7  CHOC760101.lag8  #>     0.0522659111     0.0597617545     0.0412887124     0.0718808668  #>  CHOC760101.lag9 CHOC760101.lag10 CHOC760101.lag11 CHOC760101.lag12  #>     0.0366314578    -0.0459229502    -0.0181662006     0.0117017279  #> CHOC760101.lag13 CHOC760101.lag14 CHOC760101.lag15 CHOC760101.lag16  #>     0.0514381387     0.0509980646     0.0279388729    -0.0034876046  #> CHOC760101.lag17 CHOC760101.lag18 CHOC760101.lag19 CHOC760101.lag20  #>    -0.0660139718     0.0439281120    -0.0060162447    -0.0011672678  #> CHOC760101.lag21 CHOC760101.lag22 CHOC760101.lag23 CHOC760101.lag24  #>     0.0511767991     0.1040461988     0.0202167200    -0.0311304950  #> CHOC760101.lag25 CHOC760101.lag26 CHOC760101.lag27 CHOC760101.lag28  #>     0.0042916208     0.0726196884     0.0079204201    -0.0001472768  #> CHOC760101.lag29 CHOC760101.lag30  BIGC670101.lag1  BIGC670101.lag2  #>    -0.0398625971     0.0512999467    -0.0064385866     0.0069630946  #>  BIGC670101.lag3  BIGC670101.lag4  BIGC670101.lag5  BIGC670101.lag6  #>    -0.0732640757    -0.0063996223     0.0829841853     0.0343358031  #>  BIGC670101.lag7  BIGC670101.lag8  BIGC670101.lag9 BIGC670101.lag10  #>     0.0536729890     0.0434912759     0.0247346449    -0.0442464676  #> BIGC670101.lag11 BIGC670101.lag12 BIGC670101.lag13 BIGC670101.lag14  #>    -0.0053895870     0.0012486134     0.0556911451     0.0284974983  #> BIGC670101.lag15 BIGC670101.lag16 BIGC670101.lag17 BIGC670101.lag18  #>     0.0109559840    -0.0126063564    -0.0705594309     0.0601765018  #> BIGC670101.lag19 BIGC670101.lag20 BIGC670101.lag21 BIGC670101.lag22  #>    -0.0152546226     0.0379876110     0.0448148800     0.1131200658  #> BIGC670101.lag23 BIGC670101.lag24 BIGC670101.lag25 BIGC670101.lag26  #>     0.0121577357    -0.0400014448     0.0139723135     0.0470566766  #> BIGC670101.lag27 BIGC670101.lag28 BIGC670101.lag29 BIGC670101.lag30  #>     0.0038125395     0.0017197347    -0.0376829287     0.0420533380  #>  CHAM810101.lag1  CHAM810101.lag2  CHAM810101.lag3  CHAM810101.lag4  #>     0.0058275538     0.0385484463    -0.0657720156    -0.0330380580  #>  CHAM810101.lag5  CHAM810101.lag6  CHAM810101.lag7  CHAM810101.lag8  #>     0.0121334743     0.0305715775     0.0115838046     0.0540323736  #>  CHAM810101.lag9 CHAM810101.lag10 CHAM810101.lag11 CHAM810101.lag12  #>    -0.0293222565    -0.0197572361    -0.0597248427     0.0006635199  #> CHAM810101.lag13 CHAM810101.lag14 CHAM810101.lag15 CHAM810101.lag16  #>     0.0070016632     0.0699989710     0.0403018334     0.0154178230  #> CHAM810101.lag17 CHAM810101.lag18 CHAM810101.lag19 CHAM810101.lag20  #>    -0.0337609194     0.0103956917    -0.0612327500    -0.0250911500  #> CHAM810101.lag21 CHAM810101.lag22 CHAM810101.lag23 CHAM810101.lag24  #>     0.0930602757     0.0872294279     0.0215617322    -0.0060435428  #> CHAM810101.lag25 CHAM810101.lag26 CHAM810101.lag27 CHAM810101.lag28  #>    -0.0116253505     0.0360440638    -0.0280374803    -0.0233970031  #> CHAM810101.lag29 CHAM810101.lag30  DAYM780201.lag1  DAYM780201.lag2  #>     0.0712107443     0.0626072049     0.0348476917    -0.0521070043  #>  DAYM780201.lag3  DAYM780201.lag4  DAYM780201.lag5  DAYM780201.lag6  #>    -0.0325404884    -0.1049972273     0.0307503803    -0.0412446408  #>  DAYM780201.lag7  DAYM780201.lag8  DAYM780201.lag9 DAYM780201.lag10  #>    -0.1073630694     0.0839794772     0.0939770041     0.0327668798  #> DAYM780201.lag11 DAYM780201.lag12 DAYM780201.lag13 DAYM780201.lag14  #>    -0.0278279405    -0.0227529723     0.0387893928    -0.0312739026  #> DAYM780201.lag15 DAYM780201.lag16 DAYM780201.lag17 DAYM780201.lag18  #>    -0.0139690192    -0.0792258321     0.0022651525     0.0815660169  #> DAYM780201.lag19 DAYM780201.lag20 DAYM780201.lag21 DAYM780201.lag22  #>     0.0518317756    -0.0113828762     0.0295481744     0.0122838284  #> DAYM780201.lag23 DAYM780201.lag24 DAYM780201.lag25 DAYM780201.lag26  #>     0.0040764169     0.0521186819    -0.0844529172    -0.0405209150  #> DAYM780201.lag27 DAYM780201.lag28 DAYM780201.lag29 DAYM780201.lag30  #>     0.0099613021     0.0534887247     0.0521919187    -0.0428922743   myprops <- data.frame(   AccNo = c(\"MyProp1\", \"MyProp2\", \"MyProp3\"),   A = c(0.62, -0.5, 15), R = c(-2.53, 3, 101),   N = c(-0.78, 0.2, 58), D = c(-0.9, 3, 59),   C = c(0.29, -1, 47), E = c(-0.74, 3, 73),   Q = c(-0.85, 0.2, 72), G = c(0.48, 0, 1),   H = c(-0.4, -0.5, 82), I = c(1.38, -1.8, 57),   L = c(1.06, -1.8, 57), K = c(-1.5, 3, 73),   M = c(0.64, -1.3, 75), F = c(1.19, -2.5, 91),   P = c(0.12, 0, 42), S = c(-0.18, 0.3, 31),   T = c(-0.05, -0.4, 45), W = c(0.81, -3.4, 130),   Y = c(0.26, -2.3, 107), V = c(1.08, -1.5, 43) )  # Use 4 properties in the AAindex database, and 3 cutomized properties extractMoran(   x,   customprops = myprops,   props = c(     \"CIDH920105\", \"BHAR880101\",     \"CHAM820101\", \"CHAM820102\",     \"MyProp1\", \"MyProp2\", \"MyProp3\"   ) ) #>  CIDH920105.lag1  CIDH920105.lag2  CIDH920105.lag3  CIDH920105.lag4  #>     0.0628957240    -0.0448276812    -0.0450651172    -0.0559556782  #>  CIDH920105.lag5  CIDH920105.lag6  CIDH920105.lag7  CIDH920105.lag8  #>     0.0605863773    -0.0741284119    -0.0673088521    -0.0012933840  #>  CIDH920105.lag9 CIDH920105.lag10 CIDH920105.lag11 CIDH920105.lag12  #>    -0.0337475878     0.0293921932     0.0617898004    -0.0233684365  #> CIDH920105.lag13 CIDH920105.lag14 CIDH920105.lag15 CIDH920105.lag16  #>     0.0627694174    -0.0249122640    -0.0282980428    -0.0315840631  #> CIDH920105.lag17 CIDH920105.lag18 CIDH920105.lag19 CIDH920105.lag20  #>    -0.0434667300     0.0478306937     0.0058839009    -0.0017697691  #> CIDH920105.lag21 CIDH920105.lag22 CIDH920105.lag23 CIDH920105.lag24  #>     0.0493340478     0.0964279695     0.0151475944    -0.0600925088  #> CIDH920105.lag25 CIDH920105.lag26 CIDH920105.lag27 CIDH920105.lag28  #>     0.0075491522    -0.0339878848     0.0563076747    -0.0618444531  #> CIDH920105.lag29 CIDH920105.lag30  BHAR880101.lag1  BHAR880101.lag2  #>     0.0214847799    -0.0084617756     0.0142299506    -0.0091424191  #>  BHAR880101.lag3  BHAR880101.lag4  BHAR880101.lag5  BHAR880101.lag6  #>    -0.0032722616    -0.1096133317     0.0333462328    -0.1415385983  #>  BHAR880101.lag7  BHAR880101.lag8  BHAR880101.lag9 BHAR880101.lag10  #>    -0.0703941531     0.0409328968    -0.0436344551     0.0875104047  #> BHAR880101.lag11 BHAR880101.lag12 BHAR880101.lag13 BHAR880101.lag14  #>     0.0107143877    -0.0234509834     0.0634629637    -0.0136768674  #> BHAR880101.lag15 BHAR880101.lag16 BHAR880101.lag17 BHAR880101.lag18  #>     0.0077095251     0.0175920242    -0.0291658885    -0.0738567937  #> BHAR880101.lag19 BHAR880101.lag20 BHAR880101.lag21 BHAR880101.lag22  #>    -0.0565998559    -0.0418922713    -0.0292203651     0.0929470317  #> BHAR880101.lag23 BHAR880101.lag24 BHAR880101.lag25 BHAR880101.lag26  #>    -0.0436753428    -0.0335888211    -0.0056728997    -0.0254747391  #> BHAR880101.lag27 BHAR880101.lag28 BHAR880101.lag29 BHAR880101.lag30  #>     0.0688812089    -0.0459053364     0.0406307434     0.0014525774  #>  CHAM820101.lag1  CHAM820101.lag2  CHAM820101.lag3  CHAM820101.lag4  #>    -0.0139286496    -0.0031774785    -0.0561007348    -0.0165238751  #>  CHAM820101.lag5  CHAM820101.lag6  CHAM820101.lag7  CHAM820101.lag8  #>     0.0603640362     0.0264796116     0.0121346645     0.0507592124  #>  CHAM820101.lag9 CHAM820101.lag10 CHAM820101.lag11 CHAM820101.lag12  #>     0.0429513118    -0.0474984658     0.0218889871     0.0137500943  #> CHAM820101.lag13 CHAM820101.lag14 CHAM820101.lag15 CHAM820101.lag16  #>     0.0619880622     0.0163904824     0.0261899010    -0.0322412396  #> CHAM820101.lag17 CHAM820101.lag18 CHAM820101.lag19 CHAM820101.lag20  #>    -0.0639839388     0.0417769933    -0.0274431147     0.0277859179  #> CHAM820101.lag21 CHAM820101.lag22 CHAM820101.lag23 CHAM820101.lag24  #>     0.0176309571     0.1090112290     0.0025546785    -0.0352426985  #> CHAM820101.lag25 CHAM820101.lag26 CHAM820101.lag27 CHAM820101.lag28  #>     0.0274560224     0.0509827246     0.0281024830     0.0202381193  #> CHAM820101.lag29 CHAM820101.lag30  CHAM820102.lag1  CHAM820102.lag2  #>    -0.0349253902     0.0253187647     0.0472909282    -0.0365090783  #>  CHAM820102.lag3  CHAM820102.lag4  CHAM820102.lag5  CHAM820102.lag6  #>    -0.0938150715    -0.0795931788     0.0160017074     0.0101696097  #>  CHAM820102.lag7  CHAM820102.lag8  CHAM820102.lag9 CHAM820102.lag10  #>    -0.0046945877     0.0375211657    -0.0528134748     0.0319808011  #> CHAM820102.lag11 CHAM820102.lag12 CHAM820102.lag13 CHAM820102.lag14  #>    -0.0046958694     0.0221070009     0.0745338891    -0.0612460620  #> CHAM820102.lag15 CHAM820102.lag16 CHAM820102.lag17 CHAM820102.lag18  #>    -0.0235480177    -0.0080840950     0.0088808557     0.0442566241  #> CHAM820102.lag19 CHAM820102.lag20 CHAM820102.lag21 CHAM820102.lag22  #>    -0.0274928975    -0.0138698888    -0.0166914894    -0.0118719298  #> CHAM820102.lag23 CHAM820102.lag24 CHAM820102.lag25 CHAM820102.lag26  #>    -0.0485695652    -0.0107514909     0.0182771924    -0.0043974543  #> CHAM820102.lag27 CHAM820102.lag28 CHAM820102.lag29 CHAM820102.lag30  #>     0.0042313858    -0.0136384843     0.0257957985     0.0705161992  #>     MyProp1.lag1     MyProp1.lag2     MyProp1.lag3     MyProp1.lag4  #>     0.0008415542    -0.0089826237     0.0193940285    -0.0244422592  #>     MyProp1.lag5     MyProp1.lag6     MyProp1.lag7     MyProp1.lag8  #>     0.0310193180    -0.0301557793    -0.0029608325    -0.0390960674  #>     MyProp1.lag9    MyProp1.lag10    MyProp1.lag11    MyProp1.lag12  #>    -0.0591531134     0.0531417370    -0.0010627092    -0.0209697065  #>    MyProp1.lag13    MyProp1.lag14    MyProp1.lag15    MyProp1.lag16  #>     0.0295367516     0.0116742692    -0.0093957053    -0.0027183836  #>    MyProp1.lag17    MyProp1.lag18    MyProp1.lag19    MyProp1.lag20  #>     0.0057604102    -0.0098153866    -0.0027265839    -0.0098448511  #>    MyProp1.lag21    MyProp1.lag22    MyProp1.lag23    MyProp1.lag24  #>    -0.0172425572     0.0572658534     0.0447406380    -0.0516721832  #>    MyProp1.lag25    MyProp1.lag26    MyProp1.lag27    MyProp1.lag28  #>    -0.0805627707     0.0127246860     0.0961473917    -0.0251347343  #>    MyProp1.lag29    MyProp1.lag30     MyProp2.lag1     MyProp2.lag2  #>     0.0226862280     0.0018843110     0.0094920511    -0.0169857388  #>     MyProp2.lag3     MyProp2.lag4     MyProp2.lag5     MyProp2.lag6  #>     0.0035609325    -0.0232931717     0.0205684755    -0.1222127965  #>     MyProp2.lag7     MyProp2.lag8     MyProp2.lag9    MyProp2.lag10  #>     0.0044370014    -0.0559435951    -0.0473222323     0.0682730086  #>    MyProp2.lag11    MyProp2.lag12    MyProp2.lag13    MyProp2.lag14  #>     0.0064153700    -0.0582942109     0.0844962043    -0.0351822588  #>    MyProp2.lag15    MyProp2.lag16    MyProp2.lag17    MyProp2.lag18  #>    -0.0946131823     0.0420472336     0.0413090619     0.0309780970  #>    MyProp2.lag19    MyProp2.lag20    MyProp2.lag21    MyProp2.lag22  #>    -0.0347529408     0.0059692058     0.0219243377     0.0587756605  #>    MyProp2.lag23    MyProp2.lag24    MyProp2.lag25    MyProp2.lag26  #>     0.0413646875    -0.0374497592    -0.0722582273    -0.0417029870  #>    MyProp2.lag27    MyProp2.lag28    MyProp2.lag29    MyProp2.lag30  #>     0.0894505412    -0.0710519977     0.0320843436     0.0176801053  #>     MyProp3.lag1     MyProp3.lag2     MyProp3.lag3     MyProp3.lag4  #>    -0.0151909325     0.0270495815    -0.0507840359    -0.0075348884  #>     MyProp3.lag5     MyProp3.lag6     MyProp3.lag7     MyProp3.lag8  #>     0.0197836987     0.0593447616     0.0064005884     0.0679328466  #>     MyProp3.lag9    MyProp3.lag10    MyProp3.lag11    MyProp3.lag12  #>     0.0277213330    -0.0529023740    -0.0049029722     0.0263659265  #>    MyProp3.lag13    MyProp3.lag14    MyProp3.lag15    MyProp3.lag16  #>     0.0626646373     0.0394133147     0.0343934904    -0.0100172766  #>    MyProp3.lag17    MyProp3.lag18    MyProp3.lag19    MyProp3.lag20  #>    -0.0605245713     0.0323015699    -0.0191015693     0.0045343719  #>    MyProp3.lag21    MyProp3.lag22    MyProp3.lag23    MyProp3.lag24  #>     0.0287396054     0.0779873138     0.0023063774    -0.0324932490  #>    MyProp3.lag25    MyProp3.lag26    MyProp3.lag27    MyProp3.lag28  #>     0.0082948913     0.0846071851     0.0159416525    -0.0013589449  #>    MyProp3.lag29    MyProp3.lag30  #>    -0.0359451704     0.0352374621"},{"path":"https://nanx.me/protr/reference/extractMoreauBroto.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalized Moreau-Broto Autocorrelation Descriptor ‚Äî extractMoreauBroto","title":"Normalized Moreau-Broto Autocorrelation Descriptor ‚Äî extractMoreauBroto","text":"function calculates normalized Moreau-Broto autocorrelation descriptor (dim: length(props) * nlag).","code":""},{"path":"https://nanx.me/protr/reference/extractMoreauBroto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalized Moreau-Broto Autocorrelation Descriptor ‚Äî extractMoreauBroto","text":"","code":"extractMoreauBroto(   x,   props = c(\"CIDH920105\", \"BHAR880101\", \"CHAM820101\", \"CHAM820102\", \"CHOC760101\",     \"BIGC670101\", \"CHAM810101\", \"DAYM780201\"),   nlag = 30L,   customprops = NULL )"},{"path":"https://nanx.me/protr/reference/extractMoreauBroto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalized Moreau-Broto Autocorrelation Descriptor ‚Äî extractMoreauBroto","text":"x character vector, input protein sequence. props character vector, specifying Accession Number target properties. 8 properties used default, listed : AccNo. CIDH920105 Normalized average hydrophobicity scales (Cid et al., 1992) AccNo. BHAR880101 Average flexibility indices (Bhaskaran-Ponnuswamy, 1988) AccNo. CHAM820101 Polarizability parameter (Charton-Charton, 1982) AccNo. CHAM820102 Free energy solution water, kcal/mole (Charton-Charton, 1982) AccNo. CHOC760101 Residue accessible surface area tripeptide (Chothia, 1976) AccNo. BIGC670101 Residue volume (Bigelow, 1967) AccNo. CHAM810101 Steric parameter (Charton, 1981) AccNo. DAYM780201 Relative mutability (Dayhoff et al., 1978b) nlag Maximum value lag parameter. Default 30. customprops n x 21 named data frame contains n customized property. row contains one property. column order different amino acid types 'AccNo', '', 'R', 'N', 'D', 'C', 'E', 'Q', 'G', 'H', '', 'L', 'K', 'M', 'F', 'P', 'S', 'T', 'W', 'Y', 'V', columns also exactly named like . AccNo column contains properties' names. users explicitly specify properties names argument props. See examples demonstration. default value customprops NULL.","code":""},{"path":"https://nanx.me/protr/reference/extractMoreauBroto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalized Moreau-Broto Autocorrelation Descriptor ‚Äî extractMoreauBroto","text":"length length(props) * nlag named vector.","code":""},{"path":"https://nanx.me/protr/reference/extractMoreauBroto.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Normalized Moreau-Broto Autocorrelation Descriptor ‚Äî extractMoreauBroto","text":"descriptor type, users need intelligently evaluate underlying details descriptors provided, instead using function data blindly. wise use negative positive control comparisons relevant help guide interpretation results.","code":""},{"path":"https://nanx.me/protr/reference/extractMoreauBroto.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Normalized Moreau-Broto Autocorrelation Descriptor ‚Äî extractMoreauBroto","text":"AAindex: Amino acid index database. https://www.genome.jp/dbget/aaindex.html Feng, Z.P. Zhang, C.T. (2000) Prediction membrane protein types based hydrophobic index amino acids. Journal Protein Chemistry, 19, 269-275. Horne, D.S. (1988) Prediction protein helix content autocorrelation analysis sequence hydrophobicities. Biopolymers, 27, 451-477. Sokal, R.R. Thomson, B.. (2006) Population structure inferred local spatial autocorrelation: usage Amerindian tribal population. American Journal Physical Anthropology, 129, 121-131.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/extractMoreauBroto.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Normalized Moreau-Broto Autocorrelation Descriptor ‚Äî extractMoreauBroto","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/extractMoreauBroto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalized Moreau-Broto Autocorrelation Descriptor ‚Äî extractMoreauBroto","text":"","code":"x <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]] extractMoreauBroto(x) #>  CIDH920105.lag1  CIDH920105.lag2  CIDH920105.lag3  CIDH920105.lag4  #>     0.0815732133    -0.0160648174    -0.0159829904    -0.0257390382  #>  CIDH920105.lag5  CIDH920105.lag6  CIDH920105.lag7  CIDH920105.lag8  #>     0.0790586315    -0.0427715642    -0.0363208474     0.0240872979  #>  CIDH920105.lag9 CIDH920105.lag10 CIDH920105.lag11 CIDH920105.lag12  #>    -0.0052739581     0.0522747633     0.0821700727     0.0054199194  #> CIDH920105.lag13 CIDH920105.lag14 CIDH920105.lag15 CIDH920105.lag16  #>     0.0832920420     0.0048105844     0.0018724459    -0.0015314949  #> CIDH920105.lag17 CIDH920105.lag18 CIDH920105.lag19 CIDH920105.lag20  #>    -0.0119172298     0.0711615515     0.0334731970     0.0268827371  #> CIDH920105.lag21 CIDH920105.lag22 CIDH920105.lag23 CIDH920105.lag24  #>     0.0730754025     0.1152727902     0.0415178971    -0.0270259935  #> CIDH920105.lag25 CIDH920105.lag26 CIDH920105.lag27 CIDH920105.lag28  #>     0.0334773885    -0.0032452554     0.0781170097    -0.0281773044  #> CIDH920105.lag29 CIDH920105.lag30  BHAR880101.lag1  BHAR880101.lag2  #>     0.0466958316     0.0205844229     0.0527401854     0.0308047839  #>  BHAR880101.lag3  BHAR880101.lag4  BHAR880101.lag5  BHAR880101.lag6  #>     0.0371704765    -0.0589937709     0.0706417797    -0.0891924896  #>  BHAR880101.lag7  BHAR880101.lag8  BHAR880101.lag9 BHAR880101.lag10  #>    -0.0250116770     0.0772066744     0.0004128900     0.1204805000  #> BHAR880101.lag11 BHAR880101.lag12 BHAR880101.lag13 BHAR880101.lag14  #>     0.0509849257     0.0201691686     0.0995728530     0.0300147455  #> BHAR880101.lag15 BHAR880101.lag16 BHAR880101.lag17 BHAR880101.lag18  #>     0.0498042465     0.0583394457     0.0163037586    -0.0238273902  #> BHAR880101.lag19 BHAR880101.lag20 BHAR880101.lag21 BHAR880101.lag22  #>    -0.0079979442     0.0053454569     0.0168461601     0.1273660714  #> BHAR880101.lag23 BHAR880101.lag24 BHAR880101.lag25 BHAR880101.lag26  #>     0.0027032426     0.0114257285     0.0361125892     0.0184603852  #> BHAR880101.lag27 BHAR880101.lag28 BHAR880101.lag29 BHAR880101.lag30  #>     0.1043763864     0.0007239825     0.0785798249     0.0441787732  #>  CHAM820101.lag1  CHAM820101.lag2  CHAM820101.lag3  CHAM820101.lag4  #>     0.0402914791     0.0509190298     0.0003191642     0.0382348124  #>  CHAM820101.lag5  CHAM820101.lag6  CHAM820101.lag7  CHAM820101.lag8  #>     0.1115655979     0.0804809766     0.0662847280     0.1043484094  #>  CHAM820101.lag9 CHAM820101.lag10 CHAM820101.lag11 CHAM820101.lag12  #>     0.0965864268     0.0104393823     0.0771302234     0.0694358265  #> CHAM820101.lag13 CHAM820101.lag14 CHAM820101.lag15 CHAM820101.lag16  #>     0.1153418895     0.0719840830     0.0815014995     0.0249470985  #> CHAM820101.lag17 CHAM820101.lag18 CHAM820101.lag19 CHAM820101.lag20  #>    -0.0051303589     0.0955190334     0.0294926740     0.0819546959  #> CHAM820101.lag21 CHAM820101.lag22 CHAM820101.lag23 CHAM820101.lag24  #>     0.0718091972     0.1585565524     0.0570087108     0.0212347920  #> CHAM820101.lag25 CHAM820101.lag26 CHAM820101.lag27 CHAM820101.lag28  #>     0.0802680867     0.1027146710     0.0805639966     0.0727280718  #> CHAM820101.lag29 CHAM820101.lag30  CHAM820102.lag1  CHAM820102.lag2  #>     0.0200935953     0.0792806714     0.0559510874    -0.0371312478  #>  CHAM820102.lag3  CHAM820102.lag4  CHAM820102.lag5  CHAM820102.lag6  #>    -0.1008389187    -0.0850866949     0.0211270697     0.0144295803  #>  CHAM820102.lag7  CHAM820102.lag8  CHAM820102.lag9 CHAM820102.lag10  #>    -0.0021463334     0.0448267271    -0.0551462283     0.0393078369  #> CHAM820102.lag11 CHAM820102.lag12 CHAM820102.lag13 CHAM820102.lag14  #>    -0.0011570548     0.0285952757     0.0868045777    -0.0639745278  #> CHAM820102.lag15 CHAM820102.lag16 CHAM820102.lag17 CHAM820102.lag18  #>    -0.0218915338    -0.0048382125     0.0142212048     0.0534766640  #> CHAM820102.lag19 CHAM820102.lag20 CHAM820102.lag21 CHAM820102.lag22  #>    -0.0262550668    -0.0113355899    -0.0145637771    -0.0093101993  #> CHAM820102.lag23 CHAM820102.lag24 CHAM820102.lag25 CHAM820102.lag26  #>    -0.0501876542    -0.0081765411     0.0240587071    -0.0008479999  #> CHAM820102.lag27 CHAM820102.lag28 CHAM820102.lag29 CHAM820102.lag30  #>     0.0086116560    -0.0112736518     0.0323259666     0.0820847694  #>  CHOC760101.lag1  CHOC760101.lag2  CHOC760101.lag3  CHOC760101.lag4  #>     0.0405905922     0.0866513565     0.0036481558     0.0656100854  #>  CHOC760101.lag5  CHOC760101.lag6  CHOC760101.lag7  CHOC760101.lag8  #>     0.1148283150     0.1242596949     0.1035491193     0.1377445600  #>  CHOC760101.lag9 CHOC760101.lag10 CHOC760101.lag11 CHOC760101.lag12  #>     0.0992199598     0.0096695768     0.0403935240     0.0728444373  #> CHOC760101.lag13 CHOC760101.lag14 CHOC760101.lag15 CHOC760101.lag16  #>     0.1157779863     0.1153565887     0.0905431498     0.0554345662  #> CHOC760101.lag17 CHOC760101.lag18 CHOC760101.lag19 CHOC760101.lag20  #>    -0.0120171188     0.1069421049     0.0524964371     0.0575422719  #> CHOC760101.lag21 CHOC760101.lag22 CHOC760101.lag23 CHOC760101.lag24  #>     0.1137097443     0.1707042512     0.0798708363     0.0246830976  #> CHOC760101.lag25 CHOC760101.lag26 CHOC760101.lag27 CHOC760101.lag28  #>     0.0624683513     0.1363579086     0.0657677390     0.0566614434  #> CHOC760101.lag29 CHOC760101.lag30  BIGC670101.lag1  BIGC670101.lag2  #>     0.0134396647     0.1136908746     0.0482503970     0.0626531682  #>  BIGC670101.lag3  BIGC670101.lag4  BIGC670101.lag5  BIGC670101.lag6  #>    -0.0221676356     0.0485490385     0.1430184324     0.0927013709  #>  BIGC670101.lag7  BIGC670101.lag8  BIGC670101.lag9 BIGC670101.lag10  #>     0.1126752687     0.1032724958     0.0830421066     0.0104383234  #> BIGC670101.lag11 BIGC670101.lag12 BIGC670101.lag13 BIGC670101.lag14  #>     0.0521201046     0.0594031870     0.1170240612     0.0887964883  #> BIGC670101.lag15 BIGC670101.lag16 BIGC670101.lag17 BIGC670101.lag18  #>     0.0705042458     0.0446771931    -0.0163190393     0.1217130911  #> BIGC670101.lag19 BIGC670101.lag20 BIGC670101.lag21 BIGC670101.lag22  #>     0.0419479405     0.0980426282     0.1048455726     0.1765216872  #> BIGC670101.lag23 BIGC670101.lag24 BIGC670101.lag25 BIGC670101.lag26  #>     0.0700049458     0.0153129973     0.0714880053     0.1065325614  #> BIGC670101.lag27 BIGC670101.lag28 BIGC670101.lag29 BIGC670101.lag30  #>     0.0603040957     0.0579595967     0.0160958309     0.1018004242  #>  CHAM810101.lag1  CHAM810101.lag2  CHAM810101.lag3  CHAM810101.lag4  #>     0.0336582619     0.0768816461    -0.0599788818    -0.0165980568  #>  CHAM810101.lag5  CHAM810101.lag6  CHAM810101.lag7  CHAM810101.lag8  #>     0.0429718281     0.0673389846     0.0421045405     0.0984370308  #>  CHAM810101.lag9 CHAM810101.lag10 CHAM810101.lag11 CHAM810101.lag12  #>    -0.0107870954     0.0022714240    -0.0498852163     0.0300882395  #> CHAM810101.lag13 CHAM810101.lag14 CHAM810101.lag15 CHAM810101.lag16  #>     0.0387472582     0.1221498843     0.0832547010     0.0495440126  #> CHAM810101.lag17 CHAM810101.lag18 CHAM810101.lag19 CHAM810101.lag20  #>    -0.0150392658     0.0433233262    -0.0514696899    -0.0041985660  #> CHAM810101.lag21 CHAM810101.lag22 CHAM810101.lag23 CHAM810101.lag24  #>     0.1509675378     0.1431415671     0.0568977126     0.0208331387  #> CHAM810101.lag25 CHAM810101.lag26 CHAM810101.lag27 CHAM810101.lag28  #>     0.0126989347     0.0758494612    -0.0090505328    -0.0025842330  #> CHAM810101.lag29 CHAM810101.lag30  DAYM780201.lag1  DAYM780201.lag2  #>     0.1207908561     0.1097271517     0.0353752476    -0.0528898399  #>  DAYM780201.lag3  DAYM780201.lag4  DAYM780201.lag5  DAYM780201.lag6  #>    -0.0330341277    -0.1065893925     0.0311981960    -0.0418778271  #>  DAYM780201.lag7  DAYM780201.lag8  DAYM780201.lag9 DAYM780201.lag10  #>    -0.1089904972     0.0852394910     0.0953896503     0.0332684150  #> DAYM780201.lag11 DAYM780201.lag12 DAYM780201.lag13 DAYM780201.lag14  #>    -0.0282342477    -0.0230859056     0.0393831567    -0.0317302547  #> DAYM780201.lag15 DAYM780201.lag16 DAYM780201.lag17 DAYM780201.lag18  #>    -0.0141572674    -0.0803954072     0.0023218905     0.0828153550  #> DAYM780201.lag19 DAYM780201.lag20 DAYM780201.lag21 DAYM780201.lag22  #>     0.0526402680    -0.0115232021     0.0300182536     0.0124926089  #> DAYM780201.lag23 DAYM780201.lag24 DAYM780201.lag25 DAYM780201.lag26  #>     0.0041585424     0.0529190142    -0.0857070549    -0.0411108131  #> DAYM780201.lag27 DAYM780201.lag28 DAYM780201.lag29 DAYM780201.lag30  #>     0.0101342845     0.0543171778     0.0530046312    -0.0434996151   myprops <- data.frame(   AccNo = c(\"MyProp1\", \"MyProp2\", \"MyProp3\"),   A = c(0.62, -0.5, 15), R = c(-2.53, 3, 101),   N = c(-0.78, 0.2, 58), D = c(-0.9, 3, 59),   C = c(0.29, -1, 47), E = c(-0.74, 3, 73),   Q = c(-0.85, 0.2, 72), G = c(0.48, 0, 1),   H = c(-0.4, -0.5, 82), I = c(1.38, -1.8, 57),   L = c(1.06, -1.8, 57), K = c(-1.5, 3, 73),   M = c(0.64, -1.3, 75), F = c(1.19, -2.5, 91),   P = c(0.12, 0, 42), S = c(-0.18, 0.3, 31),   T = c(-0.05, -0.4, 45), W = c(0.81, -3.4, 130),   Y = c(0.26, -2.3, 107), V = c(1.08, -1.5, 43) )  # Use 4 properties in the AAindex database, and 3 cutomized properties extractMoreauBroto(   x,   customprops = myprops,   props = c(     \"CIDH920105\", \"BHAR880101\",     \"CHAM820101\", \"CHAM820102\",     \"MyProp1\", \"MyProp2\", \"MyProp3\"   ) ) #>  CIDH920105.lag1  CIDH920105.lag2  CIDH920105.lag3  CIDH920105.lag4  #>     0.0815732133    -0.0160648174    -0.0159829904    -0.0257390382  #>  CIDH920105.lag5  CIDH920105.lag6  CIDH920105.lag7  CIDH920105.lag8  #>     0.0790586315    -0.0427715642    -0.0363208474     0.0240872979  #>  CIDH920105.lag9 CIDH920105.lag10 CIDH920105.lag11 CIDH920105.lag12  #>    -0.0052739581     0.0522747633     0.0821700727     0.0054199194  #> CIDH920105.lag13 CIDH920105.lag14 CIDH920105.lag15 CIDH920105.lag16  #>     0.0832920420     0.0048105844     0.0018724459    -0.0015314949  #> CIDH920105.lag17 CIDH920105.lag18 CIDH920105.lag19 CIDH920105.lag20  #>    -0.0119172298     0.0711615515     0.0334731970     0.0268827371  #> CIDH920105.lag21 CIDH920105.lag22 CIDH920105.lag23 CIDH920105.lag24  #>     0.0730754025     0.1152727902     0.0415178971    -0.0270259935  #> CIDH920105.lag25 CIDH920105.lag26 CIDH920105.lag27 CIDH920105.lag28  #>     0.0334773885    -0.0032452554     0.0781170097    -0.0281773044  #> CIDH920105.lag29 CIDH920105.lag30  BHAR880101.lag1  BHAR880101.lag2  #>     0.0466958316     0.0205844229     0.0527401854     0.0308047839  #>  BHAR880101.lag3  BHAR880101.lag4  BHAR880101.lag5  BHAR880101.lag6  #>     0.0371704765    -0.0589937709     0.0706417797    -0.0891924896  #>  BHAR880101.lag7  BHAR880101.lag8  BHAR880101.lag9 BHAR880101.lag10  #>    -0.0250116770     0.0772066744     0.0004128900     0.1204805000  #> BHAR880101.lag11 BHAR880101.lag12 BHAR880101.lag13 BHAR880101.lag14  #>     0.0509849257     0.0201691686     0.0995728530     0.0300147455  #> BHAR880101.lag15 BHAR880101.lag16 BHAR880101.lag17 BHAR880101.lag18  #>     0.0498042465     0.0583394457     0.0163037586    -0.0238273902  #> BHAR880101.lag19 BHAR880101.lag20 BHAR880101.lag21 BHAR880101.lag22  #>    -0.0079979442     0.0053454569     0.0168461601     0.1273660714  #> BHAR880101.lag23 BHAR880101.lag24 BHAR880101.lag25 BHAR880101.lag26  #>     0.0027032426     0.0114257285     0.0361125892     0.0184603852  #> BHAR880101.lag27 BHAR880101.lag28 BHAR880101.lag29 BHAR880101.lag30  #>     0.1043763864     0.0007239825     0.0785798249     0.0441787732  #>  CHAM820101.lag1  CHAM820101.lag2  CHAM820101.lag3  CHAM820101.lag4  #>     0.0402914791     0.0509190298     0.0003191642     0.0382348124  #>  CHAM820101.lag5  CHAM820101.lag6  CHAM820101.lag7  CHAM820101.lag8  #>     0.1115655979     0.0804809766     0.0662847280     0.1043484094  #>  CHAM820101.lag9 CHAM820101.lag10 CHAM820101.lag11 CHAM820101.lag12  #>     0.0965864268     0.0104393823     0.0771302234     0.0694358265  #> CHAM820101.lag13 CHAM820101.lag14 CHAM820101.lag15 CHAM820101.lag16  #>     0.1153418895     0.0719840830     0.0815014995     0.0249470985  #> CHAM820101.lag17 CHAM820101.lag18 CHAM820101.lag19 CHAM820101.lag20  #>    -0.0051303589     0.0955190334     0.0294926740     0.0819546959  #> CHAM820101.lag21 CHAM820101.lag22 CHAM820101.lag23 CHAM820101.lag24  #>     0.0718091972     0.1585565524     0.0570087108     0.0212347920  #> CHAM820101.lag25 CHAM820101.lag26 CHAM820101.lag27 CHAM820101.lag28  #>     0.0802680867     0.1027146710     0.0805639966     0.0727280718  #> CHAM820101.lag29 CHAM820101.lag30  CHAM820102.lag1  CHAM820102.lag2  #>     0.0200935953     0.0792806714     0.0559510874    -0.0371312478  #>  CHAM820102.lag3  CHAM820102.lag4  CHAM820102.lag5  CHAM820102.lag6  #>    -0.1008389187    -0.0850866949     0.0211270697     0.0144295803  #>  CHAM820102.lag7  CHAM820102.lag8  CHAM820102.lag9 CHAM820102.lag10  #>    -0.0021463334     0.0448267271    -0.0551462283     0.0393078369  #> CHAM820102.lag11 CHAM820102.lag12 CHAM820102.lag13 CHAM820102.lag14  #>    -0.0011570548     0.0285952757     0.0868045777    -0.0639745278  #> CHAM820102.lag15 CHAM820102.lag16 CHAM820102.lag17 CHAM820102.lag18  #>    -0.0218915338    -0.0048382125     0.0142212048     0.0534766640  #> CHAM820102.lag19 CHAM820102.lag20 CHAM820102.lag21 CHAM820102.lag22  #>    -0.0262550668    -0.0113355899    -0.0145637771    -0.0093101993  #> CHAM820102.lag23 CHAM820102.lag24 CHAM820102.lag25 CHAM820102.lag26  #>    -0.0501876542    -0.0081765411     0.0240587071    -0.0008479999  #> CHAM820102.lag27 CHAM820102.lag28 CHAM820102.lag29 CHAM820102.lag30  #>     0.0086116560    -0.0112736518     0.0323259666     0.0820847694  #>     MyProp1.lag1     MyProp1.lag2     MyProp1.lag3     MyProp1.lag4  #>     0.0044703600    -0.0062870562     0.0238983984    -0.0225055650  #>     MyProp1.lag5     MyProp1.lag6     MyProp1.lag7     MyProp1.lag8  #>     0.0359522081    -0.0293415657    -0.0003415486    -0.0383751505  #>     MyProp1.lag9    MyProp1.lag10    MyProp1.lag11    MyProp1.lag12  #>    -0.0596607723     0.0593640172     0.0021474999    -0.0188810821  #>    MyProp1.lag13    MyProp1.lag14    MyProp1.lag15    MyProp1.lag16  #>     0.0347042328     0.0160458722    -0.0063777545     0.0007508700  #>    MyProp1.lag17    MyProp1.lag18    MyProp1.lag19    MyProp1.lag20  #>     0.0098366107    -0.0063966647     0.0013069791    -0.0060794657  #>    MyProp1.lag21    MyProp1.lag22    MyProp1.lag23    MyProp1.lag24  #>    -0.0137947448     0.0650001814     0.0515679170    -0.0506629238  #>    MyProp1.lag25    MyProp1.lag26    MyProp1.lag27    MyProp1.lag28  #>    -0.0812591660     0.0176890750     0.1060161122    -0.0221568848  #>    MyProp1.lag29    MyProp1.lag30     MyProp2.lag1     MyProp2.lag2  #>     0.0282438495     0.0064671140     0.0208782973    -0.0037336821  #>     MyProp2.lag3     MyProp2.lag4     MyProp2.lag5     MyProp2.lag6  #>     0.0150621746    -0.0091463744     0.0299448440    -0.1000107313  #>     MyProp2.lag7     MyProp2.lag8     MyProp2.lag9    MyProp2.lag10  #>     0.0148834680    -0.0392566567    -0.0316636784     0.0733266390  #>    MyProp2.lag11    MyProp2.lag12    MyProp2.lag13    MyProp2.lag14  #>     0.0177036265    -0.0407358905     0.0888243864    -0.0192174917  #>    MyProp2.lag15    MyProp2.lag16    MyProp2.lag17    MyProp2.lag18  #>    -0.0732603101     0.0505562954     0.0501883082     0.0411547225  #>    MyProp2.lag19    MyProp2.lag20    MyProp2.lag21    MyProp2.lag22  #>    -0.0181081995     0.0189373131     0.0335191062     0.0665704789  #>    MyProp2.lag23    MyProp2.lag24    MyProp2.lag25    MyProp2.lag26  #>     0.0504420064    -0.0209850009    -0.0528398494    -0.0248597624  #>    MyProp2.lag27    MyProp2.lag28    MyProp2.lag29    MyProp2.lag30  #>     0.0939819284    -0.0511342544     0.0419470721     0.0295519453  #>     MyProp3.lag1     MyProp3.lag2     MyProp3.lag3     MyProp3.lag4  #>     0.0380138522     0.0817347645     0.0020858615     0.0464667040  #>     MyProp3.lag5     MyProp3.lag6     MyProp3.lag7     MyProp3.lag8  #>     0.0745941879     0.1161696079     0.0614526579     0.1252245170  #>     MyProp3.lag9    MyProp3.lag10    MyProp3.lag11    MyProp3.lag12  #>     0.0841520240     0.0018526934     0.0513201993     0.0832451504  #>    MyProp3.lag13    MyProp3.lag14    MyProp3.lag15    MyProp3.lag16  #>     0.1201162611     0.0962498001     0.0912496828     0.0450522732  #>    MyProp3.lag17    MyProp3.lag18    MyProp3.lag19    MyProp3.lag20  #>    -0.0062935347     0.0879765120     0.0352935615     0.0590100552  #>    MyProp3.lag21    MyProp3.lag22    MyProp3.lag23    MyProp3.lag24  #>     0.0831494802     0.1332005140     0.0559335161     0.0209136707  #>    MyProp3.lag25    MyProp3.lag26    MyProp3.lag27    MyProp3.lag28  #>     0.0619541130     0.1396376353     0.0692199238     0.0510072380  #>    MyProp3.lag29    MyProp3.lag30  #>     0.0156022768     0.0897408498"},{"path":"https://nanx.me/protr/reference/extractPAAC.html","id":null,"dir":"Reference","previous_headings":"","what":"Pseudo Amino Acid Composition (PseAAC) Descriptor ‚Äî extractPAAC","title":"Pseudo Amino Acid Composition (PseAAC) Descriptor ‚Äî extractPAAC","text":"function calculates Pseudo Amino Acid Composition (PseAAC) descriptor (dim: 20 + lambda, default 50).","code":""},{"path":"https://nanx.me/protr/reference/extractPAAC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pseudo Amino Acid Composition (PseAAC) Descriptor ‚Äî extractPAAC","text":"","code":"extractPAAC(   x,   props = c(\"Hydrophobicity\", \"Hydrophilicity\", \"SideChainMass\"),   lambda = 30,   w = 0.05,   customprops = NULL )"},{"path":"https://nanx.me/protr/reference/extractPAAC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pseudo Amino Acid Composition (PseAAC) Descriptor ‚Äî extractPAAC","text":"x character vector, input protein sequence. props character vector, specifying properties used. 3 properties used default, listed : 'Hydrophobicity' Hydrophobicity value 20 amino acids 'Hydrophilicity' Hydrophilicity value 20 amino acids 'SideChainMass' Side-chain mass 20 amino acids lambda lambda parameter PseAAC descriptors, default 30. w weighting factor, default 0.05. customprops n x 21 named data frame contains n customized property. row contains one property. column order different amino acid types 'AccNo', '', 'R', 'N', 'D', 'C', 'E', 'Q', 'G', 'H', '', 'L', 'K', 'M', 'F', 'P', 'S', 'T', 'W', 'Y', 'V', columns also exactly named like . AccNo column contains properties' names. users explicitly specify properties names argument props. See examples demonstration. default value customprops NULL.","code":""},{"path":"https://nanx.me/protr/reference/extractPAAC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pseudo Amino Acid Composition (PseAAC) Descriptor ‚Äî extractPAAC","text":"length 20 + lambda named vector","code":""},{"path":"https://nanx.me/protr/reference/extractPAAC.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Pseudo Amino Acid Composition (PseAAC) Descriptor ‚Äî extractPAAC","text":"Note default 20 * 3 prop values already independently given function. Users can also specify (544) properties Accession Number AAindex data, without default three properties, means users explicitly specify properties use. descriptor type, users need intelligently evaluate underlying details descriptors provided, instead using function data blindly. wise use negative positive control comparisons relevant help guide interpretation results.","code":""},{"path":"https://nanx.me/protr/reference/extractPAAC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Pseudo Amino Acid Composition (PseAAC) Descriptor ‚Äî extractPAAC","text":"Kuo-Chen Chou. Prediction Protein Cellular Attributes Using Pseudo-Amino Acid Composition. PROTEINS: Structure, Function, Genetics, 2001, 43: 246-255. Kuo-Chen Chou. Using Amphiphilic Pseudo Amino Acid Composition Predict Enzyme Subfamily Classes. Bioinformatics, 2005, 21, 10-19. JACS, 1962, 84: 4240-4246. (C. Tanford). (hydrophobicity data) PNAS, 1981, 78:3824-3828 (T.P.Hopp & K.R.Woods). (hydrophilicity data) CRC Handbook Chemistry Physics, 66th ed., CRC Press, Boca Raton, Florida (1985). (side-chain mass data) R.M.C. Dawson, D.C. Elliott, W.H. Elliott, K.M. Jones, Data Biochemical Research 3rd ed., Clarendon Press Oxford (1986). (side-chain mass data)","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/extractPAAC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pseudo Amino Acid Composition (PseAAC) Descriptor ‚Äî extractPAAC","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/extractPAAC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pseudo Amino Acid Composition (PseAAC) Descriptor ‚Äî extractPAAC","text":"","code":"x <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]] extractPAAC(x) #>         Xc1.A         Xc1.R         Xc1.N         Xc1.D         Xc1.C  #>    9.07025432   10.07806035    5.54293319    7.30659376    9.57415734  #>         Xc1.E         Xc1.Q         Xc1.G         Xc1.H         Xc1.I  #>    6.80269074    6.80269074   11.58976941    4.28317565    5.03903018  #>         Xc1.L         Xc1.K         Xc1.M         Xc1.F         Xc1.P  #>   10.83391488    5.54293319    1.76366056    4.53512716    7.55854527  #>         Xc1.S         Xc1.T         Xc1.W         Xc1.Y         Xc1.V  #>   12.59757544    6.29878772    3.27536961    6.04683621    7.05464225  #>  Xc2.lambda.1  Xc2.lambda.2  Xc2.lambda.3  Xc2.lambda.4  Xc2.lambda.5  #>    0.02514092    0.02500357    0.02527773    0.02553159    0.02445265  #>  Xc2.lambda.6  Xc2.lambda.7  Xc2.lambda.8  Xc2.lambda.9 Xc2.lambda.10  #>    0.02561910    0.02486131    0.02506656    0.02553952    0.02437663  #> Xc2.lambda.11 Xc2.lambda.12 Xc2.lambda.13 Xc2.lambda.14 Xc2.lambda.15  #>    0.02491262    0.02533803    0.02351915    0.02479912    0.02548431  #> Xc2.lambda.16 Xc2.lambda.17 Xc2.lambda.18 Xc2.lambda.19 Xc2.lambda.20  #>    0.02478210    0.02513770    0.02457224    0.02543046    0.02500889  #> Xc2.lambda.21 Xc2.lambda.22 Xc2.lambda.23 Xc2.lambda.24 Xc2.lambda.25  #>    0.02476967    0.02342389    0.02431684    0.02610300    0.02626722  #> Xc2.lambda.26 Xc2.lambda.27 Xc2.lambda.28 Xc2.lambda.29 Xc2.lambda.30  #>    0.02457082    0.02343049    0.02588823    0.02490463    0.02451951   myprops <- data.frame(   AccNo = c(\"MyProp1\", \"MyProp2\", \"MyProp3\"),   A = c(0.62, -0.5, 15), R = c(-2.53, 3, 101),   N = c(-0.78, 0.2, 58), D = c(-0.9, 3, 59),   C = c(0.29, -1, 47), E = c(-0.74, 3, 73),   Q = c(-0.85, 0.2, 72), G = c(0.48, 0, 1),   H = c(-0.4, -0.5, 82), I = c(1.38, -1.8, 57),   L = c(1.06, -1.8, 57), K = c(-1.5, 3, 73),   M = c(0.64, -1.3, 75), F = c(1.19, -2.5, 91),   P = c(0.12, 0, 42), S = c(-0.18, 0.3, 31),   T = c(-0.05, -0.4, 45), W = c(0.81, -3.4, 130),   Y = c(0.26, -2.3, 107), V = c(1.08, -1.5, 43) )  # use 3 default properties, 4 properties from the # AAindex database, and 3 cutomized properties extractPAAC(   x,   customprops = myprops,   props = c(     \"Hydrophobicity\", \"Hydrophilicity\", \"SideChainMass\",     \"CIDH920105\", \"BHAR880101\",     \"CHAM820101\", \"CHAM820102\",     \"MyProp1\", \"MyProp2\", \"MyProp3\"   ) ) #>         Xc1.A         Xc1.R         Xc1.N         Xc1.D         Xc1.C  #>    9.12536927   10.13929919    5.57661456    7.35099191    9.63233423  #>         Xc1.E         Xc1.Q         Xc1.G         Xc1.H         Xc1.I  #>    6.84402695    6.84402695   11.66019407    4.30920216    5.06964960  #>         Xc1.L         Xc1.K         Xc1.M         Xc1.F         Xc1.P  #>   10.89974663    5.57661456    1.77437736    4.56268464    7.60447439  #>         Xc1.S         Xc1.T         Xc1.W         Xc1.Y         Xc1.V  #>   12.67412399    6.33706199    3.29527224    6.08357951    7.09750943  #>  Xc2.lambda.1  Xc2.lambda.2  Xc2.lambda.3  Xc2.lambda.4  Xc2.lambda.5  #>    0.02472188    0.02515055    0.02559236    0.02588471    0.02419172  #>  Xc2.lambda.6  Xc2.lambda.7  Xc2.lambda.8  Xc2.lambda.9 Xc2.lambda.10  #>    0.02570312    0.02514005    0.02462544    0.02544711    0.02427250  #> Xc2.lambda.11 Xc2.lambda.12 Xc2.lambda.13 Xc2.lambda.14 Xc2.lambda.15  #>    0.02462431    0.02510916    0.02335959    0.02501099    0.02525138  #> Xc2.lambda.16 Xc2.lambda.17 Xc2.lambda.18 Xc2.lambda.19 Xc2.lambda.20  #>    0.02491325    0.02527924    0.02448639    0.02542024    0.02498247  #> Xc2.lambda.21 Xc2.lambda.22 Xc2.lambda.23 Xc2.lambda.24 Xc2.lambda.25  #>    0.02473118    0.02329787    0.02470748    0.02592993    0.02557742  #> Xc2.lambda.26 Xc2.lambda.27 Xc2.lambda.28 Xc2.lambda.29 Xc2.lambda.30  #>    0.02469289    0.02360989    0.02570375    0.02473739    0.02436325"},{"path":"https://nanx.me/protr/reference/extractPSSM.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute PSSM (Position-Specific Scoring Matrix) for given protein sequence ‚Äî extractPSSM","title":"Compute PSSM (Position-Specific Scoring Matrix) for given protein sequence ‚Äî extractPSSM","text":"function calculates PSSM (Position-Specific Scoring Matrix) derived PSI-Blast given protein sequence peptides.","code":""},{"path":"https://nanx.me/protr/reference/extractPSSM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute PSSM (Position-Specific Scoring Matrix) for given protein sequence ‚Äî extractPSSM","text":"","code":"extractPSSM(   seq,   start.pos = 1L,   end.pos = nchar(seq),   psiblast.path = NULL,   makeblastdb.path = NULL,   database.path = NULL,   iter = 5,   silent = TRUE,   evalue = 10L,   word.size = NULL,   gapopen = NULL,   gapextend = NULL,   matrix = \"BLOSUM62\",   threshold = NULL,   seg = \"no\",   soft.masking = FALSE,   culling.limit = NULL,   best.hit.overhang = NULL,   best.hit.score.edge = NULL,   xdrop.ungap = NULL,   xdrop.gap = NULL,   xdrop.gap.final = NULL,   window.size = NULL,   gap.trigger = 22L,   num.threads = 1L,   pseudocount = 0L,   inclusion.ethresh = 0.002 )"},{"path":"https://nanx.me/protr/reference/extractPSSM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute PSSM (Position-Specific Scoring Matrix) for given protein sequence ‚Äî extractPSSM","text":"seq Character vector, input protein sequence. start.pos Optional integer denoting start position fragment window. Default 1, .e. first amino acid given sequence. end.pos Optional integer denoting end position fragment window. Default nchar(seq), .e. last amino acid given sequence. psiblast.path Character string indicating path psiblast program. NCBI Blast+ previously installed operation system, path automatically detected. makeblastdb.path Character string indicating path makeblastdb program. NCBI Blast+ previously installed system, path automatically detected. database.path Character string indicating path reference database (FASTA file). iter Number iterations perform PSI-Blast. silent Logical. Whether PSI-Blast running output shown (May work Windows versions PSI-Blast versions), default TRUE. evalue Expectation value (E) threshold saving hits. Default 10. word.size Word size wordfinder algorithm. integer >= 2. gapopen Integer. Cost open gap. gapextend Integer. Cost extend gap. matrix Character string. scoring matrix name (default \"BLOSUM62\"). threshold Minimum word score word added BLAST lookup table. real value >= 0. seg Character string. Filter query sequence SEG (\"yes\", \"window locut hicut\", \"\" disable). Default \"\". soft.masking Logical. Apply filtering locations soft masks? Default FALSE. culling.limit integer >= 0. query range hit enveloped least many higher-scoring hits, delete hit. Incompatible best.hit.overhang best_hit_score_edge. best.hit.overhang Best Hit algorithm overhang value (real value >= 0 =< 0.5, recommended value: 0.1). Incompatible culling_limit. best.hit.score.edge Best Hit algorithm score edge value (real value >=0 =< 0.5, recommended value: 0.1). Incompatible culling_limit. xdrop.ungap X-dropoff value (bits) ungapped extensions. xdrop.gap X-dropoff value (bits) preliminary gapped extensions. xdrop.gap.final X-dropoff value (bits) final gapped alignment. window.size integer >= 0. Multiple hits window size, specify 1-hit algorithm, use 0. gap.trigger Number bits trigger gapping. Default 22. num.threads Integer. Number threads (CPUs) use BLAST search. Default 1. pseudocount Integer. Pseudo-count value used constructing PSSM. Default 0. inclusion.ethresh E-value inclusion threshold pairwise alignments. Default 0.002.","code":""},{"path":"https://nanx.me/protr/reference/extractPSSM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute PSSM (Position-Specific Scoring Matrix) for given protein sequence ‚Äî extractPSSM","text":"original PSSM, numeric matrix end.pos - start.pos + 1 columns 20 named rows.","code":""},{"path":"https://nanx.me/protr/reference/extractPSSM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute PSSM (Position-Specific Scoring Matrix) for given protein sequence ‚Äî extractPSSM","text":"given protein sequences peptides, PSSM represents log-likelihood substitution 20 types amino acids position sequence. Note output value normalized.","code":""},{"path":"https://nanx.me/protr/reference/extractPSSM.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Compute PSSM (Position-Specific Scoring Matrix) for given protein sequence ‚Äî extractPSSM","text":"function requires makeblastdb psiblast programs properly installed operation system paths provided. two command-line programs included NCBI-BLAST+ software package. install NCBI Blast+ operating system, see https://blast.ncbi.nlm.nih.gov/doc/blast-help/downloadblastdata.html detailed instructions. Ubuntu/Debian users can directly use command sudo apt-get install ncbi-blast+ install NCBI Blast+. OS X users, download ncbi-blast- ... .dmg install. Windows users, download ncbi-blast- ... .exe install.","code":""},{"path":"https://nanx.me/protr/reference/extractPSSM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute PSSM (Position-Specific Scoring Matrix) for given protein sequence ‚Äî extractPSSM","text":"Altschul, Stephen F., et al. \"Gapped BLAST PSI-BLAST: new generation protein database search programs.\" Nucleic acids research 25.17 (1997): 3389--3402. Ye, Xugang, Guoli Wang, Stephen F. Altschul. \"assessment substitution scores protein profile-profile comparison.\" Bioinformatics 27.24 (2011): 3356--3363. Rangwala, Huzefa, George Karypis. \"Profile-based direct kernels remote homology detection fold recognition.\" Bioinformatics 21.23 (2005): 4239--4247.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/extractPSSM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute PSSM (Position-Specific Scoring Matrix) for given protein sequence ‚Äî extractPSSM","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/extractPSSM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute PSSM (Position-Specific Scoring Matrix) for given protein sequence ‚Äî extractPSSM","text":"","code":"if (Sys.which(\"makeblastdb\") == \"\" | Sys.which(\"psiblast\") == \"\") {   cat(\"Cannot find makeblastdb or psiblast. Please install NCBI Blast+ first\") } else {   x <- readFASTA(system.file(     \"protseq/P00750.fasta\",     package = \"protr\"   ))[[1]]   dbpath <- tempfile(\"tempdb\", fileext = \".fasta\")   invisible(file.copy(from = system.file(     \"protseq/Plasminogen.fasta\",     package = \"protr\"   ), to = dbpath))    pssmmat <- extractPSSM(seq = x, database.path = dbpath)    dim(pssmmat) # 20 x 562 (P00750: length 562, 20 Amino Acids) } #> Cannot find makeblastdb or psiblast. Please install NCBI Blast+ first"},{"path":"https://nanx.me/protr/reference/extractPSSMAcc.html","id":null,"dir":"Reference","previous_headings":"","what":"Profile-based protein representation derived by PSSM (Position-Specific Scoring Matrix) and auto cross covariance ‚Äî extractPSSMAcc","title":"Profile-based protein representation derived by PSSM (Position-Specific Scoring Matrix) and auto cross covariance ‚Äî extractPSSMAcc","text":"function calculates feature vector based PSSM running PSI-Blast auto cross covariance tranformation.","code":""},{"path":"https://nanx.me/protr/reference/extractPSSMAcc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Profile-based protein representation derived by PSSM (Position-Specific Scoring Matrix) and auto cross covariance ‚Äî extractPSSMAcc","text":"","code":"extractPSSMAcc(pssmmat, lag)"},{"path":"https://nanx.me/protr/reference/extractPSSMAcc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Profile-based protein representation derived by PSSM (Position-Specific Scoring Matrix) and auto cross covariance ‚Äî extractPSSMAcc","text":"pssmmat PSSM computed extractPSSM. lag lag parameter. Must less number amino acids sequence (.e. number columns PSSM matrix).","code":""},{"path":"https://nanx.me/protr/reference/extractPSSMAcc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Profile-based protein representation derived by PSSM (Position-Specific Scoring Matrix) and auto cross covariance ‚Äî extractPSSMAcc","text":"length lag * 20^2 named numeric vector, element names derived amino acid name abbreviation (crossed amino acid name abbreviation) lag index.","code":""},{"path":"https://nanx.me/protr/reference/extractPSSMAcc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Profile-based protein representation derived by PSSM (Position-Specific Scoring Matrix) and auto cross covariance ‚Äî extractPSSMAcc","text":"Wold, S., Jonsson, J., Sjorstrom, M., Sandberg, M., & Rannar, S. (1993). DNA peptide sequences chemical processes multivariately modelled principal component analysis partial least-squares projections latent structures. Analytica chimica acta, 277(2), 239--253.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/extractPSSMAcc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Profile-based protein representation derived by PSSM (Position-Specific Scoring Matrix) and auto cross covariance ‚Äî extractPSSMAcc","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/extractPSSMAcc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Profile-based protein representation derived by PSSM (Position-Specific Scoring Matrix) and auto cross covariance ‚Äî extractPSSMAcc","text":"","code":"if (Sys.which(\"makeblastdb\") == \"\" | Sys.which(\"psiblast\") == \"\") {   cat(\"Cannot find makeblastdb or psiblast. Please install NCBI Blast+\") } else {   x <- readFASTA(system.file(     \"protseq/P00750.fasta\",     package = \"protr\"   ))[[1]]   dbpath <- tempfile(\"tempdb\", fileext = \".fasta\")   invisible(file.copy(from = system.file(     \"protseq/Plasminogen.fasta\",     package = \"protr\"   ), to = dbpath))    pssmmat <- extractPSSM(seq = x, database.path = dbpath)   pssmacc <- extractPSSMAcc(pssmmat, lag = 3)   tail(pssmacc) } #> Cannot find makeblastdb or psiblast. Please install NCBI Blast+"},{"path":"https://nanx.me/protr/reference/extractPSSMFeature.html","id":null,"dir":"Reference","previous_headings":"","what":"Profile-based protein representation derived by PSSM (Position-Specific Scoring Matrix) ‚Äî extractPSSMFeature","title":"Profile-based protein representation derived by PSSM (Position-Specific Scoring Matrix) ‚Äî extractPSSMFeature","text":"function calculates profile-based protein representation derived PSSM. feature vector based PSSM computed extractPSSM.","code":""},{"path":"https://nanx.me/protr/reference/extractPSSMFeature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Profile-based protein representation derived by PSSM (Position-Specific Scoring Matrix) ‚Äî extractPSSMFeature","text":"","code":"extractPSSMFeature(pssmmat)"},{"path":"https://nanx.me/protr/reference/extractPSSMFeature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Profile-based protein representation derived by PSSM (Position-Specific Scoring Matrix) ‚Äî extractPSSMFeature","text":"pssmmat PSSM computed extractPSSM.","code":""},{"path":"https://nanx.me/protr/reference/extractPSSMFeature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Profile-based protein representation derived by PSSM (Position-Specific Scoring Matrix) ‚Äî extractPSSMFeature","text":"numeric vector 20 x N named elements, N size window (number rows PSSM).","code":""},{"path":"https://nanx.me/protr/reference/extractPSSMFeature.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Profile-based protein representation derived by PSSM (Position-Specific Scoring Matrix) ‚Äî extractPSSMFeature","text":"given sequence, PSSM feature represents log-likelihood substitution 20 types amino acids position sequence. PSSM feature value vector represents degree conservation given amino acid type. value normalized interval (0, 1) transformation 1/(1+e^(-x)).","code":""},{"path":"https://nanx.me/protr/reference/extractPSSMFeature.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Profile-based protein representation derived by PSSM (Position-Specific Scoring Matrix) ‚Äî extractPSSMFeature","text":"Ye, Xugang, Guoli Wang, Stephen F. Altschul. \"assessment substitution scores protein profile-profile comparison.\" Bioinformatics 27.24 (2011): 3356--3363. Rangwala, Huzefa, George Karypis. \"Profile-based direct kernels remote homology detection fold recognition.\" Bioinformatics 21.23 (2005): 4239--4247.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/extractPSSMFeature.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Profile-based protein representation derived by PSSM (Position-Specific Scoring Matrix) ‚Äî extractPSSMFeature","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/extractPSSMFeature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Profile-based protein representation derived by PSSM (Position-Specific Scoring Matrix) ‚Äî extractPSSMFeature","text":"","code":"if (Sys.which(\"makeblastdb\") == \"\" | Sys.which(\"psiblast\") == \"\") {   cat(\"Cannot find makeblastdb or psiblast. Please install NCBI Blast+\") } else {   x <- readFASTA(system.file(     \"protseq/P00750.fasta\",     package = \"protr\"   ))[[1]]   dbpath <- tempfile(\"tempdb\", fileext = \".fasta\")   invisible(file.copy(from = system.file(     \"protseq/Plasminogen.fasta\",     package = \"protr\"   ), to = dbpath))    pssmmat <- extractPSSM(seq = x, database.path = dbpath)   pssmfeature <- extractPSSMFeature(pssmmat)   head(pssmfeature) } #> Cannot find makeblastdb or psiblast. Please install NCBI Blast+"},{"path":"https://nanx.me/protr/reference/extractProtFP.html","id":null,"dir":"Reference","previous_headings":"","what":"Amino Acid Properties Based Scales Descriptors (Protein Fingerprint) ‚Äî extractProtFP","title":"Amino Acid Properties Based Scales Descriptors (Protein Fingerprint) ‚Äî extractProtFP","text":"function calculates amino acid properties based scales descriptors (protein fingerprint). Users can specify AAindex properties select AAindex database specify numerical character index properties AAindex database.","code":""},{"path":"https://nanx.me/protr/reference/extractProtFP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Amino Acid Properties Based Scales Descriptors (Protein Fingerprint) ‚Äî extractProtFP","text":"","code":"extractProtFP(x, index = NULL, pc, lag, scale = TRUE, silent = TRUE)"},{"path":"https://nanx.me/protr/reference/extractProtFP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Amino Acid Properties Based Scales Descriptors (Protein Fingerprint) ‚Äî extractProtFP","text":"x character vector, input protein sequence. index Integer vector character vector. Specify AAindex properties select AAindex database specify numerical character index properties AAindex database. Default NULL, means selecting AA properties AAindex database. pc Integer. Use first pc principal components scales. Must greater number AA properties provided. lag lag parameter. Must less amino acids. scale Logical. auto-scale property matrix PCA? Default TRUE. silent Logical. Whether print standard deviation, proportion variance cumulative proportion selected principal components . Default TRUE.","code":""},{"path":"https://nanx.me/protr/reference/extractProtFP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Amino Acid Properties Based Scales Descriptors (Protein Fingerprint) ‚Äî extractProtFP","text":"length lag * p^2 named vector, p number scales (principal components) selected.","code":""},{"path":"https://nanx.me/protr/reference/extractProtFP.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Amino Acid Properties Based Scales Descriptors (Protein Fingerprint) ‚Äî extractProtFP","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/extractProtFP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Amino Acid Properties Based Scales Descriptors (Protein Fingerprint) ‚Äî extractProtFP","text":"","code":"x <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]] fp <- extractProtFP(x, index = c(160:165, 258:296), pc = 5, lag = 7, silent = FALSE) #> Summary of the first 5 principal components:  #>                            PC1      PC2     PC3      PC4      PC5 #> Standard deviation     4.51689 2.786022 2.27000 1.757295 1.419412 #> Proportion of Variance 0.45338 0.172490 0.11451 0.068620 0.044770 #> Cumulative Proportion  0.45338 0.625870 0.74038 0.809000 0.853780"},{"path":"https://nanx.me/protr/reference/extractProtFPGap.html","id":null,"dir":"Reference","previous_headings":"","what":"Amino Acid Properties Based Scales Descriptors (Protein Fingerprint) with Gap Support ‚Äî extractProtFPGap","title":"Amino Acid Properties Based Scales Descriptors (Protein Fingerprint) with Gap Support ‚Äî extractProtFPGap","text":"function calculates amino acid properties based scales descriptors (protein fingerprint) gap support. Users can specify AAindex properties select AAindex database specify numerical character index properties AAindex database.","code":""},{"path":"https://nanx.me/protr/reference/extractProtFPGap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Amino Acid Properties Based Scales Descriptors (Protein Fingerprint) with Gap Support ‚Äî extractProtFPGap","text":"","code":"extractProtFPGap(x, index = NULL, pc, lag, scale = TRUE, silent = TRUE)"},{"path":"https://nanx.me/protr/reference/extractProtFPGap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Amino Acid Properties Based Scales Descriptors (Protein Fingerprint) with Gap Support ‚Äî extractProtFPGap","text":"x character vector, input protein sequence. Use '-' represent gaps sequence. index Integer vector character vector. Specify AAindex properties select AAindex database specify numerical character index properties AAindex database. Default NULL, means selecting AA properties AAindex database. pc Integer. Use first pc principal components scales. Must greater number AA properties provided. lag lag parameter. Must less amino acids. scale Logical. auto-scale property matrix PCA? Default TRUE. silent Logical. Whether print standard deviation, proportion variance cumulative proportion selected principal components . Default TRUE.","code":""},{"path":"https://nanx.me/protr/reference/extractProtFPGap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Amino Acid Properties Based Scales Descriptors (Protein Fingerprint) with Gap Support ‚Äî extractProtFPGap","text":"length lag * p^2 named vector, p number scales (principal components) selected.","code":""},{"path":"https://nanx.me/protr/reference/extractProtFPGap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Amino Acid Properties Based Scales Descriptors (Protein Fingerprint) with Gap Support ‚Äî extractProtFPGap","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/extractProtFPGap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Amino Acid Properties Based Scales Descriptors (Protein Fingerprint) with Gap Support ‚Äî extractProtFPGap","text":"","code":"# amino acid sequence with gaps x <- readFASTA(system.file(\"protseq/align.fasta\", package = \"protr\"))$`IXI_235` fp <- extractProtFPGap(x, index = c(160:165, 258:296), pc = 5, lag = 7, silent = FALSE) #> Summary of the first 5 principal components:  #>                             PC1      PC2      PC3      PC4     PC5 #> Standard deviation     4.398253 2.620509 2.267688 1.756102 1.52816 #> Proportion of Variance 0.429880 0.152600 0.114280 0.068530 0.05189 #> Cumulative Proportion  0.429880 0.582480 0.696760 0.765290 0.81718"},{"path":"https://nanx.me/protr/reference/extractQSO.html","id":null,"dir":"Reference","previous_headings":"","what":"Quasi-Sequence-Order (QSO) Descriptor ‚Äî extractQSO","title":"Quasi-Sequence-Order (QSO) Descriptor ‚Äî extractQSO","text":"function calculates Quasi-Sequence-Order (QSO) descriptor (dim: 20 + 20 + (2 * nlag), default 100).","code":""},{"path":"https://nanx.me/protr/reference/extractQSO.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quasi-Sequence-Order (QSO) Descriptor ‚Äî extractQSO","text":"","code":"extractQSO(x, nlag = 30, w = 0.1)"},{"path":"https://nanx.me/protr/reference/extractQSO.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quasi-Sequence-Order (QSO) Descriptor ‚Äî extractQSO","text":"x character vector, input protein sequence. nlag maximum lag, defualt 30. w weighting factor, default 0.1.","code":""},{"path":"https://nanx.me/protr/reference/extractQSO.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quasi-Sequence-Order (QSO) Descriptor ‚Äî extractQSO","text":"length 20 + 20 + (2 * nlag) named vector","code":""},{"path":"https://nanx.me/protr/reference/extractQSO.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Quasi-Sequence-Order (QSO) Descriptor ‚Äî extractQSO","text":"Kuo-Chen Chou. Prediction Protein Subcellar Locations Incorporating Quasi-Sequence-Order Effect. Biochemical Biophysical Research Communications, 2000, 278, 477-483. Kuo-Chen Chou Yu-Dong Cai. Prediction Protein Sucellular Locations GO-FunD-PseAA Predictor. Biochemical Biophysical Research Communications, 2004, 320, 1236-1239. Gisbert Schneider Paul Wrede. Rational Design Amino Acid Sequences Artifical Neural Networks Simulated Molecular Evolution: Novo Design Idealized Leader Cleavge Site. Biophys Journal, 1994, 66, 335-344.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/extractQSO.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Quasi-Sequence-Order (QSO) Descriptor ‚Äî extractQSO","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/extractQSO.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quasi-Sequence-Order (QSO) Descriptor ‚Äî extractQSO","text":"","code":"x <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]] extractQSO(x) #>  Schneider.Xr.A  Schneider.Xr.R  Schneider.Xr.N  Schneider.Xr.D  Schneider.Xr.C  #>    6.096218e-02    6.773576e-02    3.725467e-02    4.910842e-02    6.434897e-02  #>  Schneider.Xr.E  Schneider.Xr.Q  Schneider.Xr.G  Schneider.Xr.H  Schneider.Xr.I  #>    4.572164e-02    4.572164e-02    7.789612e-02    2.878770e-02    3.386788e-02  #>  Schneider.Xr.L  Schneider.Xr.K  Schneider.Xr.M  Schneider.Xr.F  Schneider.Xr.P  #>    7.281594e-02    3.725467e-02    1.185376e-02    3.048109e-02    5.080182e-02  #>  Schneider.Xr.S  Schneider.Xr.T  Schneider.Xr.W  Schneider.Xr.Y  Schneider.Xr.V  #>    8.466970e-02    4.233485e-02    2.201412e-02    4.064145e-02    4.741503e-02  #>   Grantham.Xr.A   Grantham.Xr.R   Grantham.Xr.N   Grantham.Xr.D   Grantham.Xr.C  #>    1.835033e-06    2.038926e-06    1.121409e-06    1.478221e-06    1.936980e-06  #>   Grantham.Xr.E   Grantham.Xr.Q   Grantham.Xr.G   Grantham.Xr.H   Grantham.Xr.I  #>    1.376275e-06    1.376275e-06    2.344765e-06    8.665435e-07    1.019463e-06  #>   Grantham.Xr.L   Grantham.Xr.K   Grantham.Xr.M   Grantham.Xr.F   Grantham.Xr.P  #>    2.191845e-06    1.121409e-06    3.568120e-07    9.175167e-07    1.529194e-06  #>   Grantham.Xr.S   Grantham.Xr.T   Grantham.Xr.W   Grantham.Xr.Y   Grantham.Xr.V  #>    2.548657e-06    1.274329e-06    6.626509e-07    1.223356e-06    1.427248e-06  #>  Schneider.Xd.1  Schneider.Xd.2  Schneider.Xd.3  Schneider.Xd.4  Schneider.Xd.5  #>    3.457972e-02    3.384600e-02    3.502111e-02    3.344162e-02    3.273951e-02  #>  Schneider.Xd.6  Schneider.Xd.7  Schneider.Xd.8  Schneider.Xd.9 Schneider.Xd.10  #>    3.525537e-02    3.311390e-02    3.403364e-02    3.331093e-02    3.285068e-02  #> Schneider.Xd.11 Schneider.Xd.12 Schneider.Xd.13 Schneider.Xd.14 Schneider.Xd.15  #>    3.381760e-02    3.470422e-02    3.166883e-02    3.360882e-02    3.479121e-02  #> Schneider.Xd.16 Schneider.Xd.17 Schneider.Xd.18 Schneider.Xd.19 Schneider.Xd.20  #>    3.270408e-02    3.172623e-02    3.225829e-02    3.435647e-02    3.361893e-02  #> Schneider.Xd.21 Schneider.Xd.22 Schneider.Xd.23 Schneider.Xd.24 Schneider.Xd.25  #>    3.236099e-02    3.132904e-02    3.217206e-02    3.432701e-02    3.414334e-02  #> Schneider.Xd.26 Schneider.Xd.27 Schneider.Xd.28 Schneider.Xd.29 Schneider.Xd.30  #>    3.294954e-02    3.149609e-02    3.456720e-02    3.237140e-02    3.114275e-02  #>   Grantham.Xd.1   Grantham.Xd.2   Grantham.Xd.3   Grantham.Xd.4   Grantham.Xd.5  #>    3.402298e-02    3.446605e-02    3.638918e-02    3.439801e-02    3.206838e-02  #>   Grantham.Xd.6   Grantham.Xd.7   Grantham.Xd.8   Grantham.Xd.9  Grantham.Xd.10  #>    3.486488e-02    3.361253e-02    3.341875e-02    3.374516e-02    3.451195e-02  #>  Grantham.Xd.11  Grantham.Xd.12  Grantham.Xd.13  Grantham.Xd.14  Grantham.Xd.15  #>    3.311057e-02    3.499580e-02    3.209915e-02    3.312361e-02    3.372162e-02  #>  Grantham.Xd.16  Grantham.Xd.17  Grantham.Xd.18  Grantham.Xd.19  Grantham.Xd.20  #>    3.350302e-02    3.348467e-02    3.147055e-02    3.349358e-02    3.298629e-02  #>  Grantham.Xd.21  Grantham.Xd.22  Grantham.Xd.23  Grantham.Xd.24  Grantham.Xd.25  #>    3.293706e-02    3.027516e-02    3.329628e-02    3.390974e-02    3.303396e-02  #>  Grantham.Xd.26  Grantham.Xd.27  Grantham.Xd.28  Grantham.Xd.29  Grantham.Xd.30  #>    3.253250e-02    3.199340e-02    3.332438e-02    3.284195e-02    3.236875e-02"},{"path":"https://nanx.me/protr/reference/extractSOCN.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequence-Order-Coupling Numbers ‚Äî extractSOCN","title":"Sequence-Order-Coupling Numbers ‚Äî extractSOCN","text":"function calculates Sequence-Order-Coupling Numbers (dim: nlag * 2, default 60).","code":""},{"path":"https://nanx.me/protr/reference/extractSOCN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequence-Order-Coupling Numbers ‚Äî extractSOCN","text":"","code":"extractSOCN(x, nlag = 30)"},{"path":"https://nanx.me/protr/reference/extractSOCN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequence-Order-Coupling Numbers ‚Äî extractSOCN","text":"x character vector, input protein sequence. nlag maximum lag, defualt 30.","code":""},{"path":"https://nanx.me/protr/reference/extractSOCN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequence-Order-Coupling Numbers ‚Äî extractSOCN","text":"length nlag * 2 named vector","code":""},{"path":"https://nanx.me/protr/reference/extractSOCN.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sequence-Order-Coupling Numbers ‚Äî extractSOCN","text":"Kuo-Chen Chou. Prediction Protein Subcellar Locations Incorporating Quasi-Sequence-Order Effect. Biochemical Biophysical Research Communications, 2000, 278, 477-483. Kuo-Chen Chou Yu-Dong Cai. Prediction Protein Sucellular Locations GO-FunD-PseAA Predictor. Biochemical Biophysical Research Communications, 2004, 320, 1236-1239. Gisbert Schneider Paul Wrede. Rational Design Amino Acid Sequences Artifical Neural Networks Simulated Molecular Evolution: Novo Design Idealized Leader Cleavge Site. Biophys Journal, 1994, 66, 335-344.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/extractSOCN.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sequence-Order-Coupling Numbers ‚Äî extractSOCN","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/extractSOCN.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequence-Order-Coupling Numbers ‚Äî extractSOCN","text":"","code":"x <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]] extractSOCN(x) #>  Schneider.lag1  Schneider.lag2  Schneider.lag3  Schneider.lag4  Schneider.lag5  #>        204.2036        199.8708        206.8102        197.4828        193.3366  #>  Schneider.lag6  Schneider.lag7  Schneider.lag8  Schneider.lag9 Schneider.lag10  #>        208.1936        195.5476        200.9789        196.7110        193.9931  #> Schneider.lag11 Schneider.lag12 Schneider.lag13 Schneider.lag14 Schneider.lag15  #>        199.7031        204.9389        187.0140        198.4702        205.4526  #> Schneider.lag16 Schneider.lag17 Schneider.lag18 Schneider.lag19 Schneider.lag20  #>        193.1274        187.3529        190.4949        202.8853        198.5299  #> Schneider.lag21 Schneider.lag22 Schneider.lag23 Schneider.lag24 Schneider.lag25  #>        191.1013        185.0074        189.9857        202.7113        201.6267  #> Schneider.lag26 Schneider.lag27 Schneider.lag28 Schneider.lag29 Schneider.lag30  #>        194.5770        185.9939        204.1297        191.1629        183.9073  #>   Grantham.lag1   Grantham.lag2   Grantham.lag3   Grantham.lag4   Grantham.lag5  #>    6674686.0000    6761609.0000    7138892.0000    6748261.0000    6291229.0000  #>   Grantham.lag6   Grantham.lag7   Grantham.lag8   Grantham.lag9  Grantham.lag10  #>    6839853.0000    6594164.0000    6556148.0000    6620183.0000    6770614.0000  #>  Grantham.lag11  Grantham.lag12  Grantham.lag13  Grantham.lag14  Grantham.lag15  #>    6495689.0000    6865537.0000    6297267.0000    6498247.0000    6615566.0000  #>  Grantham.lag16  Grantham.lag17  Grantham.lag18  Grantham.lag19  Grantham.lag20  #>    6572680.0000    6569081.0000    6173947.0000    6570829.0000    6471308.0000  #>  Grantham.lag21  Grantham.lag22  Grantham.lag23  Grantham.lag24  Grantham.lag25  #>    6461649.0000    5939432.0000    6532121.0000    6652472.0000    6480660.0000  #>  Grantham.lag26  Grantham.lag27  Grantham.lag28  Grantham.lag29  Grantham.lag30  #>    6382281.0000    6276521.0000    6537634.0000    6442991.0000    6350157.0000"},{"path":"https://nanx.me/protr/reference/extractScales.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales-Based Descriptors derived by Principal Components Analysis ‚Äî extractScales","title":"Scales-Based Descriptors derived by Principal Components Analysis ‚Äî extractScales","text":"function calculates scales-based descriptors derived Principal Components Analysis (PCA). Users can provide customized amino acid property matrices. function implements core computation procedure needed scales-based descriptors derived AA-Properties (AAindex) scales-based descriptors derived 20+ classes 2D 3D molecular descriptors (Topological, WHIM, VHSE, etc.) protr package.","code":""},{"path":"https://nanx.me/protr/reference/extractScales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales-Based Descriptors derived by Principal Components Analysis ‚Äî extractScales","text":"","code":"extractScales(x, propmat, pc, lag, scale = TRUE, silent = TRUE)"},{"path":"https://nanx.me/protr/reference/extractScales.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales-Based Descriptors derived by Principal Components Analysis ‚Äî extractScales","text":"x character vector, input protein sequence. propmat matrix containing properties amino acids. row represent one amino acid type, column represents one property. Note one-letter row names must provided need seek properties AA type. pc Integer. Use first pc principal components scales. Must greater number AA properties provided. lag lag parameter. Must less amino acids. scale Logical. auto-scale property matrix (propmat) PCA? Default TRUE. silent Logical. Whether print standard deviation, proportion variance cumulative proportion selected principal components . Default TRUE.","code":""},{"path":"https://nanx.me/protr/reference/extractScales.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scales-Based Descriptors derived by Principal Components Analysis ‚Äî extractScales","text":"length lag * p^2 named vector, p number scales (principal components) selected.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/extractScales.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scales-Based Descriptors derived by Principal Components Analysis ‚Äî extractScales","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/extractScales.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scales-Based Descriptors derived by Principal Components Analysis ‚Äî extractScales","text":"","code":"x <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]] data(AAindex) AAidxmat <- t(na.omit(as.matrix(AAindex[, 7:26]))) scales <- extractScales(x, propmat = AAidxmat, pc = 5, lag = 7, silent = FALSE) #> Summary of the first 5 principal components:  #>                             PC1      PC2      PC3      PC4      PC5 #> Standard deviation     13.71695 8.924017 7.698803 6.110576 5.413655 #> Proportion of Variance  0.35434 0.149980 0.111620 0.070320 0.055190 #> Cumulative Proportion   0.35434 0.504320 0.615940 0.686260 0.741450"},{"path":"https://nanx.me/protr/reference/extractScalesGap.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales-Based Descriptors derived by Principal Components Analysis (with Gap Support) ‚Äî extractScalesGap","title":"Scales-Based Descriptors derived by Principal Components Analysis (with Gap Support) ‚Äî extractScalesGap","text":"function calculates scales-based descriptors derived Principal Components Analysis (PCA), gap support. Users can provide customized amino acid property matrices. function implements core computation procedure needed scales-based descriptors derived AA-Properties (AAindex) scales-based descriptors derived 20+ classes 2D 3D molecular descriptors (Topological, WHIM, VHSE, etc.) protr package.","code":""},{"path":"https://nanx.me/protr/reference/extractScalesGap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales-Based Descriptors derived by Principal Components Analysis (with Gap Support) ‚Äî extractScalesGap","text":"","code":"extractScalesGap(x, propmat, pc, lag, scale = TRUE, silent = TRUE)"},{"path":"https://nanx.me/protr/reference/extractScalesGap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales-Based Descriptors derived by Principal Components Analysis (with Gap Support) ‚Äî extractScalesGap","text":"x character vector, input protein sequence. Use '-' represent gaps sequence. propmat matrix containing properties amino acids. row represent one amino acid type, column represents one property. Note one-letter row names must provided need seek properties AA type. pc Integer. Use first pc principal components scales. Must greater number AA properties provided. lag lag parameter. Must less amino acids. scale Logical. auto-scale property matrix (propmat) PCA? Default TRUE. silent Logical. Whether print standard deviation, proportion variance cumulative proportion selected principal components . Default TRUE.","code":""},{"path":"https://nanx.me/protr/reference/extractScalesGap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scales-Based Descriptors derived by Principal Components Analysis (with Gap Support) ‚Äî extractScalesGap","text":"length lag * p^2 named vector, p number scales (principal components) selected.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/extractScalesGap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scales-Based Descriptors derived by Principal Components Analysis (with Gap Support) ‚Äî extractScalesGap","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/extractScalesGap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scales-Based Descriptors derived by Principal Components Analysis (with Gap Support) ‚Äî extractScalesGap","text":"","code":"# amino acid sequence with gaps x <- readFASTA(system.file(\"protseq/align.fasta\", package = \"protr\"))$`IXI_235` data(AAindex) AAidxmat <- t(na.omit(as.matrix(AAindex[, 7:26]))) scales <- extractScalesGap(x, propmat = AAidxmat, pc = 5, lag = 7, silent = FALSE) #> Summary of the first 5 principal components:  #>                             PC1      PC2      PC3      PC4     PC5 #> Standard deviation     12.38381 10.73268 7.742507 6.802462 5.22316 #> Proportion of Variance  0.28881  0.21693 0.112890 0.087140 0.05138 #> Cumulative Proportion   0.28881  0.50574 0.618640 0.705780 0.75716"},{"path":"https://nanx.me/protr/reference/extractTC.html","id":null,"dir":"Reference","previous_headings":"","what":"Tripeptide Composition Descriptor ‚Äî extractTC","title":"Tripeptide Composition Descriptor ‚Äî extractTC","text":"function calculates Tripeptide Composition descriptor (dim: 8,000).","code":""},{"path":"https://nanx.me/protr/reference/extractTC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tripeptide Composition Descriptor ‚Äî extractTC","text":"","code":"extractTC(x)"},{"path":"https://nanx.me/protr/reference/extractTC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tripeptide Composition Descriptor ‚Äî extractTC","text":"x character vector, input protein sequence.","code":""},{"path":"https://nanx.me/protr/reference/extractTC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tripeptide Composition Descriptor ‚Äî extractTC","text":"length 8,000 named vector","code":""},{"path":"https://nanx.me/protr/reference/extractTC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Tripeptide Composition Descriptor ‚Äî extractTC","text":"M. Bhasin, G. P. S. Raghava. Classification Nuclear Receptors Based Amino Acid Composition Dipeptide Composition. Journal Biological Chemistry, 2004, 279, 23262.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/extractTC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Tripeptide Composition Descriptor ‚Äî extractTC","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/extractTC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tripeptide Composition Descriptor ‚Äî extractTC","text":"","code":"x <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]] extractTC(x) #>         AAA         RAA         NAA         DAA         CAA         EAA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QAA         GAA         HAA         IAA         LAA         KAA  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MAA         FAA         PAA         SAA         TAA         WAA  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         YAA         VAA         ARA         RRA         NRA         DRA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CRA         ERA         QRA         GRA         HRA         IRA  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         LRA         KRA         MRA         FRA         PRA         SRA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TRA         WRA         YRA         VRA         ANA         RNA  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NNA         DNA         CNA         ENA         QNA         GNA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HNA         INA         LNA         KNA         MNA         FNA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PNA         SNA         TNA         WNA         YNA         VNA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ADA         RDA         NDA         DDA         CDA         EDA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QDA         GDA         HDA         IDA         LDA         KDA  #> 0.000000000 0.001785714 0.001785714 0.000000000 0.000000000 0.000000000  #>         MDA         FDA         PDA         SDA         TDA         WDA  #> 0.001785714 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         YDA         VDA         ACA         RCA         NCA         DCA  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         CCA         ECA         QCA         GCA         HCA         ICA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LCA         KCA         MCA         FCA         PCA         SCA  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TCA         WCA         YCA         VCA         AEA         REA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NEA         DEA         CEA         EEA         QEA         GEA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HEA         IEA         LEA         KEA         MEA         FEA  #> 0.001785714 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         PEA         SEA         TEA         WEA         YEA         VEA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AQA         RQA         NQA         DQA         CQA         EQA  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QQA         GQA         HQA         IQA         LQA         KQA  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MQA         FQA         PQA         SQA         TQA         WQA  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.001785714  #>         YQA         VQA         AGA         RGA         NGA         DGA  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         CGA         EGA         QGA         GGA         HGA         IGA  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LGA         KGA         MGA         FGA         PGA         SGA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.003571429  #>         TGA         WGA         YGA         VGA         AHA         RHA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NHA         DHA         CHA         EHA         QHA         GHA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HHA         IHA         LHA         KHA         MHA         FHA  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         PHA         SHA         THA         WHA         YHA         VHA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AIA         RIA         NIA         DIA         CIA         EIA  #> 0.000000000 0.000000000 0.000000000 0.003571429 0.000000000 0.000000000  #>         QIA         GIA         HIA         IIA         LIA         KIA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MIA         FIA         PIA         SIA         TIA         WIA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YIA         VIA         ALA         RLA         NLA         DLA  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         CLA         ELA         QLA         GLA         HLA         ILA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LLA         KLA         MLA         FLA         PLA         SLA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TLA         WLA         YLA         VLA         AKA         RKA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NKA         DKA         CKA         EKA         QKA         GKA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HKA         IKA         LKA         KKA         MKA         FKA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         PKA         SKA         TKA         WKA         YKA         VKA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AMA         RMA         NMA         DMA         CMA         EMA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QMA         GMA         HMA         IMA         LMA         KMA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MMA         FMA         PMA         SMA         TMA         WMA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YMA         VMA         AFA         RFA         NFA         DFA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CFA         EFA         QFA         GFA         HFA         IFA  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.001785714  #>         LFA         KFA         MFA         FFA         PFA         SFA  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TFA         WFA         YFA         VFA         APA         RPA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NPA         DPA         CPA         EPA         QPA         GPA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HPA         IPA         LPA         KPA         MPA         FPA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PPA         SPA         TPA         WPA         YPA         VPA  #> 0.001785714 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         ASA         RSA         NSA         DSA         CSA         ESA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QSA         GSA         HSA         ISA         LSA         KSA  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.001785714 0.000000000  #>         MSA         FSA         PSA         SSA         TSA         WSA  #> 0.000000000 0.000000000 0.001785714 0.001785714 0.000000000 0.000000000  #>         YSA         VSA         ATA         RTA         NTA         DTA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CTA         ETA         QTA         GTA         HTA         ITA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LTA         KTA         MTA         FTA         PTA         STA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         TTA         WTA         YTA         VTA         AWA         RWA  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         NWA         DWA         CWA         EWA         QWA         GWA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HWA         IWA         LWA         KWA         MWA         FWA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PWA         SWA         TWA         WWA         YWA         VWA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AYA         RYA         NYA         DYA         CYA         EYA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QYA         GYA         HYA         IYA         LYA         KYA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MYA         FYA         PYA         SYA         TYA         WYA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YYA         VYA         AVA         RVA         NVA         DVA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CVA         EVA         QVA         GVA         HVA         IVA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LVA         KVA         MVA         FVA         PVA         SVA  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TVA         WVA         YVA         VVA         AAR         RAR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NAR         DAR         CAR         EAR         QAR         GAR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         HAR         IAR         LAR         KAR         MAR         FAR  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PAR         SAR         TAR         WAR         YAR         VAR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ARR         RRR         NRR         DRR         CRR         ERR  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         QRR         GRR         HRR         IRR         LRR         KRR  #> 0.000000000 0.001785714 0.001785714 0.000000000 0.000000000 0.000000000  #>         MRR         FRR         PRR         SRR         TRR         WRR  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         YRR         VRR         ANR         RNR         NNR         DNR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CNR         ENR         QNR         GNR         HNR         INR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LNR         KNR         MNR         FNR         PNR         SNR  #> 0.001785714 0.001785714 0.000000000 0.000000000 0.000000000 0.001785714  #>         TNR         WNR         YNR         VNR         ADR         RDR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NDR         DDR         CDR         EDR         QDR         GDR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HDR         IDR         LDR         KDR         MDR         FDR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PDR         SDR         TDR         WDR         YDR         VDR  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ACR         RCR         NCR         DCR         CCR         ECR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QCR         GCR         HCR         ICR         LCR         KCR  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         MCR         FCR         PCR         SCR         TCR         WCR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YCR         VCR         AER         RER         NER         DER  #> 0.003571429 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CER         EER         QER         GER         HER         IER  #> 0.000000000 0.000000000 0.001785714 0.001785714 0.000000000 0.000000000  #>         LER         KER         MER         FER         PER         SER  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         TER         WER         YER         VER         AQR         RQR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NQR         DQR         CQR         EQR         QQR         GQR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HQR         IQR         LQR         KQR         MQR         FQR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PQR         SQR         TQR         WQR         YQR         VQR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AGR         RGR         NGR         DGR         CGR         EGR  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         QGR         GGR         HGR         IGR         LGR         KGR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         MGR         FGR         PGR         SGR         TGR         WGR  #> 0.000000000 0.000000000 0.000000000 0.003571429 0.000000000 0.000000000  #>         YGR         VGR         AHR         RHR         NHR         DHR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CHR         EHR         QHR         GHR         HHR         IHR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LHR         KHR         MHR         FHR         PHR         SHR  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         THR         WHR         YHR         VHR         AIR         RIR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         NIR         DIR         CIR         EIR         QIR         GIR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HIR         IIR         LIR         KIR         MIR         FIR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PIR         SIR         TIR         WIR         YIR         VIR  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         ALR         RLR         NLR         DLR         CLR         ELR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QLR         GLR         HLR         ILR         LLR         KLR  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         MLR         FLR         PLR         SLR         TLR         WLR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         YLR         VLR         AKR         RKR         NKR         DKR  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         CKR         EKR         QKR         GKR         HKR         IKR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LKR         KKR         MKR         FKR         PKR         SKR  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         TKR         WKR         YKR         VKR         AMR         RMR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NMR         DMR         CMR         EMR         QMR         GMR  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HMR         IMR         LMR         KMR         MMR         FMR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PMR         SMR         TMR         WMR         YMR         VMR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AFR         RFR         NFR         DFR         CFR         EFR  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         QFR         GFR         HFR         IFR         LFR         KFR  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MFR         FFR         PFR         SFR         TFR         WFR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YFR         VFR         APR         RPR         NPR         DPR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CPR         EPR         QPR         GPR         HPR         IPR  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         LPR         KPR         MPR         FPR         PPR         SPR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TPR         WPR         YPR         VPR         ASR         RSR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NSR         DSR         CSR         ESR         QSR         GSR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HSR         ISR         LSR         KSR         MSR         FSR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PSR         SSR         TSR         WSR         YSR         VSR  #> 0.000000000 0.003571429 0.000000000 0.000000000 0.000000000 0.000000000  #>         ATR         RTR         NTR         DTR         CTR         ETR  #> 0.000000000 0.000000000 0.000000000 0.003571429 0.000000000 0.000000000  #>         QTR         GTR         HTR         ITR         LTR         KTR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MTR         FTR         PTR         STR         TTR         WTR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YTR         VTR         AWR         RWR         NWR         DWR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CWR         EWR         QWR         GWR         HWR         IWR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LWR         KWR         MWR         FWR         PWR         SWR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TWR         WWR         YWR         VWR         AYR         RYR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         NYR         DYR         CYR         EYR         QYR         GYR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HYR         IYR         LYR         KYR         MYR         FYR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PYR         SYR         TYR         WYR         YYR         VYR  #> 0.000000000 0.001785714 0.001785714 0.000000000 0.000000000 0.000000000  #>         AVR         RVR         NVR         DVR         CVR         EVR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QVR         GVR         HVR         IVR         LVR         KVR  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         MVR         FVR         PVR         SVR         TVR         WVR  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YVR         VVR         AAN         RAN         NAN         DAN  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         CAN         EAN         QAN         GAN         HAN         IAN  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         LAN         KAN         MAN         FAN         PAN         SAN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TAN         WAN         YAN         VAN         ARN         RRN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NRN         DRN         CRN         ERN         QRN         GRN  #> 0.000000000 0.000000000 0.003571429 0.000000000 0.000000000 0.000000000  #>         HRN         IRN         LRN         KRN         MRN         FRN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PRN         SRN         TRN         WRN         YRN         VRN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ANN         RNN         NNN         DNN         CNN         ENN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QNN         GNN         HNN         INN         LNN         KNN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MNN         FNN         PNN         SNN         TNN         WNN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YNN         VNN         ADN         RDN         NDN         DDN  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         CDN         EDN         QDN         GDN         HDN         IDN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LDN         KDN         MDN         FDN         PDN         SDN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TDN         WDN         YDN         VDN         ACN         RCN  #> 0.001785714 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         NCN         DCN         CCN         ECN         QCN         GCN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HCN         ICN         LCN         KCN         MCN         FCN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PCN         SCN         TCN         WCN         YCN         VCN  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         AEN         REN         NEN         DEN         CEN         EEN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QEN         GEN         HEN         IEN         LEN         KEN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MEN         FEN         PEN         SEN         TEN         WEN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YEN         VEN         AQN         RQN         NQN         DQN  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         CQN         EQN         QQN         GQN         HQN         IQN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LQN         KQN         MQN         FQN         PQN         SQN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TQN         WQN         YQN         VQN         AGN         RGN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NGN         DGN         CGN         EGN         QGN         GGN  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         HGN         IGN         LGN         KGN         MGN         FGN  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.001785714  #>         PGN         SGN         TGN         WGN         YGN         VGN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AHN         RHN         NHN         DHN         CHN         EHN  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         QHN         GHN         HHN         IHN         LHN         KHN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         MHN         FHN         PHN         SHN         THN         WHN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YHN         VHN         AIN         RIN         NIN         DIN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CIN         EIN         QIN         GIN         HIN         IIN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LIN         KIN         MIN         FIN         PIN         SIN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TIN         WIN         YIN         VIN         ALN         RLN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NLN         DLN         CLN         ELN         QLN         GLN  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         HLN         ILN         LLN         KLN         MLN         FLN  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         PLN         SLN         TLN         WLN         YLN         VLN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AKN         RKN         NKN         DKN         CKN         EKN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QKN         GKN         HKN         IKN         LKN         KKN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         MKN         FKN         PKN         SKN         TKN         WKN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YKN         VKN         AMN         RMN         NMN         DMN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CMN         EMN         QMN         GMN         HMN         IMN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LMN         KMN         MMN         FMN         PMN         SMN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TMN         WMN         YMN         VMN         AFN         RFN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NFN         DFN         CFN         EFN         QFN         GFN  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         HFN         IFN         LFN         KFN         MFN         FFN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PFN         SFN         TFN         WFN         YFN         VFN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         APN         RPN         NPN         DPN         CPN         EPN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QPN         GPN         HPN         IPN         LPN         KPN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MPN         FPN         PPN         SPN         TPN         WPN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YPN         VPN         ASN         RSN         NSN         DSN  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         CSN         ESN         QSN         GSN         HSN         ISN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LSN         KSN         MSN         FSN         PSN         SSN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TSN         WSN         YSN         VSN         ATN         RTN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NTN         DTN         CTN         ETN         QTN         GTN  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         HTN         ITN         LTN         KTN         MTN         FTN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PTN         STN         TTN         WTN         YTN         VTN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         AWN         RWN         NWN         DWN         CWN         EWN  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         QWN         GWN         HWN         IWN         LWN         KWN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MWN         FWN         PWN         SWN         TWN         WWN  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         YWN         VWN         AYN         RYN         NYN         DYN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CYN         EYN         QYN         GYN         HYN         IYN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LYN         KYN         MYN         FYN         PYN         SYN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TYN         WYN         YYN         VYN         AVN         RVN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NVN         DVN         CVN         EVN         QVN         GVN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HVN         IVN         LVN         KVN         MVN         FVN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PVN         SVN         TVN         WVN         YVN         VVN  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AAD         RAD         NAD         DAD         CAD         EAD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QAD         GAD         HAD         IAD         LAD         KAD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MAD         FAD         PAD         SAD         TAD         WAD  #> 0.000000000 0.001785714 0.001785714 0.000000000 0.000000000 0.000000000  #>         YAD         VAD         ARD         RRD         NRD         DRD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         CRD         ERD         QRD         GRD         HRD         IRD  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         LRD         KRD         MRD         FRD         PRD         SRD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TRD         WRD         YRD         VRD         AND         RND  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NND         DND         CND         END         QND         GND  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         HND         IND         LND         KND         MND         FND  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         PND         SND         TND         WND         YND         VND  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ADD         RDD         NDD         DDD         CDD         EDD  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         QDD         GDD         HDD         IDD         LDD         KDD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MDD         FDD         PDD         SDD         TDD         WDD  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         YDD         VDD         ACD         RCD         NCD         DCD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CCD         ECD         QCD         GCD         HCD         ICD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LCD         KCD         MCD         FCD         PCD         SCD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TCD         WCD         YCD         VCD         AED         RED  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         NED         DED         CED         EED         QED         GED  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HED         IED         LED         KED         MED         FED  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PED         SED         TED         WED         YED         VED  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         AQD         RQD         NQD         DQD         CQD         EQD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QQD         GQD         HQD         IQD         LQD         KQD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MQD         FQD         PQD         SQD         TQD         WQD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YQD         VQD         AGD         RGD         NGD         DGD  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.001785714  #>         CGD         EGD         QGD         GGD         HGD         IGD  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         LGD         KGD         MGD         FGD         PGD         SGD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TGD         WGD         YGD         VGD         AHD         RHD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NHD         DHD         CHD         EHD         QHD         GHD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HHD         IHD         LHD         KHD         MHD         FHD  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         PHD         SHD         THD         WHD         YHD         VHD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AID         RID         NID         DID         CID         EID  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         QID         GID         HID         IID         LID         KID  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MID         FID         PID         SID         TID         WID  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YID         VID         ALD         RLD         NLD         DLD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CLD         ELD         QLD         GLD         HLD         ILD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LLD         KLD         MLD         FLD         PLD         SLD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TLD         WLD         YLD         VLD         AKD         RKD  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         NKD         DKD         CKD         EKD         QKD         GKD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         HKD         IKD         LKD         KKD         MKD         FKD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PKD         SKD         TKD         WKD         YKD         VKD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AMD         RMD         NMD         DMD         CMD         EMD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QMD         GMD         HMD         IMD         LMD         KMD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MMD         FMD         PMD         SMD         TMD         WMD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YMD         VMD         AFD         RFD         NFD         DFD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CFD         EFD         QFD         GFD         HFD         IFD  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         LFD         KFD         MFD         FFD         PFD         SFD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TFD         WFD         YFD         VFD         APD         RPD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         NPD         DPD         CPD         EPD         QPD         GPD  #> 0.003571429 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HPD         IPD         LPD         KPD         MPD         FPD  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         PPD         SPD         TPD         WPD         YPD         VPD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ASD         RSD         NSD         DSD         CSD         ESD  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         QSD         GSD         HSD         ISD         LSD         KSD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         MSD         FSD         PSD         SSD         TSD         WSD  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         YSD         VSD         ATD         RTD         NTD         DTD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CTD         ETD         QTD         GTD         HTD         ITD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LTD         KTD         MTD         FTD         PTD         STD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TTD         WTD         YTD         VTD         AWD         RWD  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         NWD         DWD         CWD         EWD         QWD         GWD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HWD         IWD         LWD         KWD         MWD         FWD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PWD         SWD         TWD         WWD         YWD         VWD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AYD         RYD         NYD         DYD         CYD         EYD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QYD         GYD         HYD         IYD         LYD         KYD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MYD         FYD         PYD         SYD         TYD         WYD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         YYD         VYD         AVD         RVD         NVD         DVD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CVD         EVD         QVD         GVD         HVD         IVD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LVD         KVD         MVD         FVD         PVD         SVD  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TVD         WVD         YVD         VVD         AAC         RAC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NAC         DAC         CAC         EAC         QAC         GAC  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         HAC         IAC         LAC         KAC         MAC         FAC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PAC         SAC         TAC         WAC         YAC         VAC  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ARC         RRC         NRC         DRC         CRC         ERC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QRC         GRC         HRC         IRC         LRC         KRC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MRC         FRC         PRC         SRC         TRC         WRC  #> 0.000000000 0.000000000 0.001785714 0.003571429 0.000000000 0.000000000  #>         YRC         VRC         ANC         RNC         NNC         DNC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CNC         ENC         QNC         GNC         HNC         INC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LNC         KNC         MNC         FNC         PNC         SNC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TNC         WNC         YNC         VNC         ADC         RDC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NDC         DDC         CDC         EDC         QDC         GDC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HDC         IDC         LDC         KDC         MDC         FDC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PDC         SDC         TDC         WDC         YDC         VDC  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         ACC         RCC         NCC         DCC         CCC         ECC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QCC         GCC         HCC         ICC         LCC         KCC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.001785714  #>         MCC         FCC         PCC         SCC         TCC         WCC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YCC         VCC         AEC         REC         NEC         DEC  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         CEC         EEC         QEC         GEC         HEC         IEC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LEC         KEC         MEC         FEC         PEC         SEC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TEC         WEC         YEC         VEC         AQC         RQC  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         NQC         DQC         CQC         EQC         QQC         GQC  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         HQC         IQC         LQC         KQC         MQC         FQC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PQC         SQC         TQC         WQC         YQC         VQC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AGC         RGC         NGC         DGC         CGC         EGC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QGC         GGC         HGC         IGC         LGC         KGC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         MGC         FGC         PGC         SGC         TGC         WGC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YGC         VGC         AHC         RHC         NHC         DHC  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         CHC         EHC         QHC         GHC         HHC         IHC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LHC         KHC         MHC         FHC         PHC         SHC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         THC         WHC         YHC         VHC         AIC         RIC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NIC         DIC         CIC         EIC         QIC         GIC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HIC         IIC         LIC         KIC         MIC         FIC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PIC         SIC         TIC         WIC         YIC         VIC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         ALC         RLC         NLC         DLC         CLC         ELC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QLC         GLC         HLC         ILC         LLC         KLC  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.001785714 0.000000000  #>         MLC         FLC         PLC         SLC         TLC         WLC  #> 0.001785714 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         YLC         VLC         AKC         RKC         NKC         DKC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CKC         EKC         QKC         GKC         HKC         IKC  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         LKC         KKC         MKC         FKC         PKC         SKC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TKC         WKC         YKC         VKC         AMC         RMC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NMC         DMC         CMC         EMC         QMC         GMC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HMC         IMC         LMC         KMC         MMC         FMC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PMC         SMC         TMC         WMC         YMC         VMC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AFC         RFC         NFC         DFC         CFC         EFC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         QFC         GFC         HFC         IFC         LFC         KFC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MFC         FFC         PFC         SFC         TFC         WFC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YFC         VFC         APC         RPC         NPC         DPC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CPC         EPC         QPC         GPC         HPC         IPC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LPC         KPC         MPC         FPC         PPC         SPC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TPC         WPC         YPC         VPC         ASC         RSC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         NSC         DSC         CSC         ESC         QSC         GSC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HSC         ISC         LSC         KSC         MSC         FSC  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         PSC         SSC         TSC         WSC         YSC         VSC  #> 0.001785714 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         ATC         RTC         NTC         DTC         CTC         ETC  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QTC         GTC         HTC         ITC         LTC         KTC  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         MTC         FTC         PTC         STC         TTC         WTC  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         YTC         VTC         AWC         RWC         NWC         DWC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CWC         EWC         QWC         GWC         HWC         IWC  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LWC         KWC         MWC         FWC         PWC         SWC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.003571429 0.000000000  #>         TWC         WWC         YWC         VWC         AYC         RYC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NYC         DYC         CYC         EYC         QYC         GYC  #> 0.003571429 0.000000000 0.000000000 0.003571429 0.000000000 0.000000000  #>         HYC         IYC         LYC         KYC         MYC         FYC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PYC         SYC         TYC         WYC         YYC         VYC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AVC         RVC         NVC         DVC         CVC         EVC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QVC         GVC         HVC         IVC         LVC         KVC  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         MVC         FVC         PVC         SVC         TVC         WVC  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.001785714 0.000000000  #>         YVC         VVC         AAE         RAE         NAE         DAE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CAE         EAE         QAE         GAE         HAE         IAE  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         LAE         KAE         MAE         FAE         PAE         SAE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TAE         WAE         YAE         VAE         ARE         RRE  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NRE         DRE         CRE         ERE         QRE         GRE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HRE         IRE         LRE         KRE         MRE         FRE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PRE         SRE         TRE         WRE         YRE         VRE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ANE         RNE         NNE         DNE         CNE         ENE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QNE         GNE         HNE         INE         LNE         KNE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MNE         FNE         PNE         SNE         TNE         WNE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YNE         VNE         ADE         RDE         NDE         DDE  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         CDE         EDE         QDE         GDE         HDE         IDE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LDE         KDE         MDE         FDE         PDE         SDE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TDE         WDE         YDE         VDE         ACE         RCE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NCE         DCE         CCE         ECE         QCE         GCE  #> 0.000000000 0.000000000 0.001785714 0.001785714 0.000000000 0.000000000  #>         HCE         ICE         LCE         KCE         MCE         FCE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PCE         SCE         TCE         WCE         YCE         VCE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AEE         REE         NEE         DEE         CEE         EEE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         QEE         GEE         HEE         IEE         LEE         KEE  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         MEE         FEE         PEE         SEE         TEE         WEE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YEE         VEE         AQE         RQE         NQE         DQE  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         CQE         EQE         QQE         GQE         HQE         IQE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LQE         KQE         MQE         FQE         PQE         SQE  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.001785714  #>         TQE         WQE         YQE         VQE         AGE         RGE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NGE         DGE         CGE         EGE         QGE         GGE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HGE         IGE         LGE         KGE         MGE         FGE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PGE         SGE         TGE         WGE         YGE         VGE  #> 0.003571429 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AHE         RHE         NHE         DHE         CHE         EHE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QHE         GHE         HHE         IHE         LHE         KHE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         MHE         FHE         PHE         SHE         THE         WHE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YHE         VHE         AIE         RIE         NIE         DIE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CIE         EIE         QIE         GIE         HIE         IIE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LIE         KIE         MIE         FIE         PIE         SIE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TIE         WIE         YIE         VIE         ALE         RLE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NLE         DLE         CLE         ELE         QLE         GLE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HLE         ILE         LLE         KLE         MLE         FLE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PLE         SLE         TLE         WLE         YLE         VLE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AKE         RKE         NKE         DKE         CKE         EKE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QKE         GKE         HKE         IKE         LKE         KKE  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.001785714 0.000000000  #>         MKE         FKE         PKE         SKE         TKE         WKE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YKE         VKE         AME         RME         NME         DME  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CME         EME         QME         GME         HME         IME  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LME         KME         MME         FME         PME         SME  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TME         WME         YME         VME         AFE         RFE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NFE         DFE         CFE         EFE         QFE         GFE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HFE         IFE         LFE         KFE         MFE         FFE  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         PFE         SFE         TFE         WFE         YFE         VFE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         APE         RPE         NPE         DPE         CPE         EPE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         QPE         GPE         HPE         IPE         LPE         KPE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MPE         FPE         PPE         SPE         TPE         WPE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YPE         VPE         ASE         RSE         NSE         DSE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CSE         ESE         QSE         GSE         HSE         ISE  #> 0.003571429 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LSE         KSE         MSE         FSE         PSE         SSE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         TSE         WSE         YSE         VSE         ATE         RTE  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         NTE         DTE         CTE         ETE         QTE         GTE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HTE         ITE         LTE         KTE         MTE         FTE  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         PTE         STE         TTE         WTE         YTE         VTE  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         AWE         RWE         NWE         DWE         CWE         EWE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QWE         GWE         HWE         IWE         LWE         KWE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MWE         FWE         PWE         SWE         TWE         WWE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         YWE         VWE         AYE         RYE         NYE         DYE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CYE         EYE         QYE         GYE         HYE         IYE  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LYE         KYE         MYE         FYE         PYE         SYE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TYE         WYE         YYE         VYE         AVE         RVE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         NVE         DVE         CVE         EVE         QVE         GVE  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         HVE         IVE         LVE         KVE         MVE         FVE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PVE         SVE         TVE         WVE         YVE         VVE  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AAQ         RAQ         NAQ         DAQ         CAQ         EAQ  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.001785714 0.000000000  #>         QAQ         GAQ         HAQ         IAQ         LAQ         KAQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         MAQ         FAQ         PAQ         SAQ         TAQ         WAQ  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.001785714 0.000000000  #>         YAQ         VAQ         ARQ         RRQ         NRQ         DRQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CRQ         ERQ         QRQ         GRQ         HRQ         IRQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LRQ         KRQ         MRQ         FRQ         PRQ         SRQ  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TRQ         WRQ         YRQ         VRQ         ANQ         RNQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NNQ         DNQ         CNQ         ENQ         QNQ         GNQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HNQ         INQ         LNQ         KNQ         MNQ         FNQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PNQ         SNQ         TNQ         WNQ         YNQ         VNQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ADQ         RDQ         NDQ         DDQ         CDQ         EDQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         QDQ         GDQ         HDQ         IDQ         LDQ         KDQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MDQ         FDQ         PDQ         SDQ         TDQ         WDQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YDQ         VDQ         ACQ         RCQ         NCQ         DCQ  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         CCQ         ECQ         QCQ         GCQ         HCQ         ICQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LCQ         KCQ         MCQ         FCQ         PCQ         SCQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TCQ         WCQ         YCQ         VCQ         AEQ         REQ  #> 0.001785714 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         NEQ         DEQ         CEQ         EEQ         QEQ         GEQ  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         HEQ         IEQ         LEQ         KEQ         MEQ         FEQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PEQ         SEQ         TEQ         WEQ         YEQ         VEQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AQQ         RQQ         NQQ         DQQ         CQQ         EQQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         QQQ         GQQ         HQQ         IQQ         LQQ         KQQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MQQ         FQQ         PQQ         SQQ         TQQ         WQQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YQQ         VQQ         AGQ         RGQ         NGQ         DGQ  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CGQ         EGQ         QGQ         GGQ         HGQ         IGQ  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LGQ         KGQ         MGQ         FGQ         PGQ         SGQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TGQ         WGQ         YGQ         VGQ         AHQ         RHQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NHQ         DHQ         CHQ         EHQ         QHQ         GHQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         HHQ         IHQ         LHQ         KHQ         MHQ         FHQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PHQ         SHQ         THQ         WHQ         YHQ         VHQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AIQ         RIQ         NIQ         DIQ         CIQ         EIQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QIQ         GIQ         HIQ         IIQ         LIQ         KIQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MIQ         FIQ         PIQ         SIQ         TIQ         WIQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YIQ         VIQ         ALQ         RLQ         NLQ         DLQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         CLQ         ELQ         QLQ         GLQ         HLQ         ILQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LLQ         KLQ         MLQ         FLQ         PLQ         SLQ  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TLQ         WLQ         YLQ         VLQ         AKQ         RKQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NKQ         DKQ         CKQ         EKQ         QKQ         GKQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HKQ         IKQ         LKQ         KKQ         MKQ         FKQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PKQ         SKQ         TKQ         WKQ         YKQ         VKQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AMQ         RMQ         NMQ         DMQ         CMQ         EMQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QMQ         GMQ         HMQ         IMQ         LMQ         KMQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MMQ         FMQ         PMQ         SMQ         TMQ         WMQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YMQ         VMQ         AFQ         RFQ         NFQ         DFQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CFQ         EFQ         QFQ         GFQ         HFQ         IFQ  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LFQ         KFQ         MFQ         FFQ         PFQ         SFQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TFQ         WFQ         YFQ         VFQ         APQ         RPQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NPQ         DPQ         CPQ         EPQ         QPQ         GPQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.001785714  #>         HPQ         IPQ         LPQ         KPQ         MPQ         FPQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PPQ         SPQ         TPQ         WPQ         YPQ         VPQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ASQ         RSQ         NSQ         DSQ         CSQ         ESQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QSQ         GSQ         HSQ         ISQ         LSQ         KSQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MSQ         FSQ         PSQ         SSQ         TSQ         WSQ  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.001785714 0.000000000  #>         YSQ         VSQ         ATQ         RTQ         NTQ         DTQ  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CTQ         ETQ         QTQ         GTQ         HTQ         ITQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LTQ         KTQ         MTQ         FTQ         PTQ         STQ  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         TTQ         WTQ         YTQ         VTQ         AWQ         RWQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NWQ         DWQ         CWQ         EWQ         QWQ         GWQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HWQ         IWQ         LWQ         KWQ         MWQ         FWQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PWQ         SWQ         TWQ         WWQ         YWQ         VWQ  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AYQ         RYQ         NYQ         DYQ         CYQ         EYQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QYQ         GYQ         HYQ         IYQ         LYQ         KYQ  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         MYQ         FYQ         PYQ         SYQ         TYQ         WYQ  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         YYQ         VYQ         AVQ         RVQ         NVQ         DVQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CVQ         EVQ         QVQ         GVQ         HVQ         IVQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LVQ         KVQ         MVQ         FVQ         PVQ         SVQ  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TVQ         WVQ         YVQ         VVQ         AAG         RAG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NAG         DAG         CAG         EAG         QAG         GAG  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         HAG         IAG         LAG         KAG         MAG         FAG  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.001785714  #>         PAG         SAG         TAG         WAG         YAG         VAG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ARG         RRG         NRG         DRG         CRG         ERG  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         QRG         GRG         HRG         IRG         LRG         KRG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         MRG         FRG         PRG         SRG         TRG         WRG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YRG         VRG         ANG         RNG         NNG         DNG  #> 0.003571429 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CNG         ENG         QNG         GNG         HNG         ING  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         LNG         KNG         MNG         FNG         PNG         SNG  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         TNG         WNG         YNG         VNG         ADG         RDG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NDG         DDG         CDG         EDG         QDG         GDG  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HDG         IDG         LDG         KDG         MDG         FDG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PDG         SDG         TDG         WDG         YDG         VDG  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ACG         RCG         NCG         DCG         CCG         ECG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QCG         GCG         HCG         ICG         LCG         KCG  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.003571429 0.000000000  #>         MCG         FCG         PCG         SCG         TCG         WCG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         YCG         VCG         AEG         REG         NEG         DEG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CEG         EEG         QEG         GEG         HEG         IEG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LEG         KEG         MEG         FEG         PEG         SEG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.001785714  #>         TEG         WEG         YEG         VEG         AQG         RQG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NQG         DQG         CQG         EQG         QQG         GQG  #> 0.000000000 0.001785714 0.001785714 0.000000000 0.000000000 0.000000000  #>         HQG         IQG         LQG         KQG         MQG         FQG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PQG         SQG         TQG         WQG         YQG         VQG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AGG         RGG         NGG         DGG         CGG         EGG  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.001785714 0.000000000  #>         QGG         GGG         HGG         IGG         LGG         KGG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         MGG         FGG         PGG         SGG         TGG         WGG  #> 0.000000000 0.000000000 0.000000000 0.003571429 0.000000000 0.000000000  #>         YGG         VGG         AHG         RHG         NHG         DHG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CHG         EHG         QHG         GHG         HHG         IHG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LHG         KHG         MHG         FHG         PHG         SHG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         THG         WHG         YHG         VHG         AIG         RIG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NIG         DIG         CIG         EIG         QIG         GIG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HIG         IIG         LIG         KIG         MIG         FIG  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         PIG         SIG         TIG         WIG         YIG         VIG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ALG         RLG         NLG         DLG         CLG         ELG  #> 0.001785714 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         QLG         GLG         HLG         ILG         LLG         KLG  #> 0.000000000 0.005357143 0.000000000 0.001785714 0.000000000 0.000000000  #>         MLG         FLG         PLG         SLG         TLG         WLG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YLG         VLG         AKG         RKG         NKG         DKG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CKG         EKG         QKG         GKG         HKG         IKG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         LKG         KKG         MKG         FKG         PKG         SKG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TKG         WKG         YKG         VKG         AMG         RMG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NMG         DMG         CMG         EMG         QMG         GMG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HMG         IMG         LMG         KMG         MMG         FMG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PMG         SMG         TMG         WMG         YMG         VMG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AFG         RFG         NFG         DFG         CFG         EFG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QFG         GFG         HFG         IFG         LFG         KFG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MFG         FFG         PFG         SFG         TFG         WFG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YFG         VFG         APG         RPG         NPG         DPG  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CPG         EPG         QPG         GPG         HPG         IPG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LPG         KPG         MPG         FPG         PPG         SPG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         TPG         WPG         YPG         VPG         ASG         RSG  #> 0.000000000 0.000000000 0.000000000 0.003571429 0.000000000 0.001785714  #>         NSG         DSG         CSG         ESG         QSG         GSG  #> 0.001785714 0.001785714 0.000000000 0.003571429 0.000000000 0.000000000  #>         HSG         ISG         LSG         KSG         MSG         FSG  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         PSG         SSG         TSG         WSG         YSG         VSG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         ATG         RTG         NTG         DTG         CTG         ETG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QTG         GTG         HTG         ITG         LTG         KTG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MTG         FTG         PTG         STG         TTG         WTG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YTG         VTG         AWG         RWG         NWG         DWG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CWG         EWG         QWG         GWG         HWG         IWG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LWG         KWG         MWG         FWG         PWG         SWG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         TWG         WWG         YWG         VWG         AYG         RYG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NYG         DYG         CYG         EYG         QYG         GYG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         HYG         IYG         LYG         KYG         MYG         FYG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PYG         SYG         TYG         WYG         YYG         VYG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AVG         RVG         NVG         DVG         CVG         EVG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QVG         GVG         HVG         IVG         LVG         KVG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         MVG         FVG         PVG         SVG         TVG         WVG  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YVG         VVG         AAH         RAH         NAH         DAH  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         CAH         EAH         QAH         GAH         HAH         IAH  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         LAH         KAH         MAH         FAH         PAH         SAH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TAH         WAH         YAH         VAH         ARH         RRH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NRH         DRH         CRH         ERH         QRH         GRH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HRH         IRH         LRH         KRH         MRH         FRH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PRH         SRH         TRH         WRH         YRH         VRH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ANH         RNH         NNH         DNH         CNH         ENH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QNH         GNH         HNH         INH         LNH         KNH  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         MNH         FNH         PNH         SNH         TNH         WNH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YNH         VNH         ADH         RDH         NDH         DDH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CDH         EDH         QDH         GDH         HDH         IDH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LDH         KDH         MDH         FDH         PDH         SDH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TDH         WDH         YDH         VDH         ACH         RCH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NCH         DCH         CCH         ECH         QCH         GCH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         HCH         ICH         LCH         KCH         MCH         FCH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PCH         SCH         TCH         WCH         YCH         VCH  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         AEH         REH         NEH         DEH         CEH         EEH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QEH         GEH         HEH         IEH         LEH         KEH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MEH         FEH         PEH         SEH         TEH         WEH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YEH         VEH         AQH         RQH         NQH         DQH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CQH         EQH         QQH         GQH         HQH         IQH  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         LQH         KQH         MQH         FQH         PQH         SQH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         TQH         WQH         YQH         VQH         AGH         RGH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NGH         DGH         CGH         EGH         QGH         GGH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HGH         IGH         LGH         KGH         MGH         FGH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PGH         SGH         TGH         WGH         YGH         VGH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AHH         RHH         NHH         DHH         CHH         EHH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QHH         GHH         HHH         IHH         LHH         KHH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MHH         FHH         PHH         SHH         THH         WHH  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         YHH         VHH         AIH         RIH         NIH         DIH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CIH         EIH         QIH         GIH         HIH         IIH  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         LIH         KIH         MIH         FIH         PIH         SIH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TIH         WIH         YIH         VIH         ALH         RLH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NLH         DLH         CLH         ELH         QLH         GLH  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HLH         ILH         LLH         KLH         MLH         FLH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PLH         SLH         TLH         WLH         YLH         VLH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AKH         RKH         NKH         DKH         CKH         EKH  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QKH         GKH         HKH         IKH         LKH         KKH  #> 0.000000000 0.003571429 0.000000000 0.000000000 0.000000000 0.000000000  #>         MKH         FKH         PKH         SKH         TKH         WKH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YKH         VKH         AMH         RMH         NMH         DMH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CMH         EMH         QMH         GMH         HMH         IMH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LMH         KMH         MMH         FMH         PMH         SMH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TMH         WMH         YMH         VMH         AFH         RFH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NFH         DFH         CFH         EFH         QFH         GFH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HFH         IFH         LFH         KFH         MFH         FFH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PFH         SFH         TFH         WFH         YFH         VFH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         APH         RPH         NPH         DPH         CPH         EPH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QPH         GPH         HPH         IPH         LPH         KPH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MPH         FPH         PPH         SPH         TPH         WPH  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         YPH         VPH         ASH         RSH         NSH         DSH  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         CSH         ESH         QSH         GSH         HSH         ISH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LSH         KSH         MSH         FSH         PSH         SSH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TSH         WSH         YSH         VSH         ATH         RTH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NTH         DTH         CTH         ETH         QTH         GTH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         HTH         ITH         LTH         KTH         MTH         FTH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PTH         STH         TTH         WTH         YTH         VTH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AWH         RWH         NWH         DWH         CWH         EWH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QWH         GWH         HWH         IWH         LWH         KWH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MWH         FWH         PWH         SWH         TWH         WWH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YWH         VWH         AYH         RYH         NYH         DYH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CYH         EYH         QYH         GYH         HYH         IYH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LYH         KYH         MYH         FYH         PYH         SYH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TYH         WYH         YYH         VYH         AVH         RVH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NVH         DVH         CVH         EVH         QVH         GVH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HVH         IVH         LVH         KVH         MVH         FVH  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         PVH         SVH         TVH         WVH         YVH         VVH  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AAI         RAI         NAI         DAI         CAI         EAI  #> 0.001785714 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         QAI         GAI         HAI         IAI         LAI         KAI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MAI         FAI         PAI         SAI         TAI         WAI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YAI         VAI         ARI         RRI         NRI         DRI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CRI         ERI         QRI         GRI         HRI         IRI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LRI         KRI         MRI         FRI         PRI         SRI  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         TRI         WRI         YRI         VRI         ANI         RNI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NNI         DNI         CNI         ENI         QNI         GNI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HNI         INI         LNI         KNI         MNI         FNI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PNI         SNI         TNI         WNI         YNI         VNI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ADI         RDI         NDI         DDI         CDI         EDI  #> 0.001785714 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         QDI         GDI         HDI         IDI         LDI         KDI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MDI         FDI         PDI         SDI         TDI         WDI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YDI         VDI         ACI         RCI         NCI         DCI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CCI         ECI         QCI         GCI         HCI         ICI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LCI         KCI         MCI         FCI         PCI         SCI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TCI         WCI         YCI         VCI         AEI         REI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NEI         DEI         CEI         EEI         QEI         GEI  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.001785714 0.000000000  #>         HEI         IEI         LEI         KEI         MEI         FEI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PEI         SEI         TEI         WEI         YEI         VEI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AQI         RQI         NQI         DQI         CQI         EQI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QQI         GQI         HQI         IQI         LQI         KQI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MQI         FQI         PQI         SQI         TQI         WQI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YQI         VQI         AGI         RGI         NGI         DGI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CGI         EGI         QGI         GGI         HGI         IGI  #> 0.000000000 0.000000000 0.001785714 0.001785714 0.000000000 0.000000000  #>         LGI         KGI         MGI         FGI         PGI         SGI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TGI         WGI         YGI         VGI         AHI         RHI  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         NHI         DHI         CHI         EHI         QHI         GHI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HHI         IHI         LHI         KHI         MHI         FHI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PHI         SHI         THI         WHI         YHI         VHI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AII         RII         NII         DII         CII         EII  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QII         GII         HII         III         LII         KII  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         MII         FII         PII         SII         TII         WII  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YII         VII         ALI         RLI         NLI         DLI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CLI         ELI         QLI         GLI         HLI         ILI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.003571429  #>         LLI         KLI         MLI         FLI         PLI         SLI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TLI         WLI         YLI         VLI         AKI         RKI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NKI         DKI         CKI         EKI         QKI         GKI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HKI         IKI         LKI         KKI         MKI         FKI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PKI         SKI         TKI         WKI         YKI         VKI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AMI         RMI         NMI         DMI         CMI         EMI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QMI         GMI         HMI         IMI         LMI         KMI  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MMI         FMI         PMI         SMI         TMI         WMI  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         YMI         VMI         AFI         RFI         NFI         DFI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CFI         EFI         QFI         GFI         HFI         IFI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LFI         KFI         MFI         FFI         PFI         SFI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TFI         WFI         YFI         VFI         API         RPI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NPI         DPI         CPI         EPI         QPI         GPI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HPI         IPI         LPI         KPI         MPI         FPI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PPI         SPI         TPI         WPI         YPI         VPI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ASI         RSI         NSI         DSI         CSI         ESI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QSI         GSI         HSI         ISI         LSI         KSI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MSI         FSI         PSI         SSI         TSI         WSI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YSI         VSI         ATI         RTI         NTI         DTI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CTI         ETI         QTI         GTI         HTI         ITI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LTI         KTI         MTI         FTI         PTI         STI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TTI         WTI         YTI         VTI         AWI         RWI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NWI         DWI         CWI         EWI         QWI         GWI  #> 0.000000000 0.001785714 0.001785714 0.000000000 0.000000000 0.000000000  #>         HWI         IWI         LWI         KWI         MWI         FWI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PWI         SWI         TWI         WWI         YWI         VWI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AYI         RYI         NYI         DYI         CYI         EYI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QYI         GYI         HYI         IYI         LYI         KYI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         MYI         FYI         PYI         SYI         TYI         WYI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YYI         VYI         AVI         RVI         NVI         DVI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CVI         EVI         QVI         GVI         HVI         IVI  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         LVI         KVI         MVI         FVI         PVI         SVI  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TVI         WVI         YVI         VVI         AAL         RAL  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NAL         DAL         CAL         EAL         QAL         GAL  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.003571429 0.000000000  #>         HAL         IAL         LAL         KAL         MAL         FAL  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         PAL         SAL         TAL         WAL         YAL         VAL  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         ARL         RRL         NRL         DRL         CRL         ERL  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.001785714  #>         QRL         GRL         HRL         IRL         LRL         KRL  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         MRL         FRL         PRL         SRL         TRL         WRL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YRL         VRL         ANL         RNL         NNL         DNL  #> 0.000000000 0.001785714 0.001785714 0.000000000 0.000000000 0.000000000  #>         CNL         ENL         QNL         GNL         HNL         INL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LNL         KNL         MNL         FNL         PNL         SNL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TNL         WNL         YNL         VNL         ADL         RDL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         NDL         DDL         CDL         EDL         QDL         GDL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HDL         IDL         LDL         KDL         MDL         FDL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PDL         SDL         TDL         WDL         YDL         VDL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ACL         RCL         NCL         DCL         CCL         ECL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QCL         GCL         HCL         ICL         LCL         KCL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MCL         FCL         PCL         SCL         TCL         WCL  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         YCL         VCL         AEL         REL         NEL         DEL  #> 0.000000000 0.003571429 0.000000000 0.000000000 0.000000000 0.000000000  #>         CEL         EEL         QEL         GEL         HEL         IEL  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LEL         KEL         MEL         FEL         PEL         SEL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TEL         WEL         YEL         VEL         AQL         RQL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NQL         DQL         CQL         EQL         QQL         GQL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HQL         IQL         LQL         KQL         MQL         FQL  #> 0.000000000 0.000000000 0.003571429 0.000000000 0.000000000 0.000000000  #>         PQL         SQL         TQL         WQL         YQL         VQL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AGL         RGL         NGL         DGL         CGL         EGL  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.001785714 0.000000000  #>         QGL         GGL         HGL         IGL         LGL         KGL  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.003571429 0.000000000  #>         MGL         FGL         PGL         SGL         TGL         WGL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         YGL         VGL         AHL         RHL         NHL         DHL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CHL         EHL         QHL         GHL         HHL         IHL  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.001785714 0.000000000  #>         LHL         KHL         MHL         FHL         PHL         SHL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         THL         WHL         YHL         VHL         AIL         RIL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NIL         DIL         CIL         EIL         QIL         GIL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         HIL         IIL         LIL         KIL         MIL         FIL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         PIL         SIL         TIL         WIL         YIL         VIL  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.001785714  #>         ALL         RLL         NLL         DLL         CLL         ELL  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QLL         GLL         HLL         ILL         LLL         KLL  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.001785714 0.000000000  #>         MLL         FLL         PLL         SLL         TLL         WLL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YLL         VLL         AKL         RKL         NKL         DKL  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         CKL         EKL         QKL         GKL         HKL         IKL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LKL         KKL         MKL         FKL         PKL         SKL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TKL         WKL         YKL         VKL         AML         RML  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NML         DML         CML         EML         QML         GML  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HML         IML         LML         KML         MML         FML  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PML         SML         TML         WML         YML         VML  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AFL         RFL         NFL         DFL         CFL         EFL  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         QFL         GFL         HFL         IFL         LFL         KFL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MFL         FFL         PFL         SFL         TFL         WFL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YFL         VFL         APL         RPL         NPL         DPL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CPL         EPL         QPL         GPL         HPL         IPL  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         LPL         KPL         MPL         FPL         PPL         SPL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TPL         WPL         YPL         VPL         ASL         RSL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NSL         DSL         CSL         ESL         QSL         GSL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HSL         ISL         LSL         KSL         MSL         FSL  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PSL         SSL         TSL         WSL         YSL         VSL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ATL         RTL         NTL         DTL         CTL         ETL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QTL         GTL         HTL         ITL         LTL         KTL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MTL         FTL         PTL         STL         TTL         WTL  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YTL         VTL         AWL         RWL         NWL         DWL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CWL         EWL         QWL         GWL         HWL         IWL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LWL         KWL         MWL         FWL         PWL         SWL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         TWL         WWL         YWL         VWL         AYL         RYL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NYL         DYL         CYL         EYL         QYL         GYL  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HYL         IYL         LYL         KYL         MYL         FYL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PYL         SYL         TYL         WYL         YYL         VYL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AVL         RVL         NVL         DVL         CVL         EVL  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         QVL         GVL         HVL         IVL         LVL         KVL  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         MVL         FVL         PVL         SVL         TVL         WVL  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         YVL         VVL         AAK         RAK         NAK         DAK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         CAK         EAK         QAK         GAK         HAK         IAK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LAK         KAK         MAK         FAK         PAK         SAK  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         TAK         WAK         YAK         VAK         ARK         RRK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NRK         DRK         CRK         ERK         QRK         GRK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HRK         IRK         LRK         KRK         MRK         FRK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PRK         SRK         TRK         WRK         YRK         VRK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ANK         RNK         NNK         DNK         CNK         ENK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QNK         GNK         HNK         INK         LNK         KNK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MNK         FNK         PNK         SNK         TNK         WNK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YNK         VNK         ADK         RDK         NDK         DDK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CDK         EDK         QDK         GDK         HDK         IDK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LDK         KDK         MDK         FDK         PDK         SDK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TDK         WDK         YDK         VDK         ACK         RCK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NCK         DCK         CCK         ECK         QCK         GCK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HCK         ICK         LCK         KCK         MCK         FCK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PCK         SCK         TCK         WCK         YCK         VCK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AEK         REK         NEK         DEK         CEK         EEK  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         QEK         GEK         HEK         IEK         LEK         KEK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MEK         FEK         PEK         SEK         TEK         WEK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YEK         VEK         AQK         RQK         NQK         DQK  #> 0.000000000 0.001785714 0.001785714 0.000000000 0.000000000 0.000000000  #>         CQK         EQK         QQK         GQK         HQK         IQK  #> 0.000000000 0.001785714 0.000000000 0.001785714 0.000000000 0.000000000  #>         LQK         KQK         MQK         FQK         PQK         SQK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TQK         WQK         YQK         VQK         AGK         RGK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.003571429 0.000000000  #>         NGK         DGK         CGK         EGK         QGK         GGK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HGK         IGK         LGK         KGK         MGK         FGK  #> 0.000000000 0.001785714 0.001785714 0.000000000 0.000000000 0.000000000  #>         PGK         SGK         TGK         WGK         YGK         VGK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         AHK         RHK         NHK         DHK         CHK         EHK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QHK         GHK         HHK         IHK         LHK         KHK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MHK         FHK         PHK         SHK         THK         WHK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YHK         VHK         AIK         RIK         NIK         DIK  #> 0.000000000 0.001785714 0.000000000 0.001785714 0.000000000 0.000000000  #>         CIK         EIK         QIK         GIK         HIK         IIK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LIK         KIK         MIK         FIK         PIK         SIK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TIK         WIK         YIK         VIK         ALK         RLK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         NLK         DLK         CLK         ELK         QLK         GLK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         HLK         ILK         LLK         KLK         MLK         FLK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PLK         SLK         TLK         WLK         YLK         VLK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         AKK         RKK         NKK         DKK         CKK         EKK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QKK         GKK         HKK         IKK         LKK         KKK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MKK         FKK         PKK         SKK         TKK         WKK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YKK         VKK         AMK         RMK         NMK         DMK  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         CMK         EMK         QMK         GMK         HMK         IMK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LMK         KMK         MMK         FMK         PMK         SMK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TMK         WMK         YMK         VMK         AFK         RFK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NFK         DFK         CFK         EFK         QFK         GFK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HFK         IFK         LFK         KFK         MFK         FFK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PFK         SFK         TFK         WFK         YFK         VFK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         APK         RPK         NPK         DPK         CPK         EPK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QPK         GPK         HPK         IPK         LPK         KPK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MPK         FPK         PPK         SPK         TPK         WPK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YPK         VPK         ASK         RSK         NSK         DSK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         CSK         ESK         QSK         GSK         HSK         ISK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LSK         KSK         MSK         FSK         PSK         SSK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TSK         WSK         YSK         VSK         ATK         RTK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NTK         DTK         CTK         ETK         QTK         GTK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HTK         ITK         LTK         KTK         MTK         FTK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PTK         STK         TTK         WTK         YTK         VTK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         AWK         RWK         NWK         DWK         CWK         EWK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QWK         GWK         HWK         IWK         LWK         KWK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MWK         FWK         PWK         SWK         TWK         WWK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YWK         VWK         AYK         RYK         NYK         DYK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CYK         EYK         QYK         GYK         HYK         IYK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LYK         KYK         MYK         FYK         PYK         SYK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TYK         WYK         YYK         VYK         AVK         RVK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NVK         DVK         CVK         EVK         QVK         GVK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HVK         IVK         LVK         KVK         MVK         FVK  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PVK         SVK         TVK         WVK         YVK         VVK  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AAM         RAM         NAM         DAM         CAM         EAM  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         QAM         GAM         HAM         IAM         LAM         KAM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MAM         FAM         PAM         SAM         TAM         WAM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YAM         VAM         ARM         RRM         NRM         DRM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CRM         ERM         QRM         GRM         HRM         IRM  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         LRM         KRM         MRM         FRM         PRM         SRM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TRM         WRM         YRM         VRM         ANM         RNM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NNM         DNM         CNM         ENM         QNM         GNM  #> 0.000000000 0.003571429 0.000000000 0.000000000 0.000000000 0.000000000  #>         HNM         INM         LNM         KNM         MNM         FNM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PNM         SNM         TNM         WNM         YNM         VNM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ADM         RDM         NDM         DDM         CDM         EDM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QDM         GDM         HDM         IDM         LDM         KDM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MDM         FDM         PDM         SDM         TDM         WDM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YDM         VDM         ACM         RCM         NCM         DCM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CCM         ECM         QCM         GCM         HCM         ICM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LCM         KCM         MCM         FCM         PCM         SCM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TCM         WCM         YCM         VCM         AEM         REM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NEM         DEM         CEM         EEM         QEM         GEM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HEM         IEM         LEM         KEM         MEM         FEM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PEM         SEM         TEM         WEM         YEM         VEM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AQM         RQM         NQM         DQM         CQM         EQM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QQM         GQM         HQM         IQM         LQM         KQM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MQM         FQM         PQM         SQM         TQM         WQM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         YQM         VQM         AGM         RGM         NGM         DGM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CGM         EGM         QGM         GGM         HGM         IGM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LGM         KGM         MGM         FGM         PGM         SGM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TGM         WGM         YGM         VGM         AHM         RHM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NHM         DHM         CHM         EHM         QHM         GHM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HHM         IHM         LHM         KHM         MHM         FHM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PHM         SHM         THM         WHM         YHM         VHM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AIM         RIM         NIM         DIM         CIM         EIM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QIM         GIM         HIM         IIM         LIM         KIM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MIM         FIM         PIM         SIM         TIM         WIM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YIM         VIM         ALM         RLM         NLM         DLM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CLM         ELM         QLM         GLM         HLM         ILM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LLM         KLM         MLM         FLM         PLM         SLM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TLM         WLM         YLM         VLM         AKM         RKM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NKM         DKM         CKM         EKM         QKM         GKM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HKM         IKM         LKM         KKM         MKM         FKM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PKM         SKM         TKM         WKM         YKM         VKM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AMM         RMM         NMM         DMM         CMM         EMM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QMM         GMM         HMM         IMM         LMM         KMM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MMM         FMM         PMM         SMM         TMM         WMM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YMM         VMM         AFM         RFM         NFM         DFM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CFM         EFM         QFM         GFM         HFM         IFM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LFM         KFM         MFM         FFM         PFM         SFM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TFM         WFM         YFM         VFM         APM         RPM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NPM         DPM         CPM         EPM         QPM         GPM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HPM         IPM         LPM         KPM         MPM         FPM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PPM         SPM         TPM         WPM         YPM         VPM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ASM         RSM         NSM         DSM         CSM         ESM  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         QSM         GSM         HSM         ISM         LSM         KSM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MSM         FSM         PSM         SSM         TSM         WSM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YSM         VSM         ATM         RTM         NTM         DTM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CTM         ETM         QTM         GTM         HTM         ITM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LTM         KTM         MTM         FTM         PTM         STM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TTM         WTM         YTM         VTM         AWM         RWM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NWM         DWM         CWM         EWM         QWM         GWM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HWM         IWM         LWM         KWM         MWM         FWM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PWM         SWM         TWM         WWM         YWM         VWM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AYM         RYM         NYM         DYM         CYM         EYM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QYM         GYM         HYM         IYM         LYM         KYM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MYM         FYM         PYM         SYM         TYM         WYM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YYM         VYM         AVM         RVM         NVM         DVM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CVM         EVM         QVM         GVM         HVM         IVM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LVM         KVM         MVM         FVM         PVM         SVM  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TVM         WVM         YVM         VVM         AAF         RAF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NAF         DAF         CAF         EAF         QAF         GAF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HAF         IAF         LAF         KAF         MAF         FAF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PAF         SAF         TAF         WAF         YAF         VAF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ARF         RRF         NRF         DRF         CRF         ERF  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.003571429  #>         QRF         GRF         HRF         IRF         LRF         KRF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MRF         FRF         PRF         SRF         TRF         WRF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YRF         VRF         ANF         RNF         NNF         DNF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CNF         ENF         QNF         GNF         HNF         INF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LNF         KNF         MNF         FNF         PNF         SNF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TNF         WNF         YNF         VNF         ADF         RDF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NDF         DDF         CDF         EDF         QDF         GDF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HDF         IDF         LDF         KDF         MDF         FDF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PDF         SDF         TDF         WDF         YDF         VDF  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         ACF         RCF         NCF         DCF         CCF         ECF  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         QCF         GCF         HCF         ICF         LCF         KCF  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         MCF         FCF         PCF         SCF         TCF         WCF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YCF         VCF         AEF         REF         NEF         DEF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CEF         EEF         QEF         GEF         HEF         IEF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LEF         KEF         MEF         FEF         PEF         SEF  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.001785714  #>         TEF         WEF         YEF         VEF         AQF         RQF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NQF         DQF         CQF         EQF         QQF         GQF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HQF         IQF         LQF         KQF         MQF         FQF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PQF         SQF         TQF         WQF         YQF         VQF  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AGF         RGF         NGF         DGF         CGF         EGF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         QGF         GGF         HGF         IGF         LGF         KGF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MGF         FGF         PGF         SGF         TGF         WGF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YGF         VGF         AHF         RHF         NHF         DHF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CHF         EHF         QHF         GHF         HHF         IHF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LHF         KHF         MHF         FHF         PHF         SHF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         THF         WHF         YHF         VHF         AIF         RIF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         NIF         DIF         CIF         EIF         QIF         GIF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HIF         IIF         LIF         KIF         MIF         FIF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PIF         SIF         TIF         WIF         YIF         VIF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ALF         RLF         NLF         DLF         CLF         ELF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QLF         GLF         HLF         ILF         LLF         KLF  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         MLF         FLF         PLF         SLF         TLF         WLF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YLF         VLF         AKF         RKF         NKF         DKF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CKF         EKF         QKF         GKF         HKF         IKF  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         LKF         KKF         MKF         FKF         PKF         SKF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TKF         WKF         YKF         VKF         AMF         RMF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NMF         DMF         CMF         EMF         QMF         GMF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HMF         IMF         LMF         KMF         MMF         FMF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PMF         SMF         TMF         WMF         YMF         VMF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AFF         RFF         NFF         DFF         CFF         EFF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QFF         GFF         HFF         IFF         LFF         KFF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MFF         FFF         PFF         SFF         TFF         WFF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YFF         VFF         APF         RPF         NPF         DPF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CPF         EPF         QPF         GPF         HPF         IPF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LPF         KPF         MPF         FPF         PPF         SPF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         TPF         WPF         YPF         VPF         ASF         RSF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NSF         DSF         CSF         ESF         QSF         GSF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HSF         ISF         LSF         KSF         MSF         FSF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PSF         SSF         TSF         WSF         YSF         VSF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ATF         RTF         NTF         DTF         CTF         ETF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QTF         GTF         HTF         ITF         LTF         KTF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MTF         FTF         PTF         STF         TTF         WTF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YTF         VTF         AWF         RWF         NWF         DWF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CWF         EWF         QWF         GWF         HWF         IWF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LWF         KWF         MWF         FWF         PWF         SWF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TWF         WWF         YWF         VWF         AYF         RYF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NYF         DYF         CYF         EYF         QYF         GYF  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         HYF         IYF         LYF         KYF         MYF         FYF  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         PYF         SYF         TYF         WYF         YYF         VYF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AVF         RVF         NVF         DVF         CVF         EVF  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QVF         GVF         HVF         IVF         LVF         KVF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MVF         FVF         PVF         SVF         TVF         WVF  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YVF         VVF         AAP         RAP         NAP         DAP  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CAP         EAP         QAP         GAP         HAP         IAP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LAP         KAP         MAP         FAP         PAP         SAP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TAP         WAP         YAP         VAP         ARP         RRP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         NRP         DRP         CRP         ERP         QRP         GRP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HRP         IRP         LRP         KRP         MRP         FRP  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.001785714 0.000000000  #>         PRP         SRP         TRP         WRP         YRP         VRP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ANP         RNP         NNP         DNP         CNP         ENP  #> 0.000000000 0.003571429 0.000000000 0.000000000 0.000000000 0.000000000  #>         QNP         GNP         HNP         INP         LNP         KNP  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MNP         FNP         PNP         SNP         TNP         WNP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YNP         VNP         ADP         RDP         NDP         DDP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CDP         EDP         QDP         GDP         HDP         IDP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LDP         KDP         MDP         FDP         PDP         SDP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TDP         WDP         YDP         VDP         ACP         RCP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NCP         DCP         CCP         ECP         QCP         GCP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         HCP         ICP         LCP         KCP         MCP         FCP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PCP         SCP         TCP         WCP         YCP         VCP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AEP         REP         NEP         DEP         CEP         EEP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QEP         GEP         HEP         IEP         LEP         KEP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MEP         FEP         PEP         SEP         TEP         WEP  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         YEP         VEP         AQP         RQP         NQP         DQP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CQP         EQP         QQP         GQP         HQP         IQP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LQP         KQP         MQP         FQP         PQP         SQP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         TQP         WQP         YQP         VQP         AGP         RGP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NGP         DGP         CGP         EGP         QGP         GGP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.003571429  #>         HGP         IGP         LGP         KGP         MGP         FGP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PGP         SGP         TGP         WGP         YGP         VGP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AHP         RHP         NHP         DHP         CHP         EHP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QHP         GHP         HHP         IHP         LHP         KHP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MHP         FHP         PHP         SHP         THP         WHP  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         YHP         VHP         AIP         RIP         NIP         DIP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CIP         EIP         QIP         GIP         HIP         IIP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LIP         KIP         MIP         FIP         PIP         SIP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TIP         WIP         YIP         VIP         ALP         RLP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NLP         DLP         CLP         ELP         QLP         GLP  #> 0.000000000 0.000000000 0.003571429 0.000000000 0.001785714 0.000000000  #>         HLP         ILP         LLP         KLP         MLP         FLP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PLP         SLP         TLP         WLP         YLP         VLP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AKP         RKP         NKP         DKP         CKP         EKP  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QKP         GKP         HKP         IKP         LKP         KKP  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MKP         FKP         PKP         SKP         TKP         WKP  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         YKP         VKP         AMP         RMP         NMP         DMP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CMP         EMP         QMP         GMP         HMP         IMP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LMP         KMP         MMP         FMP         PMP         SMP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TMP         WMP         YMP         VMP         AFP         RFP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         NFP         DFP         CFP         EFP         QFP         GFP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HFP         IFP         LFP         KFP         MFP         FFP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PFP         SFP         TFP         WFP         YFP         VFP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         APP         RPP         NPP         DPP         CPP         EPP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QPP         GPP         HPP         IPP         LPP         KPP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         MPP         FPP         PPP         SPP         TPP         WPP  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         YPP         VPP         ASP         RSP         NSP         DSP  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         CSP         ESP         QSP         GSP         HSP         ISP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LSP         KSP         MSP         FSP         PSP         SSP  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TSP         WSP         YSP         VSP         ATP         RTP  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         NTP         DTP         CTP         ETP         QTP         GTP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HTP         ITP         LTP         KTP         MTP         FTP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PTP         STP         TTP         WTP         YTP         VTP  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         AWP         RWP         NWP         DWP         CWP         EWP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QWP         GWP         HWP         IWP         LWP         KWP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MWP         FWP         PWP         SWP         TWP         WWP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YWP         VWP         AYP         RYP         NYP         DYP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CYP         EYP         QYP         GYP         HYP         IYP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LYP         KYP         MYP         FYP         PYP         SYP  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TYP         WYP         YYP         VYP         AVP         RVP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NVP         DVP         CVP         EVP         QVP         GVP  #> 0.000000000 0.003571429 0.000000000 0.000000000 0.000000000 0.000000000  #>         HVP         IVP         LVP         KVP         MVP         FVP  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PVP         SVP         TVP         WVP         YVP         VVP  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.001785714  #>         AAS         RAS         NAS         DAS         CAS         EAS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QAS         GAS         HAS         IAS         LAS         KAS  #> 0.000000000 0.001785714 0.000000000 0.001785714 0.000000000 0.000000000  #>         MAS         FAS         PAS         SAS         TAS         WAS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YAS         VAS         ARS         RRS         NRS         DRS  #> 0.000000000 0.000000000 0.001785714 0.001785714 0.000000000 0.000000000  #>         CRS         ERS         QRS         GRS         HRS         IRS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LRS         KRS         MRS         FRS         PRS         SRS  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TRS         WRS         YRS         VRS         ANS         RNS  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NNS         DNS         CNS         ENS         QNS         GNS  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.001785714  #>         HNS         INS         LNS         KNS         MNS         FNS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PNS         SNS         TNS         WNS         YNS         VNS  #> 0.000000000 0.000000000 0.000000000 0.003571429 0.000000000 0.000000000  #>         ADS         RDS         NDS         DDS         CDS         EDS  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         QDS         GDS         HDS         IDS         LDS         KDS  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         MDS         FDS         PDS         SDS         TDS         WDS  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         YDS         VDS         ACS         RCS         NCS         DCS  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         CCS         ECS         QCS         GCS         HCS         ICS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LCS         KCS         MCS         FCS         PCS         SCS  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.003571429  #>         TCS         WCS         YCS         VCS         AES         RES  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         NES         DES         CES         EES         QES         GES  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         HES         IES         LES         KES         MES         FES  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PES         SES         TES         WES         YES         VES  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         AQS         RQS         NQS         DQS         CQS         EQS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QQS         GQS         HQS         IQS         LQS         KQS  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         MQS         FQS         PQS         SQS         TQS         WQS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YQS         VQS         AGS         RGS         NGS         DGS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         CGS         EGS         QGS         GGS         HGS         IGS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LGS         KGS         MGS         FGS         PGS         SGS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TGS         WGS         YGS         VGS         AHS         RHS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NHS         DHS         CHS         EHS         QHS         GHS  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         HHS         IHS         LHS         KHS         MHS         FHS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PHS         SHS         THS         WHS         YHS         VHS  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         AIS         RIS         NIS         DIS         CIS         EIS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QIS         GIS         HIS         IIS         LIS         KIS  #> 0.000000000 0.001785714 0.000000000 0.001785714 0.001785714 0.000000000  #>         MIS         FIS         PIS         SIS         TIS         WIS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YIS         VIS         ALS         RLS         NLS         DLS  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         CLS         ELS         QLS         GLS         HLS         ILS  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.001785714  #>         LLS         KLS         MLS         FLS         PLS         SLS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TLS         WLS         YLS         VLS         AKS         RKS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NKS         DKS         CKS         EKS         QKS         GKS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HKS         IKS         LKS         KKS         MKS         FKS  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         PKS         SKS         TKS         WKS         YKS         VKS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         AMS         RMS         NMS         DMS         CMS         EMS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QMS         GMS         HMS         IMS         LMS         KMS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MMS         FMS         PMS         SMS         TMS         WMS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YMS         VMS         AFS         RFS         NFS         DFS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CFS         EFS         QFS         GFS         HFS         IFS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LFS         KFS         MFS         FFS         PFS         SFS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TFS         WFS         YFS         VFS         APS         RPS  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         NPS         DPS         CPS         EPS         QPS         GPS  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HPS         IPS         LPS         KPS         MPS         FPS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PPS         SPS         TPS         WPS         YPS         VPS  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.001785714 0.001785714  #>         ASS         RSS         NSS         DSS         CSS         ESS  #> 0.000000000 0.000000000 0.001785714 0.001785714 0.000000000 0.001785714  #>         QSS         GSS         HSS         ISS         LSS         KSS  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         MSS         FSS         PSS         SSS         TSS         WSS  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         YSS         VSS         ATS         RTS         NTS         DTS  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CTS         ETS         QTS         GTS         HTS         ITS  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LTS         KTS         MTS         FTS         PTS         STS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TTS         WTS         YTS         VTS         AWS         RWS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NWS         DWS         CWS         EWS         QWS         GWS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HWS         IWS         LWS         KWS         MWS         FWS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PWS         SWS         TWS         WWS         YWS         VWS  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         AYS         RYS         NYS         DYS         CYS         EYS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QYS         GYS         HYS         IYS         LYS         KYS  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         MYS         FYS         PYS         SYS         TYS         WYS  #> 0.000000000 0.001785714 0.001785714 0.000000000 0.000000000 0.000000000  #>         YYS         VYS         AVS         RVS         NVS         DVS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CVS         EVS         QVS         GVS         HVS         IVS  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LVS         KVS         MVS         FVS         PVS         SVS  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         TVS         WVS         YVS         VVS         AAT         RAT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         NAT         DAT         CAT         EAT         QAT         GAT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HAT         IAT         LAT         KAT         MAT         FAT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PAT         SAT         TAT         WAT         YAT         VAT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ART         RRT         NRT         DRT         CRT         ERT  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         QRT         GRT         HRT         IRT         LRT         KRT  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         MRT         FRT         PRT         SRT         TRT         WRT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YRT         VRT         ANT         RNT         NNT         DNT  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         CNT         ENT         QNT         GNT         HNT         INT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LNT         KNT         MNT         FNT         PNT         SNT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TNT         WNT         YNT         VNT         ADT         RDT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NDT         DDT         CDT         EDT         QDT         GDT  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.001785714  #>         HDT         IDT         LDT         KDT         MDT         FDT  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         PDT         SDT         TDT         WDT         YDT         VDT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ACT         RCT         NCT         DCT         CCT         ECT  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.001785714  #>         QCT         GCT         HCT         ICT         LCT         KCT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MCT         FCT         PCT         SCT         TCT         WCT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YCT         VCT         AET         RET         NET         DET  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CET         EET         QET         GET         HET         IET  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LET         KET         MET         FET         PET         SET  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TET         WET         YET         VET         AQT         RQT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NQT         DQT         CQT         EQT         QQT         GQT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HQT         IQT         LQT         KQT         MQT         FQT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PQT         SQT         TQT         WQT         YQT         VQT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AGT         RGT         NGT         DGT         CGT         EGT  #> 0.000000000 0.003571429 0.000000000 0.000000000 0.000000000 0.000000000  #>         QGT         GGT         HGT         IGT         LGT         KGT  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         MGT         FGT         PGT         SGT         TGT         WGT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YGT         VGT         AHT         RHT         NHT         DHT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CHT         EHT         QHT         GHT         HHT         IHT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LHT         KHT         MHT         FHT         PHT         SHT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         THT         WHT         YHT         VHT         AIT         RIT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NIT         DIT         CIT         EIT         QIT         GIT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HIT         IIT         LIT         KIT         MIT         FIT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PIT         SIT         TIT         WIT         YIT         VIT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ALT         RLT         NLT         DLT         CLT         ELT  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         QLT         GLT         HLT         ILT         LLT         KLT  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         MLT         FLT         PLT         SLT         TLT         WLT  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         YLT         VLT         AKT         RKT         NKT         DKT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CKT         EKT         QKT         GKT         HKT         IKT  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         LKT         KKT         MKT         FKT         PKT         SKT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TKT         WKT         YKT         VKT         AMT         RMT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         NMT         DMT         CMT         EMT         QMT         GMT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HMT         IMT         LMT         KMT         MMT         FMT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PMT         SMT         TMT         WMT         YMT         VMT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AFT         RFT         NFT         DFT         CFT         EFT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QFT         GFT         HFT         IFT         LFT         KFT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MFT         FFT         PFT         SFT         TFT         WFT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YFT         VFT         APT         RPT         NPT         DPT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CPT         EPT         QPT         GPT         HPT         IPT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LPT         KPT         MPT         FPT         PPT         SPT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TPT         WPT         YPT         VPT         AST         RST  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NST         DST         CST         EST         QST         GST  #> 0.000000000 0.000000000 0.003571429 0.000000000 0.000000000 0.000000000  #>         HST         IST         LST         KST         MST         FST  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PST         SST         TST         WST         YST         VST  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         ATT         RTT         NTT         DTT         CTT         ETT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QTT         GTT         HTT         ITT         LTT         KTT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MTT         FTT         PTT         STT         TTT         WTT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YTT         VTT         AWT         RWT         NWT         DWT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         CWT         EWT         QWT         GWT         HWT         IWT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LWT         KWT         MWT         FWT         PWT         SWT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TWT         WWT         YWT         VWT         AYT         RYT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NYT         DYT         CYT         EYT         QYT         GYT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HYT         IYT         LYT         KYT         MYT         FYT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PYT         SYT         TYT         WYT         YYT         VYT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.003571429  #>         AVT         RVT         NVT         DVT         CVT         EVT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QVT         GVT         HVT         IVT         LVT         KVT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         MVT         FVT         PVT         SVT         TVT         WVT  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         YVT         VVT         AAW         RAW         NAW         DAW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CAW         EAW         QAW         GAW         HAW         IAW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LAW         KAW         MAW         FAW         PAW         SAW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TAW         WAW         YAW         VAW         ARW         RRW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NRW         DRW         CRW         ERW         QRW         GRW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HRW         IRW         LRW         KRW         MRW         FRW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PRW         SRW         TRW         WRW         YRW         VRW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ANW         RNW         NNW         DNW         CNW         ENW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QNW         GNW         HNW         INW         LNW         KNW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MNW         FNW         PNW         SNW         TNW         WNW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         YNW         VNW         ADW         RDW         NDW         DDW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CDW         EDW         QDW         GDW         HDW         IDW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LDW         KDW         MDW         FDW         PDW         SDW  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         TDW         WDW         YDW         VDW         ACW         RCW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NCW         DCW         CCW         ECW         QCW         GCW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HCW         ICW         LCW         KCW         MCW         FCW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PCW         SCW         TCW         WCW         YCW         VCW  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.001785714 0.000000000  #>         AEW         REW         NEW         DEW         CEW         EEW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QEW         GEW         HEW         IEW         LEW         KEW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MEW         FEW         PEW         SEW         TEW         WEW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YEW         VEW         AQW         RQW         NQW         DQW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CQW         EQW         QQW         GQW         HQW         IQW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LQW         KQW         MQW         FQW         PQW         SQW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TQW         WQW         YQW         VQW         AGW         RGW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NGW         DGW         CGW         EGW         QGW         GGW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HGW         IGW         LGW         KGW         MGW         FGW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PGW         SGW         TGW         WGW         YGW         VGW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AHW         RHW         NHW         DHW         CHW         EHW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QHW         GHW         HHW         IHW         LHW         KHW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MHW         FHW         PHW         SHW         THW         WHW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YHW         VHW         AIW         RIW         NIW         DIW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CIW         EIW         QIW         GIW         HIW         IIW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LIW         KIW         MIW         FIW         PIW         SIW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TIW         WIW         YIW         VIW         ALW         RLW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NLW         DLW         CLW         ELW         QLW         GLW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HLW         ILW         LLW         KLW         MLW         FLW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PLW         SLW         TLW         WLW         YLW         VLW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AKW         RKW         NKW         DKW         CKW         EKW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QKW         GKW         HKW         IKW         LKW         KKW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MKW         FKW         PKW         SKW         TKW         WKW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YKW         VKW         AMW         RMW         NMW         DMW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CMW         EMW         QMW         GMW         HMW         IMW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LMW         KMW         MMW         FMW         PMW         SMW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TMW         WMW         YMW         VMW         AFW         RFW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NFW         DFW         CFW         EFW         QFW         GFW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HFW         IFW         LFW         KFW         MFW         FFW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PFW         SFW         TFW         WFW         YFW         VFW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         APW         RPW         NPW         DPW         CPW         EPW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QPW         GPW         HPW         IPW         LPW         KPW  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.001785714 0.003571429  #>         MPW         FPW         PPW         SPW         TPW         WPW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YPW         VPW         ASW         RSW         NSW         DSW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CSW         ESW         QSW         GSW         HSW         ISW  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.001785714  #>         LSW         KSW         MSW         FSW         PSW         SSW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TSW         WSW         YSW         VSW         ATW         RTW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NTW         DTW         CTW         ETW         QTW         GTW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         HTW         ITW         LTW         KTW         MTW         FTW  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         PTW         STW         TTW         WTW         YTW         VTW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AWW         RWW         NWW         DWW         CWW         EWW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QWW         GWW         HWW         IWW         LWW         KWW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MWW         FWW         PWW         SWW         TWW         WWW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YWW         VWW         AYW         RYW         NYW         DYW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CYW         EYW         QYW         GYW         HYW         IYW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LYW         KYW         MYW         FYW         PYW         SYW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TYW         WYW         YYW         VYW         AVW         RVW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NVW         DVW         CVW         EVW         QVW         GVW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HVW         IVW         LVW         KVW         MVW         FVW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PVW         SVW         TVW         WVW         YVW         VVW  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AAY         RAY         NAY         DAY         CAY         EAY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QAY         GAY         HAY         IAY         LAY         KAY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MAY         FAY         PAY         SAY         TAY         WAY  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         YAY         VAY         ARY         RRY         NRY         DRY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CRY         ERY         QRY         GRY         HRY         IRY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LRY         KRY         MRY         FRY         PRY         SRY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TRY         WRY         YRY         VRY         ANY         RNY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NNY         DNY         CNY         ENY         QNY         GNY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HNY         INY         LNY         KNY         MNY         FNY  #> 0.003571429 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PNY         SNY         TNY         WNY         YNY         VNY  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         ADY         RDY         NDY         DDY         CDY         EDY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QDY         GDY         HDY         IDY         LDY         KDY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MDY         FDY         PDY         SDY         TDY         WDY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YDY         VDY         ACY         RCY         NCY         DCY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         CCY         ECY         QCY         GCY         HCY         ICY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LCY         KCY         MCY         FCY         PCY         SCY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TCY         WCY         YCY         VCY         AEY         REY  #> 0.001785714 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         NEY         DEY         CEY         EEY         QEY         GEY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HEY         IEY         LEY         KEY         MEY         FEY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PEY         SEY         TEY         WEY         YEY         VEY  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.001785714  #>         AQY         RQY         NQY         DQY         CQY         EQY  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         QQY         GQY         HQY         IQY         LQY         KQY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MQY         FQY         PQY         SQY         TQY         WQY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YQY         VQY         AGY         RGY         NGY         DGY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CGY         EGY         QGY         GGY         HGY         IGY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LGY         KGY         MGY         FGY         PGY         SGY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         TGY         WGY         YGY         VGY         AHY         RHY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NHY         DHY         CHY         EHY         QHY         GHY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HHY         IHY         LHY         KHY         MHY         FHY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PHY         SHY         THY         WHY         YHY         VHY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AIY         RIY         NIY         DIY         CIY         EIY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QIY         GIY         HIY         IIY         LIY         KIY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MIY         FIY         PIY         SIY         TIY         WIY  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YIY         VIY         ALY         RLY         NLY         DLY  #> 0.000000000 0.000000000 0.001785714 0.001785714 0.000000000 0.000000000  #>         CLY         ELY         QLY         GLY         HLY         ILY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LLY         KLY         MLY         FLY         PLY         SLY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TLY         WLY         YLY         VLY         AKY         RKY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NKY         DKY         CKY         EKY         QKY         GKY  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.001785714  #>         HKY         IKY         LKY         KKY         MKY         FKY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PKY         SKY         TKY         WKY         YKY         VKY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AMY         RMY         NMY         DMY         CMY         EMY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QMY         GMY         HMY         IMY         LMY         KMY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MMY         FMY         PMY         SMY         TMY         WMY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YMY         VMY         AFY         RFY         NFY         DFY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CFY         EFY         QFY         GFY         HFY         IFY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LFY         KFY         MFY         FFY         PFY         SFY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         TFY         WFY         YFY         VFY         APY         RPY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NPY         DPY         CPY         EPY         QPY         GPY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HPY         IPY         LPY         KPY         MPY         FPY  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         PPY         SPY         TPY         WPY         YPY         VPY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ASY         RSY         NSY         DSY         CSY         ESY  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         QSY         GSY         HSY         ISY         LSY         KSY  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         MSY         FSY         PSY         SSY         TSY         WSY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YSY         VSY         ATY         RTY         NTY         DTY  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.001785714  #>         CTY         ETY         QTY         GTY         HTY         ITY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LTY         KTY         MTY         FTY         PTY         STY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TTY         WTY         YTY         VTY         AWY         RWY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NWY         DWY         CWY         EWY         QWY         GWY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HWY         IWY         LWY         KWY         MWY         FWY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PWY         SWY         TWY         WWY         YWY         VWY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AYY         RYY         NYY         DYY         CYY         EYY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QYY         GYY         HYY         IYY         LYY         KYY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MYY         FYY         PYY         SYY         TYY         WYY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YYY         VYY         AVY         RVY         NVY         DVY  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CVY         EVY         QVY         GVY         HVY         IVY  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         LVY         KVY         MVY         FVY         PVY         SVY  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         TVY         WVY         YVY         VVY         AAV         RAV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NAV         DAV         CAV         EAV         QAV         GAV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714  #>         HAV         IAV         LAV         KAV         MAV         FAV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PAV         SAV         TAV         WAV         YAV         VAV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ARV         RRV         NRV         DRV         CRV         ERV  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         QRV         GRV         HRV         IRV         LRV         KRV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MRV         FRV         PRV         SRV         TRV         WRV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YRV         VRV         ANV         RNV         NNV         DNV  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CNV         ENV         QNV         GNV         HNV         INV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LNV         KNV         MNV         FNV         PNV         SNV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TNV         WNV         YNV         VNV         ADV         RDV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NDV         DDV         CDV         EDV         QDV         GDV  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         HDV         IDV         LDV         KDV         MDV         FDV  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         PDV         SDV         TDV         WDV         YDV         VDV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         ACV         RCV         NCV         DCV         CCV         ECV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         QCV         GCV         HCV         ICV         LCV         KCV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MCV         FCV         PCV         SCV         TCV         WCV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YCV         VCV         AEV         REV         NEV         DEV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CEV         EEV         QEV         GEV         HEV         IEV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LEV         KEV         MEV         FEV         PEV         SEV  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         TEV         WEV         YEV         VEV         AQV         RQV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NQV         DQV         CQV         EQV         QQV         GQV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HQV         IQV         LQV         KQV         MQV         FQV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PQV         SQV         TQV         WQV         YQV         VQV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         AGV         RGV         NGV         DGV         CGV         EGV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QGV         GGV         HGV         IGV         LGV         KGV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MGV         FGV         PGV         SGV         TGV         WGV  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         YGV         VGV         AHV         RHV         NHV         DHV  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         CHV         EHV         QHV         GHV         HHV         IHV  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LHV         KHV         MHV         FHV         PHV         SHV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         THV         WHV         YHV         VHV         AIV         RIV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NIV         DIV         CIV         EIV         QIV         GIV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HIV         IIV         LIV         KIV         MIV         FIV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PIV         SIV         TIV         WIV         YIV         VIV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         ALV         RLV         NLV         DLV         CLV         ELV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         QLV         GLV         HLV         ILV         LLV         KLV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MLV         FLV         PLV         SLV         TLV         WLV  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.001785714 0.000000000  #>         YLV         VLV         AKV         RKV         NKV         DKV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CKV         EKV         QKV         GKV         HKV         IKV  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         LKV         KKV         MKV         FKV         PKV         SKV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TKV         WKV         YKV         VKV         AMV         RMV  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NMV         DMV         CMV         EMV         QMV         GMV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HMV         IMV         LMV         KMV         MMV         FMV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PMV         SMV         TMV         WMV         YMV         VMV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AFV         RFV         NFV         DFV         CFV         EFV  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         QFV         GFV         HFV         IFV         LFV         KFV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MFV         FFV         PFV         SFV         TFV         WFV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YFV         VFV         APV         RPV         NPV         DPV  #> 0.000000000 0.001785714 0.000000000 0.001785714 0.000000000 0.000000000  #>         CPV         EPV         QPV         GPV         HPV         IPV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LPV         KPV         MPV         FPV         PPV         SPV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TPV         WPV         YPV         VPV         ASV         RSV  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         NSV         DSV         CSV         ESV         QSV         GSV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         HSV         ISV         LSV         KSV         MSV         FSV  #> 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PSV         SSV         TSV         WSV         YSV         VSV  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         ATV         RTV         NTV         DTV         CTV         ETV  #> 0.000000000 0.003571429 0.000000000 0.000000000 0.000000000 0.000000000  #>         QTV         GTV         HTV         ITV         LTV         KTV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000  #>         MTV         FTV         PTV         STV         TTV         WTV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         YTV         VTV         AWV         RWV         NWV         DWV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         CWV         EWV         QWV         GWV         HWV         IWV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         LWV         KWV         MWV         FWV         PWV         SWV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         TWV         WWV         YWV         VWV         AYV         RYV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         NYV         DYV         CYV         EYV         QYV         GYV  #> 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000  #>         HYV         IYV         LYV         KYV         MYV         FYV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         PYV         SYV         TYV         WYV         YYV         VYV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         AVV         RVV         NVV         DVV         CVV         EVV  #> 0.000000000 0.001785714 0.000000000 0.000000000 0.000000000 0.000000000  #>         QVV         GVV         HVV         IVV         LVV         KVV  #> 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000  #>         MVV         FVV         PVV         SVV         TVV         WVV  #> 0.000000000 0.000000000 0.000000000 0.001785714 0.000000000 0.000000000  #>         YVV         VVV  #> 0.000000000 0.000000000"},{"path":"https://nanx.me/protr/reference/getUniProt.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Protein Sequences from UniProt by Protein ID ‚Äî getUniProt","title":"Retrieve Protein Sequences from UniProt by Protein ID ‚Äî getUniProt","text":"function retrieves protein sequences uniprot.org protein ID(s).","code":""},{"path":"https://nanx.me/protr/reference/getUniProt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Protein Sequences from UniProt by Protein ID ‚Äî getUniProt","text":"","code":"getUniProt(id)"},{"path":"https://nanx.me/protr/reference/getUniProt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Protein Sequences from UniProt by Protein ID ‚Äî getUniProt","text":"id character vector, protein ID(s).","code":""},{"path":"https://nanx.me/protr/reference/getUniProt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Protein Sequences from UniProt by Protein ID ‚Äî getUniProt","text":"list, component contains one protein sequence.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/getUniProt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Retrieve Protein Sequences from UniProt by Protein ID ‚Äî getUniProt","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/getUniProt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Protein Sequences from UniProt by Protein ID ‚Äî getUniProt","text":"","code":"if (FALSE) { # Network latency may slow down this example # Only test this when your connection is fast enough ids <- c(\"P00750\", \"P00751\", \"P00752\") getUniProt(ids) }"},{"path":"https://nanx.me/protr/reference/parGOSim.html","id":null,"dir":"Reference","previous_headings":"","what":"Protein Similarity Calculation based on Gene Ontology (GO) Similarity ‚Äî parGOSim","title":"Protein Similarity Calculation based on Gene Ontology (GO) Similarity ‚Äî parGOSim","text":"function calculates protein similarity based Gene Ontology (GO) similarity.","code":""},{"path":"https://nanx.me/protr/reference/parGOSim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Protein Similarity Calculation based on Gene Ontology (GO) Similarity ‚Äî parGOSim","text":"","code":"parGOSim(   golist,   type = c(\"go\", \"gene\"),   ont = c(\"MF\", \"BP\", \"CC\"),   organism = \"human\",   measure = \"Resnik\",   combine = \"BMA\" )"},{"path":"https://nanx.me/protr/reference/parGOSim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Protein Similarity Calculation based on Gene Ontology (GO) Similarity ‚Äî parGOSim","text":"golist list, component contains character vector GO terms one Entrez Gene ID. type Input type golist, \"go\" GO Terms, \"gene\" gene ID. ont Default \"MF\", can one \"MF\", \"BP\", \"CC\" subontologies. organism Organism name. Default \"human\", can one \"anopheles\", \"arabidopsis\", \"bovine\", \"canine\", \"chicken\", \"chimp\", \"coelicolor\", \"ecolik12\", \"ecsakai\", \"fly\", \"human\", \"malaria\", \"mouse\", \"pig\", \"rat\", \"rhesus\", \"worm\", \"xenopus\", \"yeast\" \"zebrafish\". specifying organism, please install corresponding genome wide annotation data package selected organism. measure Default \"Resnik\", can one \"Resnik\", \"Lin\", \"Rel\", \"Jiang\" \"Wang\". combine Default \"BMA\", can one \"max\", \"average\", \"rcmax\" \"BMA\" combining semantic similarity scores multiple GO terms associated proteins.","code":""},{"path":"https://nanx.me/protr/reference/parGOSim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Protein Similarity Calculation based on Gene Ontology (GO) Similarity ‚Äî parGOSim","text":"n x n similarity matrix.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/parGOSim.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Protein Similarity Calculation based on Gene Ontology (GO) Similarity ‚Äî parGOSim","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/parGOSim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Protein Similarity Calculation based on Gene Ontology (GO) Similarity ‚Äî parGOSim","text":"","code":"if (FALSE) {  # Be careful when testing this since it involves GO similarity computation # and might produce unpredictable results in some environments  library(\"GOSemSim\") library(\"org.Hs.eg.db\")  # By GO Terms # AP4B1 go1 <- c(   \"GO:0005215\", \"GO:0005488\", \"GO:0005515\",   \"GO:0005625\", \"GO:0005802\", \"GO:0005905\" ) # BCAS2 go2 <- c(   \"GO:0005515\", \"GO:0005634\", \"GO:0005681\",   \"GO:0008380\", \"GO:0031202\" ) # PDE4DIP go3 <- c(   \"GO:0003735\", \"GO:0005622\", \"GO:0005840\",   \"GO:0006412\" ) golist <- list(go1, go2, go3) parGOSim(golist, type = \"go\", ont = \"CC\", measure = \"Wang\")  # By Entrez gene id genelist <- list(c(\"150\", \"151\", \"152\", \"1814\", \"1815\", \"1816\")) parGOSim(genelist, type = \"gene\", ont = \"BP\", measure = \"Wang\") }"},{"path":"https://nanx.me/protr/reference/parSeqSim.html","id":null,"dir":"Reference","previous_headings":"","what":"Parallel Protein Sequence Similarity Calculation Based on Sequence Alignment (In-Memory Version) ‚Äî parSeqSim","title":"Parallel Protein Sequence Similarity Calculation Based on Sequence Alignment (In-Memory Version) ‚Äî parSeqSim","text":"Parallel calculation protein sequence similarity based sequence alignment.","code":""},{"path":"https://nanx.me/protr/reference/parSeqSim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parallel Protein Sequence Similarity Calculation Based on Sequence Alignment (In-Memory Version) ‚Äî parSeqSim","text":"","code":"parSeqSim(   protlist,   cores = 2,   batches = 1,   verbose = FALSE,   type = \"local\",   submat = \"BLOSUM62\",   gap.opening = 10,   gap.extension = 4 )"},{"path":"https://nanx.me/protr/reference/parSeqSim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parallel Protein Sequence Similarity Calculation Based on Sequence Alignment (In-Memory Version) ‚Äî parSeqSim","text":"protlist length n list containing n protein sequences, component list character string, storing one protein sequence. Unknown sequences represented \"\". cores Integer. number CPU cores use parallel execution, default 2. Users can use availableCores() function parallelly package see many cores use. batches Integer. many batches split pairwise similarity computations . useful large number protein sequences, enough number CPU cores, enough RAM compute fit pairwise similarities single batch. Defaults 1. verbose Print computation progress? Useful batches > 1. type Type alignment, default \"local\", can \"global\" \"local\", \"global\" represents Needleman-Wunsch global alignment; \"local\" represents Smith-Waterman local alignment. submat Substitution matrix, default \"BLOSUM62\", can one \"BLOSUM45\", \"BLOSUM50\", \"BLOSUM62\", \"BLOSUM80\", \"BLOSUM100\", \"PAM30\", \"PAM40\", \"PAM70\", \"PAM120\", \"PAM250\". gap.opening cost required open gap length alignment. Defaults 10. gap.extension cost extend length existing gap 1. Defaults 4.","code":""},{"path":"https://nanx.me/protr/reference/parSeqSim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parallel Protein Sequence Similarity Calculation Based on Sequence Alignment (In-Memory Version) ‚Äî parSeqSim","text":"n x n similarity matrix.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/parSeqSim.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parallel Protein Sequence Similarity Calculation Based on Sequence Alignment (In-Memory Version) ‚Äî parSeqSim","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/parSeqSim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parallel Protein Sequence Similarity Calculation Based on Sequence Alignment (In-Memory Version) ‚Äî parSeqSim","text":"","code":"if (FALSE) {  # Be careful when testing this since it involves parallelization # and might produce unpredictable results in some environments  library(\"Biostrings\") library(\"foreach\") library(\"doParallel\")  s1 <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]] s2 <- readFASTA(system.file(\"protseq/P08218.fasta\", package = \"protr\"))[[1]] s3 <- readFASTA(system.file(\"protseq/P10323.fasta\", package = \"protr\"))[[1]] s4 <- readFASTA(system.file(\"protseq/P20160.fasta\", package = \"protr\"))[[1]] s5 <- readFASTA(system.file(\"protseq/Q9NZP8.fasta\", package = \"protr\"))[[1]] plist <- list(s1, s2, s3, s4, s5) (psimmat <- parSeqSim(plist, cores = 2, type = \"local\", submat = \"BLOSUM62\")) }"},{"path":"https://nanx.me/protr/reference/parSeqSimDisk.html","id":null,"dir":"Reference","previous_headings":"","what":"Parallel Protein Sequence Similarity Calculation Based on Sequence Alignment (Disk-Based Version) ‚Äî parSeqSimDisk","title":"Parallel Protein Sequence Similarity Calculation Based on Sequence Alignment (Disk-Based Version) ‚Äî parSeqSimDisk","text":"Parallel calculation protein sequence similarity based sequence alignment. version offloads partial results batch hard drive merges results together end, reduces memory usage.","code":""},{"path":"https://nanx.me/protr/reference/parSeqSimDisk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parallel Protein Sequence Similarity Calculation Based on Sequence Alignment (Disk-Based Version) ‚Äî parSeqSimDisk","text":"","code":"parSeqSimDisk(   protlist,   cores = 2,   batches = 1,   path = tempdir(),   verbose = FALSE,   type = \"local\",   submat = \"BLOSUM62\",   gap.opening = 10,   gap.extension = 4 )"},{"path":"https://nanx.me/protr/reference/parSeqSimDisk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parallel Protein Sequence Similarity Calculation Based on Sequence Alignment (Disk-Based Version) ‚Äî parSeqSimDisk","text":"protlist length n list containing n protein sequences, component list character string, storing one protein sequence. Unknown sequences represented \"\". cores Integer. number CPU cores use parallel execution, default 2. Users can use availableCores() function parallelly package see many cores use. batches Integer. many batches split pairwise similarity computations . useful large number protein sequences, enough number CPU cores, enough RAM compute fit pairwise similarities single batch. Defaults 1. path Directory caching results batch. Defaults temporary directory. verbose Print computation progress? Useful batches > 1. type Type alignment, default \"local\", can \"global\" \"local\", \"global\" represents Needleman-Wunsch global alignment; \"local\" represents Smith-Waterman local alignment. submat Substitution matrix, default \"BLOSUM62\", can one \"BLOSUM45\", \"BLOSUM50\", \"BLOSUM62\", \"BLOSUM80\", \"BLOSUM100\", \"PAM30\", \"PAM40\", \"PAM70\", \"PAM120\", \"PAM250\". gap.opening cost required open gap length alignment. Defaults 10. gap.extension cost extend length existing gap 1. Defaults 4.","code":""},{"path":"https://nanx.me/protr/reference/parSeqSimDisk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parallel Protein Sequence Similarity Calculation Based on Sequence Alignment (Disk-Based Version) ‚Äî parSeqSimDisk","text":"n x n similarity matrix.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/parSeqSimDisk.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parallel Protein Sequence Similarity Calculation Based on Sequence Alignment (Disk-Based Version) ‚Äî parSeqSimDisk","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/parSeqSimDisk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parallel Protein Sequence Similarity Calculation Based on Sequence Alignment (Disk-Based Version) ‚Äî parSeqSimDisk","text":"","code":"if (FALSE) {  # Be careful when testing this since it involves parallelization # and might produce unpredictable results in some environments  library(\"Biostrings\") library(\"foreach\") library(\"doParallel\")  s1 <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]] s2 <- readFASTA(system.file(\"protseq/P08218.fasta\", package = \"protr\"))[[1]] s3 <- readFASTA(system.file(\"protseq/P10323.fasta\", package = \"protr\"))[[1]] s4 <- readFASTA(system.file(\"protseq/P20160.fasta\", package = \"protr\"))[[1]] s5 <- readFASTA(system.file(\"protseq/Q9NZP8.fasta\", package = \"protr\"))[[1]] set.seed(1010) plist <- as.list(c(s1, s2, s3, s4, s5)[sample(1:5, 100, replace = TRUE)]) psimmat <- parSeqSimDisk(   plist,   cores = 2, batches = 10, verbose = TRUE,   type = \"local\", submat = \"BLOSUM62\" ) }"},{"path":"https://nanx.me/protr/reference/protcheck.html","id":null,"dir":"Reference","previous_headings":"","what":"Protein sequence amino acid type sanity check ‚Äî protcheck","title":"Protein sequence amino acid type sanity check ‚Äî protcheck","text":"function checks protein sequence's amino acid types 20 default types.","code":""},{"path":"https://nanx.me/protr/reference/protcheck.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Protein sequence amino acid type sanity check ‚Äî protcheck","text":"","code":"protcheck(x)"},{"path":"https://nanx.me/protr/reference/protcheck.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Protein sequence amino acid type sanity check ‚Äî protcheck","text":"x character vector, input protein sequence.","code":""},{"path":"https://nanx.me/protr/reference/protcheck.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Protein sequence amino acid type sanity check ‚Äî protcheck","text":"Logical. TRUE amino acid types sequence within 20 default types.","code":""},{"path":"https://nanx.me/protr/reference/protcheck.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Protein sequence amino acid type sanity check ‚Äî protcheck","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/protcheck.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Protein sequence amino acid type sanity check ‚Äî protcheck","text":"","code":"x <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]] protcheck(x) # TRUE #> [1] TRUE protcheck(paste(x, \"Z\", sep = \"\")) # FALSE #> [1] FALSE"},{"path":"https://nanx.me/protr/reference/protr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"protr: Generating Various Numerical Representation Schemes for Protein Sequences ‚Äî protr-package","title":"protr: Generating Various Numerical Representation Schemes for Protein Sequences ‚Äî protr-package","text":"Comprehensive toolkit generating various numerical features protein sequences described Xiao et al. (2015) doi:10.1093/bioinformatics/btv042 . full functionality, software 'ncbi-blast+' needed, see https://blast.ncbi.nlm.nih.gov/doc/blast-help/downloadblastdata.html information.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/protr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"protr: Generating Various Numerical Representation Schemes for Protein Sequences ‚Äî protr-package","text":"Maintainer: Nan Xiao @nanx.(ORCID) Authors: Qing-Song Xu qsxu@csu.edu.cn Dong-Sheng Cao contributors: Sebastian Mueller (Alva Genomics) [contributor]","code":""},{"path":"https://nanx.me/protr/reference/protseg.html","id":null,"dir":"Reference","previous_headings":"","what":"Protein Sequence Segmentation/Partition ‚Äî protseg","title":"Protein Sequence Segmentation/Partition ‚Äî protseg","text":"function extracts segmentations protein sequence.","code":""},{"path":"https://nanx.me/protr/reference/protseg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Protein Sequence Segmentation/Partition ‚Äî protseg","text":"","code":"protseg(   x,   aa = c(\"A\", \"R\", \"N\", \"D\", \"C\", \"E\", \"Q\", \"G\", \"H\", \"I\", \"L\", \"K\", \"M\", \"F\", \"P\", \"S\",     \"T\", \"W\", \"Y\", \"V\"),   k = 7 )"},{"path":"https://nanx.me/protr/reference/protseg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Protein Sequence Segmentation/Partition ‚Äî protseg","text":"x character vector, input protein sequence. aa character, amino acid type. One '', 'R', 'N', 'D', 'C', 'E', 'Q', 'G', 'H', '', 'L', 'K', 'M', 'F', 'P', 'S', 'T', 'W', 'Y', 'V'. k positive integer, specifys window size (half window), default 7.","code":""},{"path":"https://nanx.me/protr/reference/protseg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Protein Sequence Segmentation/Partition ‚Äî protseg","text":"named list, component contains one segmentations (character string), names list components positions specified amino acid sequence.","code":""},{"path":"https://nanx.me/protr/reference/protseg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Protein Sequence Segmentation/Partition ‚Äî protseg","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/protseg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Protein Sequence Segmentation/Partition ‚Äî protseg","text":"","code":"x <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]] protseg(x, aa = \"R\", k = 5) #> $`6` #> [1] \"MDAMKRGLCCV\" #>  #> $`29` #> [1] \"QEIHARFRRGA\" #>  #> $`31` #> [1] \"IHARFRRGARS\" #>  #> $`32` #> [1] \"HARFRRGARSY\" #>  #> $`35` #> [1] \"FRRGARSYQVI\" #>  #> $`42` #> [1] \"YQVICRDEKTQ\" #>  #> $`58` #> [1] \"HQSWLRPVLRS\" #>  #> $`62` #> [1] \"LRPVLRSNRVE\" #>  #> $`65` #> [1] \"VLRSNRVEYCW\" #>  #> $`75` #> [1] \"WCNSGRAQCHS\" #>  #> $`90` #> [1] \"SCSEPRCFNGG\" #>  #> $`124` #> [1] \"CEIDTRATCYE\" #>  #> $`136` #> [1] \"QGISYRGTWST\" #>  #> $`164` #> [1] \"KPYSGRRPDAI\" #>  #> $`165` #> [1] \"PYSGRRPDAIR\" #>  #> $`170` #> [1] \"RPDAIRLGLGN\" #>  #> $`180` #> [1] \"NHNYCRNPDRD\" #>  #> $`184` #> [1] \"CRNPDRDSKPW\" #>  #> $`224` #> [1] \"NGSAYRGTHSL\" #>  #> $`268` #> [1] \"KHNYCRNPDGD\" #>  #> $`284` #> [1] \"HVLKNRRLTWE\" #>  #> $`285` #> [1] \"VLKNRRLTWEY\" #>  #> $`302` #> [1] \"STCGLRQYSQP\" #>  #> $`310` #> [1] \"SQPQFRIKGGL\" #>  #> $`333` #> [1] \"IFAKHRRSPGE\" #>  #> $`334` #> [1] \"FAKHRRSPGER\" #>  #> $`339` #> [1] \"RSPGERFLCGG\" #>  #> $`362` #> [1] \"HCFQERFPPHH\" #>  #> $`374` #> [1] \"TVILGRTYRVV\" #>  #> $`377` #> [1] \"LGRTYRVVPGE\" #>  #> $`418` #> [1] \"KSDSSRCAQES\" #>  #> $`427` #> [1] \"ESSVVRTVCLP\" #>  #> $`462` #> [1] \"PFYSERLKEAH\" #>  #> $`469` #> [1] \"KEAHVRLYPSS\" #>  #> $`475` #> [1] \"LYPSSRCTSQH\" #>  #> $`484` #> [1] \"QHLLNRTVTDN\" #>  #> $`497` #> [1] \"CAGDTRSGGPQ\" #>  #> $`524` #> [1] \"CLNDGRMTLVG\" #>  #> $`557` #> [1] \"YLDWIRDNMRP\" #>"},{"path":"https://nanx.me/protr/reference/readFASTA.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Protein Sequences in FASTA Format ‚Äî readFASTA","title":"Read Protein Sequences in FASTA Format ‚Äî readFASTA","text":"function reads protein sequences FASTA format.","code":""},{"path":"https://nanx.me/protr/reference/readFASTA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Protein Sequences in FASTA Format ‚Äî readFASTA","text":"","code":"readFASTA(   file = system.file(\"protseq/P00750.fasta\", package = \"protr\"),   legacy.mode = TRUE,   seqonly = FALSE )"},{"path":"https://nanx.me/protr/reference/readFASTA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Protein Sequences in FASTA Format ‚Äî readFASTA","text":"file Path file containing protein sequences FASTA format. contain absolute relative path, file name relative current working directory, getwd. default read P00750.fasta file present protseq directory protr package. legacy.mode set TRUE, lines starting semicolon (;) ignored. Default value TRUE. seqonly set TRUE, sequences returned without attempt modify get names annotations (execution time divided approximately factor 3). Default value FALSE.","code":""},{"path":"https://nanx.me/protr/reference/readFASTA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Protein Sequences in FASTA Format ‚Äî readFASTA","text":"Character vector protein sequences. three returned argument just different forms output. one interested Mahalanobis metric original data space, first argument /needs. transformation another space (one can use Euclidean metric) preferred, second returned argument sufficient. Using B equivalent following sense.","code":""},{"path":"https://nanx.me/protr/reference/readFASTA.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read Protein Sequences in FASTA Format ‚Äî readFASTA","text":"Pearson, W.R. Lipman, D.J. (1988) Improved tools biological sequence comparison. Proceedings National Academy Sciences United States America, 85: 2444--2448.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/readFASTA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Protein Sequences in FASTA Format ‚Äî readFASTA","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/readFASTA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Protein Sequences in FASTA Format ‚Äî readFASTA","text":"","code":"P00750 <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))"},{"path":"https://nanx.me/protr/reference/readPDB.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Protein Sequences in PDB Format ‚Äî readPDB","title":"Read Protein Sequences in PDB Format ‚Äî readPDB","text":"function reads protein sequences PDB (Protein Data Bank) format, return amino acid sequences represented single-letter code.","code":""},{"path":"https://nanx.me/protr/reference/readPDB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Protein Sequences in PDB Format ‚Äî readPDB","text":"","code":"readPDB(file = system.file(\"protseq/4HHB.pdb\", package = \"protr\"))"},{"path":"https://nanx.me/protr/reference/readPDB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Protein Sequences in PDB Format ‚Äî readPDB","text":"file Path file containing protein sequences PDB format. contain absolute relative path, file name relative current working directory, getwd. default read 4HHB.PDB file present protseq directory protr package.","code":""},{"path":"https://nanx.me/protr/reference/readPDB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Protein Sequences in PDB Format ‚Äî readPDB","text":"Character vector protein sequence.","code":""},{"path":"https://nanx.me/protr/reference/readPDB.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read Protein Sequences in PDB Format ‚Äî readPDB","text":"Protein Data Bank Contents Guide: Atomic Coordinate Entry Format Description, Version 3.30. Accessed 2013-06-26. https://files.wwpdb.org/pub/pdb/doc/format_descriptions/Format_v33_Letter.pdf","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/readPDB.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read Protein Sequences in PDB Format ‚Äî readPDB","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/readPDB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Protein Sequences in PDB Format ‚Äî readPDB","text":"","code":"Seq4HHB <- readPDB(system.file(\"protseq/4HHB.pdb\", package = \"protr\"))"},{"path":"https://nanx.me/protr/reference/removeGaps.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove or replace gaps from protein sequences. ‚Äî removeGaps","title":"Remove or replace gaps from protein sequences. ‚Äî removeGaps","text":"Remove/replace gaps irregular characters protein sequences, make suitable feature extraction sequence alignment based similarity computation.","code":""},{"path":"https://nanx.me/protr/reference/removeGaps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove or replace gaps from protein sequences. ‚Äî removeGaps","text":"","code":"removeGaps(x, pattern = \"-\", replacement = \"\", ...)"},{"path":"https://nanx.me/protr/reference/removeGaps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove or replace gaps from protein sequences. ‚Äî removeGaps","text":"x character vector, containing input protein sequence(s). pattern character string contains gap (irregular) character removed replaced. Default \"-\". advanced usage, see gsub. replacement replacement matched characters. Default \"\" (remove matched character). ... addtional parameters gsub.","code":""},{"path":"https://nanx.me/protr/reference/removeGaps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove or replace gaps from protein sequences. ‚Äî removeGaps","text":"vector protein sequence(s) gaps irregular characters removed/replaced.","code":""},{"path":"https://nanx.me/protr/reference/removeGaps.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Remove or replace gaps from protein sequences. ‚Äî removeGaps","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/removeGaps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove or replace gaps from protein sequences. ‚Äî removeGaps","text":"","code":"# amino acid sequences that contain gaps (\"-\") aaseq <- list(   \"MHGDTPTLHEYMLDLQPETTDLYCYEQLSDSSE-EEDEIDGPAGQAEPDRAHYNIVTFCCKCDSTLRLCVQS\",   \"MHGDTPTLHEYMLDLQPETTDLYCYEQLNDSSE-EEDEIDGPAGQAEPDRAHYNIVTFCCKCDSTLRLCVQS\" ) if (FALSE) { #' # gaps create issues for alignment parSeqSim(aaseq)  # remove the gaps nogapseq <- removeGaps(aaseq) parSeqSim(nogapseq) }"},{"path":"https://nanx.me/protr/reference/twoGOSim.html","id":null,"dir":"Reference","previous_headings":"","what":"Protein Similarity Calculation based on Gene Ontology (GO) Similarity ‚Äî twoGOSim","title":"Protein Similarity Calculation based on Gene Ontology (GO) Similarity ‚Äî twoGOSim","text":"function calculates Gene Ontology (GO) similarity two groups GO terms two Entrez gene IDs.","code":""},{"path":"https://nanx.me/protr/reference/twoGOSim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Protein Similarity Calculation based on Gene Ontology (GO) Similarity ‚Äî twoGOSim","text":"","code":"twoGOSim(   id1,   id2,   type = c(\"go\", \"gene\"),   ont = c(\"MF\", \"BP\", \"CC\"),   organism = \"human\",   measure = \"Resnik\",   combine = \"BMA\" )"},{"path":"https://nanx.me/protr/reference/twoGOSim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Protein Similarity Calculation based on Gene Ontology (GO) Similarity ‚Äî twoGOSim","text":"id1 Character vector. length > 1: element GO term; length = 1: Entrez Gene ID. id2 Character vector. length > 1: element GO term; length = 1: Entrez Gene ID. type Input type id1 id2, 'go' GO Terms, \"gene\" gene ID. ont Default \"MF\", can one \"MF\", \"BP\", \"CC\" subontologies. organism Organism name. Default \"human\", can one \"anopheles\", \"arabidopsis\", \"bovine\", \"canine\", \"chicken\", \"chimp\", \"coelicolor\", \"ecolik12\", \"ecsakai\", \"fly\", \"human\", \"malaria\", \"mouse\", \"pig\", \"rat\", \"rhesus\", \"worm\", \"xenopus\", \"yeast\" \"zebrafish\". specifying organism, please install corresponding genome wide annotation data package selected organism. measure Default \"Resnik\", can one \"Resnik\", \"Lin\", \"Rel\", \"Jiang\" \"Wang\". combine Default \"BMA\", can one \"max\", \"average\", \"rcmax\" \"BMA\" combining semantic similarity scores multiple GO terms associated proteins.","code":""},{"path":"https://nanx.me/protr/reference/twoGOSim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Protein Similarity Calculation based on Gene Ontology (GO) Similarity ‚Äî twoGOSim","text":"Similarity value.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/twoGOSim.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Protein Similarity Calculation based on Gene Ontology (GO) Similarity ‚Äî twoGOSim","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/twoGOSim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Protein Similarity Calculation based on Gene Ontology (GO) Similarity ‚Äî twoGOSim","text":"","code":"if (FALSE) {  # Be careful when testing this since it involves GO similarity computation # and might produce unpredictable results in some environments  library(\"GOSemSim\") library(\"org.Hs.eg.db\")  # By GO terms go1 <- c(\"GO:0004022\", \"GO:0004024\", \"GO:0004023\") go2 <- c(\"GO:0009055\", \"GO:0020037\") twoGOSim(go1, go2, type = \"go\", ont = \"MF\", measure = \"Wang\")  # By Entrez gene id gene1 <- \"1956\" # EGFR gene2 <- \"2261\" # FGFR3 twoGOSim(gene1, gene2, type = \"gene\", ont = \"BP\", measure = \"Lin\") }"},{"path":"https://nanx.me/protr/reference/twoSeqSim.html","id":null,"dir":"Reference","previous_headings":"","what":"Protein Sequence Alignment for Two Protein Sequences ‚Äî twoSeqSim","title":"Protein Sequence Alignment for Two Protein Sequences ‚Äî twoSeqSim","text":"Sequence alignment two protein sequences.","code":""},{"path":"https://nanx.me/protr/reference/twoSeqSim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Protein Sequence Alignment for Two Protein Sequences ‚Äî twoSeqSim","text":"","code":"twoSeqSim(   seq1,   seq2,   type = \"local\",   submat = \"BLOSUM62\",   gap.opening = 10,   gap.extension = 4 )"},{"path":"https://nanx.me/protr/reference/twoSeqSim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Protein Sequence Alignment for Two Protein Sequences ‚Äî twoSeqSim","text":"seq1 Character string, containing one protein sequence. seq2 Character string, containing another protein sequence. type Type alignment, default \"local\", \"global\" \"local\", \"global\" represents Needleman-Wunsch global alignment; \"local\" represents Smith-Waterman local alignment. submat Substitution matrix, default \"BLOSUM62\", can one \"BLOSUM45\", \"BLOSUM50\", \"BLOSUM62\", \"BLOSUM80\", \"BLOSUM100\", \"PAM30\", \"PAM40\", \"PAM70\", \"PAM120\", \"PAM250\". gap.opening cost required open gap length alignment. Defaults 10. gap.extension cost extend length existing gap 1. Defaults 4.","code":""},{"path":"https://nanx.me/protr/reference/twoSeqSim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Protein Sequence Alignment for Two Protein Sequences ‚Äî twoSeqSim","text":"Biostrings object containing alignment scores   alignment information.","code":""},{"path":[]},{"path":"https://nanx.me/protr/reference/twoSeqSim.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Protein Sequence Alignment for Two Protein Sequences ‚Äî twoSeqSim","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/protr/reference/twoSeqSim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Protein Sequence Alignment for Two Protein Sequences ‚Äî twoSeqSim","text":"","code":"if (FALSE) {  # Be careful when testing this since it involves sequence alignment # and might produce unpredictable results in some environments library(\"Biostrings\") s1 <- readFASTA(system.file(\"protseq/P00750.fasta\", package = \"protr\"))[[1]] s2 <- readFASTA(system.file(\"protseq/P10323.fasta\", package = \"protr\"))[[1]] seqalign <- twoSeqSim(s1, s2) summary(seqalign) score(seqalign) }"},{"path":[]},{"path":"https://nanx.me/protr/news/index.html","id":"new-features-1-7-1","dir":"Changelog","previous_headings":"","what":"New features","title":"protr 1.7-1","text":"crossSetSim() now gains two new arguments batches verbose. batches argument allows users split similarity computations multiple batches, useful dealing large number sequences limited RAM. verbose argument enables progress updates computation. brings crossSetSim() feature parity parSeqSim(). (thanks, @ofleitas, #41) new function crossSetSimDisk() implemented disk-based version crossSetSim(). function follows similar approach parSeqSimDisk(), partial results batch cached hard drive merged end. allows processing larger protein sequence sets may fit RAM (#41).","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"protr-17-0","dir":"Changelog","previous_headings":"","what":"protr 1.7-0","title":"protr 1.7-0","text":"CRAN release: 2023-10-30","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"new-features-1-7-0","dir":"Changelog","previous_headings":"","what":"New features","title":"protr 1.7-0","text":"crossSetSim() added calculating pairwise similarity two sets protein sequence based sequence alignment (thanks, @seb-mueller, #34).","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"protr-16-3","dir":"Changelog","previous_headings":"","what":"protr 1.6-3","title":"protr 1.6-3","text":"CRAN release: 2023-03-05","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"bug-fixes-1-6-3","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"protr 1.6-3","text":"Fixed minor bug extractProtFP() extractProtFPGap() index = NULL (thanks, @fcampelo, #30).","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"improvements-1-6-3","dir":"Changelog","previous_headings":"","what":"Improvements","title":"protr 1.6-3","text":"Added comment system.file() usage avoid confusion (thanks, @jonalv, #31). Replaced previous CI/CD solutions GitHub Actions workflows. Fixed broken moved links function documentation vignettes. Replaced original logo new hex sticker logo.","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"protr-16-2","dir":"Changelog","previous_headings":"","what":"protr 1.6-2","title":"protr 1.6-2","text":"CRAN release: 2019-05-18","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"improvements-1-6-2","dir":"Changelog","previous_headings":"","what":"Improvements","title":"protr 1.6-2","text":"Switched tidyverse code style. Updated GitHub repository links reflect handle change. Removed AppVeyor CI due frequent Bioconductor dependency installation issues.","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"protr-16-1","dir":"Changelog","previous_headings":"","what":"protr 1.6-1","title":"protr 1.6-1","text":"CRAN release: 2019-02-24","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"improvements-1-6-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"protr 1.6-1","text":"Added new argument batches parSeqSim(). new argument supports breaking pairwise similarity computation smaller batches. useful large number protein sequences, enough number CPU cores, enough RAM compute hold pairwise similarities single batch. Also, use new argument verbose track computation progress.","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"new-features-1-6-1","dir":"Changelog","previous_headings":"","what":"New features","title":"protr 1.6-1","text":"Added new function parSeqSimDisk(). Compared -memory version parSeqSim(), new function caches partial results batch hard drive merges results together end. reduce memory usage parallel similarity computations involving large number protein sequences.","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"bug-fixes-1-6-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"protr 1.6-1","text":"Fixed issue parGOSim() create minor numerical inconsistencies results due argument matching.","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"protr-16-0","dir":"Changelog","previous_headings":"","what":"protr 1.6-0","title":"protr 1.6-0","text":"CRAN release: 2019-02-11","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"bug-fixes-1-6-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"protr 1.6-0","text":"Updated twoGOSim() parGOSim() use latest GOSemSim API computing GO based semantic similarity. Issues code examples also fixed. thank Denisa Duma feedback.","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"protr-15-2","dir":"Changelog","previous_headings":"","what":"protr 1.5-2","title":"protr 1.5-2","text":"CRAN release: 2018-11-22","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"bug-fixes-1-5-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"protr 1.5-2","text":"Fixed API endpoint issue (HTTP HTTPS) getUniProt().","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"improvements-1-5-2","dir":"Changelog","previous_headings":"","what":"Improvements","title":"protr 1.5-2","text":"Added two new parameters gap.opening gap.extension parSeqSim(), allowing flexible tuning sequence alignment types amino acid sequence data. thank Dr.¬†Maisa Pinheiro feedback. Added floating TOC new CSS style vignette improve navigation readability.","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"protr-15-1","dir":"Changelog","previous_headings":"","what":"protr 1.5-1","title":"protr 1.5-1","text":"CRAN release: 2018-07-13","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"new-features-1-5-1","dir":"Changelog","previous_headings":"","what":"New features","title":"protr 1.5-1","text":"Added new function removeGaps() removing/replacing gaps (-) irregular characters protein sequences, make suitable feature extraction sequence alignment based similarity computation. thank Dr.¬†Maisa Pinheiro feedback.","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"protr-15-0","dir":"Changelog","previous_headings":"","what":"protr 1.5-0","title":"protr 1.5-0","text":"CRAN release: 2017-11-18","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"bug-fixes-1-5-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"protr 1.5-0","text":"Resolved critical bug due improper ifelse conditioning (3f6e106) distribution descriptor CTD. thank Jielu Yan University Macau kindly reporting issue.","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"improvements-1-5-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"protr 1.5-0","text":"General fixes improvements package vignette.","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"protr-14-2","dir":"Changelog","previous_headings":"","what":"protr 1.4-2","title":"protr 1.4-2","text":"CRAN release: 2017-09-29","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"improvements-1-4-2","dir":"Changelog","previous_headings":"","what":"Improvements","title":"protr 1.4-2","text":"Functions now organized sections documentation website (https://nanx./protr/reference/). Use system font stack instead Google Fonts vignettes avoid pandoc SSL issue.","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"protr-14-1","dir":"Changelog","previous_headings":"","what":"protr 1.4-1","title":"protr 1.4-1","text":"CRAN release: 2017-07-09","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"improvements-1-4-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"protr 1.4-1","text":"Converted table images Markdown tables vignette. Updated screenshot protrweb vignette.","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"protr-14-0","dir":"Changelog","previous_headings":"","what":"protr 1.4-0","title":"protr 1.4-0","text":"CRAN release: 2017-06-06","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"improvements-1-4-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"protr 1.4-0","text":"Migrated Sweave-based PDF vignette knitr-based HTML vignette.","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"protr-13-0","dir":"Changelog","previous_headings":"","what":"protr 1.3-0","title":"protr 1.3-0","text":"CRAN release: 2017-05-08","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"improvements-1-3-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"protr 1.3-0","text":"Fix obsolete URLs. Better R code formatting. Better function documentation vignette formatting.","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"protr-12-1","dir":"Changelog","previous_headings":"","what":"protr 1.2-1","title":"protr 1.2-1","text":"CRAN release: 2016-12-30","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"improvements-1-2-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"protr 1.2-1","text":"New documentation website: https://nanx./protr/. Added Windows continuous integration support using AppVeyor. Better R file naming scheme.","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"protr-12-0","dir":"Changelog","previous_headings":"","what":"protr 1.2-0","title":"protr 1.2-0","text":"CRAN release: 2016-11-12","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"improvements-1-2-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"protr 1.2-0","text":"Added continuous integration. Code code style improvements.","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"protr-11-1","dir":"Changelog","previous_headings":"","what":"protr 1.1-1","title":"protr 1.1-1","text":"CRAN release: 2015-12-29","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"bug-fixes-1-1-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"protr 1.1-1","text":"Use http://protr.org. Remove inaccessible URLs.","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"protr-11-0","dir":"Changelog","previous_headings":"","what":"protr 1.1-0","title":"protr 1.1-0","text":"2015-12-28","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"bug-fixes-1-1-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"protr 1.1-0","text":"Bug fix extractCTDD().","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"protr-10-1","dir":"Changelog","previous_headings":"","what":"protr 1.0-1","title":"protr 1.0-1","text":"CRAN release: 2015-11-27","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"bug-fixes-1-0-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"protr 1.0-1","text":"Improvements dealing boundary cases several functions (thanks @koefoed‚Äôs patches).","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"improvements-1-0-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"protr 1.0-1","text":"Added citation information.","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"protr-05-1","dir":"Changelog","previous_headings":"","what":"protr 0.5-1","title":"protr 0.5-1","text":"CRAN release: 2014-12-24","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"improvements-0-5-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"protr 0.5-1","text":"Minor improvements fixes documentation.","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"protr-05-0","dir":"Changelog","previous_headings":"","what":"protr 0.5-0","title":"protr 0.5-0","text":"2014-12-18","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"improvements-0-5-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"protr 0.5-0","text":"Added functions allowing users specify classification amino acid. Documentation improvements. minor improvements.","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"protr-04-1","dir":"Changelog","previous_headings":"","what":"protr 0.4-1","title":"protr 0.4-1","text":"CRAN release: 2014-10-10","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"improvements-0-4-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"protr 0.4-1","text":"General documentation improvements.","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"protr-04-0","dir":"Changelog","previous_headings":"","what":"protr 0.4-0","title":"protr 0.4-0","text":"2014-09-20","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"new-features-0-4-0","dir":"Changelog","previous_headings":"","what":"New features","title":"protr 0.4-0","text":"Added profile-based descriptors derived PSSM.","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"protr-03-0","dir":"Changelog","previous_headings":"","what":"protr 0.3-0","title":"protr 0.3-0","text":"2014-06-20","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"improvements-0-3-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"protr 0.3-0","text":"Added example workflow using protr vignette.","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"protr-02-1","dir":"Changelog","previous_headings":"","what":"protr 0.2-1","title":"protr 0.2-1","text":"CRAN release: 2014-01-25","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"improvements-0-2-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"protr 0.2-1","text":"Added LICENSE file according CRAN policies.","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"protr-02-0","dir":"Changelog","previous_headings":"","what":"protr 0.2-0","title":"protr 0.2-0","text":"CRAN release: 2013-12-19","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"protr 0.2-0","text":"Second release. Added Proteochemometric (PCM) Modeling descriptors, parallelized similarity computation derived protein sequence alignment Gene Ontology (GO) semantic similarity measures list protein sequences / GO terms / Entrez gene IDs. Added miscellaneous tools datasets. Initial version scales-based descriptors derived principal components analysis. Initial version scales-based descriptors derived AA-properties (AAindex). Initial version scales-based descriptors derived 20+ classes 2D 3D molecular descriptors. Initial version scales-based descriptors derived factor analysis. Initial version scales-based descriptors derived multidimensional scaling. Initial version BLOSUM PAM Matrix-Derived Descriptors. Initial version parallelized pairwise similarity calculation list protein sequences. Initial version pairwise semantic similarity calculation list GO terms / Entrez gene IDs. Initial version Auto Cross Covariance (ACC) generating scales-based descriptors length. Introducing ProtWeb, web service based protr: http://protr.org.","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"protr-01-0","dir":"Changelog","previous_headings":"","what":"protr 0.1-0","title":"protr 0.1-0","text":"CRAN release: 2012-11-18","code":""},{"path":"https://nanx.me/protr/news/index.html","id":"new-features-0-1-0","dir":"Changelog","previous_headings":"","what":"New features","title":"protr 0.1-0","text":"Initial version. First version Amino Acid Composition descriptor. First version Dipeptide Composition descriptor. First version Tripeptide Composition descriptor. First version Normalized Moreau-Broto Autocorrelation descriptor. First version Moran Autocorrelation descriptor. First version Geary Autocorrelation descriptor. First version CTD - Composition descriptor. First version CTD - Transition descriptor. First version CTD - Distribution descriptor. First version Conjoint Triad descriptor. First version Sequence Order Coupling Number descriptor. First version Quasi-Sequence-Order descriptor. First version Pseudo Amino Acid Composition descriptor. First version Amphiphilic Pseudo Amino Acid Composition descriptor. First version readFASTA(). First version getUniProt(). First version protcheck(). First version protseg().","code":""}]
